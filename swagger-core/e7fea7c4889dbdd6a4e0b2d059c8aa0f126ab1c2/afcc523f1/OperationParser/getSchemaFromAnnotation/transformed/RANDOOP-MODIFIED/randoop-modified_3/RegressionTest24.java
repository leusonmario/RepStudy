import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest24 {

    public static boolean debug = false;

    @Test
    public void test12001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("no description");
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        java.lang.String str21 = schema20.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.description("#/components/schemas/");
        java.lang.String str32 = schema29.getTitle();
        boolean boolean33 = schema20.equals((java.lang.Object) schema29);
        java.lang.String str34 = schema29.getDescription();
        java.math.BigDecimal bigDecimal35 = null;
        schema29.setMinimum(bigDecimal35);
        java.lang.Boolean boolean37 = schema29.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#/components/schemas/" + "'", str34, "#/components/schemas/");
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test12002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12002");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        schema31.setMaxProperties((java.lang.Integer) 0);
        schema31.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema67 = schema31.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test12003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        io.swagger.oas.models.media.Schema schema18 = schema16.getNot();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema16.setDiscriminator(discriminator19);
        java.lang.String str21 = schema16.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema16.minProperties((java.lang.Integer) 1);
        schema16.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList36 = schema34.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema42.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        io.swagger.oas.models.media.Schema schema60 = schema42.additionalProperties(schema55);
        java.lang.Boolean boolean61 = schema60.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema34.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema64 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str65 = schema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = schema29.example((java.lang.Object) str65);
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema72 = schema70.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNull(strComparableList36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test12005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema18.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        schema18.setMultipleOf(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = schema18.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema18.writeOnly((java.lang.Boolean) true);
        schema32.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.minimum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12006");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.lang.Integer int28 = schema27.getMinItems();
        schema17.setAdditionalProperties(schema27);
        java.lang.String[] strArray33 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        io.swagger.oas.models.media.Schema schema36 = schema27.required((java.util.List<java.lang.String>) strList34);
        java.lang.Object obj37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.example(obj37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema6.not(schema40);
        io.swagger.oas.models.media.Schema schema43 = schema40.maxLength((java.lang.Integer) (-1));
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList44 = schema43.getEnum();
        schema43.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strComparableList44);
    }

    @Test
    public void test12007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.xml(xML29);
        java.lang.Boolean boolean31 = schema23.getWriteOnly();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema23.xml(xML32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12008");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        java.lang.Boolean boolean8 = schema2.getWriteOnly();
        java.lang.Integer int9 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema schema11 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean12 = schema11.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
    }

    @Test
    public void test12009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12009");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.example(obj33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.lang.Integer int19 = schema15.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional28 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema24.setNot(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("no description");
        schema46.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema39.not(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema39.writeOnly((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema39);
        schema24.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema21.additionalProperties(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema24.externalDocs(externalDocumentation57);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema58.getExtensions();
        io.swagger.oas.models.media.Schema schema61 = schema58.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema58.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test12011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.not(schema5);
        io.swagger.oas.models.media.Schema schema8 = schema6.type("no description");
        io.swagger.oas.models.media.Schema schema10 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("no description");
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.not(schema21);
        java.lang.Boolean boolean25 = schema21.getReadOnly();
        java.lang.Boolean boolean26 = schema21.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal27 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema29 = schema21.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        io.swagger.oas.models.media.Schema schema39 = schema36.title("no description");
        io.swagger.oas.models.media.Schema schema41 = schema39.type("no description");
        io.swagger.oas.models.media.Schema schema43 = schema39.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema39.description("no description");
        java.math.BigDecimal bigDecimal46 = null;
        schema45.setMaximum(bigDecimal46);
        java.lang.Boolean boolean48 = schema45.getNullable();
        io.swagger.oas.models.media.Schema schema50 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        schema29.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema53 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema6.addProperties("no description", schema29);
        io.swagger.oas.models.media.Schema schema56 = schema54.writeOnly((java.lang.Boolean) false);
        schema54.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema54.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema62 = schema54.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass63 = schema62.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertEquals("'" + boolean26 + "' != '" + false + "'", boolean26, false);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test12012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12012");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        schema4.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj11 = schema4.getExample();
        schema4.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal14 = null;
        schema4.setMaximum(bigDecimal14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj11);
    }

    @Test
    public void test12013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12013");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12014");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12015");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.List<java.lang.String> strList8 = schema2.getRequired();
        java.lang.String str9 = schema2.toString();
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        schema13.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = schema13.title("no description");
        io.swagger.oas.models.media.Schema schema19 = schema13.minLength((java.lang.Integer) 0);
        schema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.type("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema19.description("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema19.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema2.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema28.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        schema35.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema35.title("no description");
        schema30.setDefault((java.lang.Object) schema39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12016");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        schema14.setMaxLength((java.lang.Integer) 10);
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
    }

    @Test
    public void test12017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList8 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "");
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList8);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema5.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema5.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test12018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12018");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str27 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("no description");
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema22.not(schema29);
        java.lang.Boolean boolean33 = schema29.getReadOnly();
        java.lang.Boolean boolean34 = schema29.getExclusiveMinimum();
        java.lang.Integer int35 = schema29.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema39.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional43 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema39);
        java.lang.Integer int44 = schema39.getMinProperties();
        java.math.BigDecimal bigDecimal45 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema46 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema46.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema46.discriminator(discriminator51);
        schema46.setTitle("");
        io.swagger.oas.models.media.Schema schema56 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.lang.String str60 = schema59.get$ref();
        io.swagger.oas.models.media.Schema schema62 = schema59.name("no description");
        java.lang.Boolean boolean63 = schema59.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        java.lang.String str67 = schema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.lang.String str71 = schema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema70.name("no description");
        schema73.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema66.not(schema73);
        io.swagger.oas.models.media.Schema schema77 = schema59.not(schema73);
        io.swagger.oas.models.media.Discriminator discriminator78 = null;
        schema73.setDiscriminator(discriminator78);
        io.swagger.oas.models.media.Schema schema81 = schema73.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema73.xml(xML82);
        io.swagger.oas.models.media.Schema schema84 = schema46.not(schema73);
        schema46.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema15.additionalProperties(schema46);
        schema46.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema91 = schema46.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test12019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        schema16.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema22.addRequiredItem("Optional.empty");
        io.swagger.oas.models.media.Schema schema30 = schema22.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList32 = schema31.getRequired();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
    }

    @Test
    public void test12020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema12 = schema6.additionalProperties(schema9);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.maximum(bigDecimal13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema6.setDiscriminator(discriminator15);
        schema6.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test12021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxItems((java.lang.Integer) 0);
        java.lang.String str30 = schema25.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test12022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList8 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "");
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList8);
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema5.xml(xML12);
        schema13.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        schema13.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test12023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        java.lang.Integer int8 = schema7.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = schema7.getProperties();
        schema7.setFormat("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema7.writeOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = null;
        schema7.setRequired(strList14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test12024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12024");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        schema12.setMaxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema12.multipleOf(bigDecimal19);
        schema12.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema24 = schema12.maxItems((java.lang.Integer) 0);
        schema12.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test12025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        java.lang.String str33 = schema31.get$ref();
        schema18.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal37 = schema31.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test12026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        schema23.setDeprecated((java.lang.Boolean) false);
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Object obj30 = schema23.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema32 = schema12.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema32.minLength((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList35 = schema34.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(obj30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList35);
    }

    @Test
    public void test12027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        java.lang.Boolean boolean27 = schema23.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + true + "'", boolean27, true);
    }

    @Test
    public void test12028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12028");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        java.lang.Boolean boolean73 = schema71.getWriteOnly();
        io.swagger.oas.models.media.Schema schema75 = schema71.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema77 = schema71.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema71.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int80 = schema79.getMaxItems();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
    }

    @Test
    public void test12029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12029");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema12.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12030");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        boolean boolean8 = serverListOptional1.isPresent();
        boolean boolean9 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        io.swagger.oas.models.servers.Server[] serverArray12 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList13 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList13, serverArray12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        boolean boolean17 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = schema23.getEnum();
        boolean boolean25 = serverListOptional1.equals((java.lang.Object) schema23);
        boolean boolean26 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strComparableList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test12031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        java.lang.Integer int19 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema12.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema12.$ref("");
        schema12.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema30.title("no description");
        io.swagger.oas.models.media.Schema schema36 = schema30.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema43 = schema39.title("no description");
        io.swagger.oas.models.media.Schema schema44 = schema30.additionalProperties(schema39);
        java.lang.Object obj45 = schema39.getExample();
        io.swagger.oas.models.media.Schema schema47 = schema39.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema49 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema50 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema52.pattern("");
        schema52.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema52.getProperties();
        schema12.setProperties(strMap57);
        io.swagger.oas.models.media.Schema schema60 = schema12.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        schema12.setExternalDocs(externalDocumentation61);
        java.lang.Integer int63 = schema12.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int63);
    }

    @Test
    public void test12032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema31.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema67 = schema65.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema65.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema65.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema65.minItems((java.lang.Integer) 100);
        java.lang.Integer int74 = schema73.getMaxItems();
        java.lang.Boolean boolean75 = schema73.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + true + "'", boolean75, true);
    }

    @Test
    public void test12033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12033");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.maximum(bigDecimal28);
        java.lang.Boolean boolean30 = schema29.getUniqueItems();
        io.swagger.oas.annotations.servers.Server[] serverArray32 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional33 = io.swagger.jaxrs2.OperationParser.getServers(serverArray32);
        io.swagger.oas.models.servers.Server[] serverArray34 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList35 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList35, serverArray34);
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = serverListOptional33.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList35);
        boolean boolean38 = serverListOptional33.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.minimum(bigDecimal45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema41.properties(strMap47);
        java.lang.Boolean boolean49 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema56.title("no description");
        java.lang.Boolean boolean60 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema56.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema56.$ref("");
        schema41.setAdditionalProperties(schema64);
        java.lang.String str66 = schema64.getName();
        java.lang.Object obj67 = schema64.getExample();
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema64.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema64.maxLength((java.lang.Integer) 10);
        boolean boolean72 = serverListOptional33.equals((java.lang.Object) schema64);
        io.swagger.oas.annotations.servers.Server[] serverArray73 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional74 = io.swagger.jaxrs2.OperationParser.getServers(serverArray73);
        io.swagger.oas.models.servers.Server[] serverArray75 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList76 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList76, serverArray75);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional74.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList76);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional79 = java.util.Optional.ofNullable(serverList78);
        boolean boolean80 = serverListOptional79.isPresent();
        boolean boolean81 = serverListOptional79.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList82 = serverListOptional79.get();
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional33.orElse(serverList82);
        schema29.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) serverList82);
        schema29.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        schema29.setExternalDocs(externalDocumentation87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertNotNull(serverListOptional33);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(serverList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(serverArray73);
        org.junit.Assert.assertNotNull(serverListOptional74);
        org.junit.Assert.assertNotNull(serverArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertNotNull(serverListOptional79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serverList82);
        org.junit.Assert.assertNotNull(serverList83);
    }

    @Test
    public void test12034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        java.lang.String str80 = schema79.getTitle();
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema79.multipleOf(bigDecimal81);
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.xml(xML83);
        schema84.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test12035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema18.type("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema32 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        schema32.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema36 = schema32.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12036");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.xml(xML8);
        schema2.setDescription("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.multipleOf(bigDecimal12);
        io.swagger.oas.annotations.media.Content[] contentArray14 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components21);
        io.swagger.oas.models.media.Schema schema23 = schema13.example((java.lang.Object) contentArray14);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components24);
        java.lang.Class<?> wildcardClass26 = contentOptional25.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contentArray14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test12037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12037");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        java.lang.Boolean boolean73 = schema71.getWriteOnly();
        java.lang.String str74 = schema71.getFormat();
        io.swagger.oas.models.media.Schema schema76 = schema71.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema71.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList79 = schema71.getRequired();
        schema71.setPattern("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema71.getProperties();
        schema71.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test12038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("no description");
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        java.lang.String str21 = schema20.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.description("#/components/schemas/");
        java.lang.String str32 = schema29.getTitle();
        boolean boolean33 = schema20.equals((java.lang.Object) schema29);
        schema20.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test12039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12039");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema4.maxProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean15 = schema4.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema4.getProperties();
        java.lang.String str17 = schema4.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test12040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.discriminator(discriminator8);
        io.swagger.oas.models.media.XML xML10 = null;
        schema5.setXml(xML10);
        java.lang.Boolean boolean12 = schema5.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema15.getDiscriminator();
        schema15.setType("no description");
        java.lang.Boolean boolean22 = schema15.getReadOnly();
        io.swagger.oas.models.media.Schema schema24 = schema15.uniqueItems((java.lang.Boolean) false);
        schema15.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema15.maximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema28.minLength((java.lang.Integer) 100);
        schema5.setExample((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema32 = schema5.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema32);
    }

    @Test
    public void test12041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal50 = schema18.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test12042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12042");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        java.util.Optional<io.swagger.oas.annotations.responses.ApiResponse[]> apiResponseArrayOptional29 = java.util.Optional.ofNullable(apiResponseArray0);
        javax.ws.rs.Produces produces30 = null;
        javax.ws.rs.Produces produces31 = null;
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional33 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces30, produces31, components32);
        org.junit.Assert.assertNotNull(apiResponseArray0);
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        org.junit.Assert.assertNotNull(apiResponseArrayOptional29);
        org.junit.Assert.assertNotNull(apiResponsesOptional33);
    }

    @Test
    public void test12043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema schema46 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema46.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema56.title("no description");
        java.lang.Boolean boolean60 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema56.nullable((java.lang.Boolean) true);
        schema56.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator65 = schema56.getDiscriminator();
        schema48.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema56);
        java.math.BigDecimal bigDecimal67 = null;
        schema48.setMaximum(bigDecimal67);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(discriminator65);
    }

    @Test
    public void test12044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12044");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        boolean boolean7 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        schema30.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean46 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        io.swagger.oas.models.media.Discriminator discriminator63 = schema62.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        schema66.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean69 = schema66.getUniqueItems();
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema66);
        schema66.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema73 = schema54.not(schema66);
        io.swagger.oas.models.media.Schema schema75 = schema73.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        schema43.setNot(schema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema82 = schema81.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema84 = schema81.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList87 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "");
        schema84.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema77.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema30.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema30.setMaxItems((java.lang.Integer) 100);
        java.lang.String str95 = schema30.toString();
        io.swagger.oas.models.media.Schema schema96 = schema23.additionalProperties(schema30);
        io.swagger.oas.models.media.XML xML97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema30.xml(xML97);
        java.lang.Boolean boolean99 = schema98.getWriteOnly();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(discriminator63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str95, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(boolean99);
    }

    @Test
    public void test12045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12045");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema schema23 = schema12.example((java.lang.Object) serverArray21);
        java.util.Optional<java.lang.Cloneable> cloneableOptional24 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(cloneableOptional24);
        org.junit.Assert.assertNotNull(serverListOptional25);
    }

    @Test
    public void test12046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema17 = schema6.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean18 = schema17.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + boolean18 + "' != '" + false + "'", boolean18, false);
    }

    @Test
    public void test12047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        schema30.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema30.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        schema30.setDiscriminator(discriminator35);
        schema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean39 = schema30.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + false + "'", boolean39, false);
    }

    @Test
    public void test12048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12048");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = java.util.Optional.ofNullable(serverList5);
        boolean boolean7 = serverListOptional6.isPresent();
        boolean boolean8 = serverListOptional6.isPresent();
        io.swagger.oas.annotations.links.LinkParameters linkParameters9 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameters9);
        boolean boolean11 = serverListOptional6.equals((java.lang.Object) strMap10);
        boolean boolean12 = serverListOptional6.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = schema19.not(schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        schema33.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean36 = schema33.getReadOnly();
        io.swagger.oas.models.media.Schema schema38 = schema33.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema23.not(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList48 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean49 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean50 = strComparableList48.add((java.lang.Comparable<java.lang.String>) "");
        schema45.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList48);
        schema39.setNot(schema45);
        io.swagger.oas.models.media.Schema schema54 = schema39.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator55 = null;
        schema39.setDiscriminator(discriminator55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema39.maximum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema39.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema65.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema68 = schema65.format("no description");
        io.swagger.oas.models.media.Schema schema70 = schema68.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema71.pattern("no description");
        strComparableSchema71.setMaxProperties((java.lang.Integer) 10);
        schema68.setDefault((java.lang.Object) strComparableSchema71);
        io.swagger.oas.models.media.Schema schema79 = null;
        schema68.setNot(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema62.additionalProperties(schema68);
        schema62.setExclusiveMaximum((java.lang.Boolean) true);
        boolean boolean84 = serverListOptional6.equals((java.lang.Object) schema62);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test12049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12049");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal20 = schema18.getMinimum();
        schema18.setTitle("Optional.empty");
        java.lang.Boolean boolean23 = schema18.getUniqueItems();
        java.math.BigDecimal bigDecimal24 = schema18.getMinimum();
        java.lang.Boolean boolean25 = schema18.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertEquals("'" + boolean23 + "' != '" + false + "'", boolean23, false);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test12050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema26 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema26);
        schema27.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.externalDocs(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema2.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema19.minLength((java.lang.Integer) 0);
        schema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean24 = schema19.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + boolean24 + "' != '" + true + "'", boolean24, true);
    }

    @Test
    public void test12052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema12.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal26 = null;
        schema12.setMultipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema12.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.minimum(bigDecimal30);
        java.lang.String str32 = schema31.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test12053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        schema2.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = null;
        schema2.setEnum(strComparableList29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema2.multipleOf(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.title("no description");
        java.lang.Object obj45 = schema44.getExample();
        io.swagger.oas.models.media.Schema schema47 = schema44.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema34.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.lang.String str52 = schema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.lang.String str56 = schema55.get$ref();
        io.swagger.oas.models.media.Schema schema58 = schema55.name("no description");
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema51.not(schema58);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema51.getExtensions();
        schema51.setMinLength((java.lang.Integer) 10);
        schema51.setName("no description");
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema51.multipleOf(bigDecimal67);
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.discriminator(discriminator69);
        io.swagger.oas.models.media.Schema schema71 = schema34.example((java.lang.Object) schema68);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList72 = schema68.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strComparableList72);
    }

    @Test
    public void test12054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.setName("no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        java.lang.Boolean boolean20 = schema19.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema19.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test12055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = schema21.getDeprecated();
        schema5.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.lang.Integer int35 = schema34.getMinItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("no description");
        io.swagger.oas.models.media.Schema schema39 = schema37.title("hi!");
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.minimum(bigDecimal40);
        schema5.setExample((java.lang.Object) schema39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12056");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.writeOnly((java.lang.Boolean) false);
        java.lang.Object obj31 = schema27.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test12057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema10 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = null;
        schema5.setEnum(strComparableList11);
        schema5.setType("");
        io.swagger.oas.models.media.Schema schema16 = schema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test12058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12058");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMinimum();
        schema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema25.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.lang.Integer int40 = schema39.getMinItems();
        io.swagger.oas.models.media.Schema schema42 = schema39.title("no description");
        io.swagger.oas.models.media.Schema schema44 = schema42.type("no description");
        java.lang.String str45 = schema42.getTitle();
        io.swagger.oas.models.media.XML xML46 = schema42.getXml();
        boolean boolean47 = schema32.equals((java.lang.Object) xML46);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema32.getExternalDocs();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema32.maximum(bigDecimal49);
        java.lang.String str51 = schema32.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "no description" + "'", str45, "no description");
        org.junit.Assert.assertNull(xML46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test12059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.setType("hi!");
        java.lang.String str19 = schema16.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema16.setDiscriminator(discriminator20);
        schema16.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test12060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema18.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test12061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12061");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema19 = schema16.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.lang.Integer int27 = schema26.getMinItems();
        schema16.setAdditionalProperties(schema26);
        java.lang.String[] strArray32 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema26.required((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema26.minProperties((java.lang.Integer) 0);
        schema13.setNot(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList41 = strComparableSchema40.getRequired();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema40.required((java.util.List<java.lang.String>) strList44);
        schema38.setRequired((java.util.List<java.lang.String>) strList44);
        java.lang.String str48 = schema38.getTitle();
        io.swagger.oas.models.media.Schema schema50 = schema38.maxProperties((java.lang.Integer) 0);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = schema38.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strComparableList51);
    }

    @Test
    public void test12062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema22.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = null;
        schema22.setMinimum(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        schema22.setProperties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema22.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean43 = schema42.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test12063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12063");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema22.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = null;
        schema22.setMinimum(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        schema22.setProperties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema22.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.minimum(bigDecimal49);
        schema50.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test12064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12064");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.properties(strMap24);
        io.swagger.oas.models.media.Schema schema26 = schema25.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema29.title("no description");
        io.swagger.oas.models.media.Schema schema35 = schema29.minLength((java.lang.Integer) 0);
        schema35.setType("Optional.empty");
        schema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema35.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema41.nullable((java.lang.Boolean) false);
        schema25.setAdditionalProperties(schema41);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test12065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12065");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema25.getNullable();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema25.xml(xML31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12066");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        java.lang.Boolean boolean73 = schema71.getWriteOnly();
        java.lang.String str74 = schema71.getFormat();
        io.swagger.oas.models.media.Schema schema76 = schema71.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema71.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema71.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema71.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema71.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema71.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema71.externalDocs(externalDocumentation87);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test12067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12067");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str4 = serverListOptional3.toString();
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional3.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        schema27.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema15.not(schema27);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) false);
        java.lang.String str37 = schema36.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        boolean boolean40 = serverListOptional3.equals((java.lang.Object) schema39);
        boolean boolean41 = serverListOptional3.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList42 = serverListOptional3.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test12068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12068");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test12069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        io.swagger.oas.models.media.Schema schema55 = schema52.title("no description");
        java.lang.Boolean boolean56 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema52.$ref("");
        java.lang.String str61 = schema52.get$ref();
        schema2.setExample((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema schema63 = schema2.getAdditionalProperties();
        schema63.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.xml(xML66);
        schema67.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test12070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema34 = schema28.minLength((java.lang.Integer) 0);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema34.type("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema34.description("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema34.type("no description");
        schema34.setName("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema34.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional53 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        schema49.setNot(schema59);
        schema49.setNullable((java.lang.Boolean) false);
        schema46.setAdditionalProperties(schema49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema65 = schema25.example((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema66 = schema65.getAdditionalProperties();
        schema65.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema65.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema66);
    }

    @Test
    public void test12071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("no description");
        java.math.BigDecimal bigDecimal26 = schema25.getMinimum();
        schema25.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator29 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema40.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = schema36.not(schema40);
        io.swagger.oas.models.media.Schema schema46 = schema36.minItems((java.lang.Integer) 10);
        schema46.setMinLength((java.lang.Integer) 100);
        schema46.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema46.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema52.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = schema56.getExternalDocs();
        io.swagger.oas.models.media.Schema schema59 = schema56.pattern("");
        io.swagger.oas.models.media.Schema schema61 = schema56.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator62 = schema56.getDiscriminator();
        io.swagger.oas.models.media.Schema schema63 = schema25.example((java.lang.Object) schema56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(externalDocumentation57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test12072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12072");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = schema21.getDeprecated();
        schema5.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema29 = schema21.minItems((java.lang.Integer) 100);
        schema21.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema21.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML34 = schema33.getXml();
        java.lang.Boolean boolean35 = schema33.getDeprecated();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.minimum(bigDecimal36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test12073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12073");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) true);
        schema15.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.lang.Boolean boolean32 = schema28.getReadOnly();
        java.lang.Boolean boolean33 = schema28.getExclusiveMinimum();
        java.lang.Integer int34 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema38.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional42 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema38);
        java.lang.Integer int43 = schema38.getMinProperties();
        java.math.BigDecimal bigDecimal44 = schema38.getMaximum();
        io.swagger.oas.models.media.Schema schema45 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        io.swagger.oas.models.media.Schema schema47 = schema45.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema49 = schema47.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean50 = schema49.getReadOnly();
        io.swagger.oas.models.media.XML xML51 = null;
        schema49.setXml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema49.deprecated((java.lang.Boolean) true);
        schema54.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test12074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12074");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj6 = null;
        schema5.setExample(obj6);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        schema5.setExternalDocs(externalDocumentation8);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = schema5.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test12075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean9 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        schema28.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema35 = schema16.not(schema28);
        java.lang.Integer int36 = schema35.getMinLength();
        schema35.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int39 = schema35.getMaxItems();
        io.swagger.oas.models.media.Schema schema41 = schema35.minLength((java.lang.Integer) 0);
        schema35.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema2.not(schema35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema47.title("no description");
        io.swagger.oas.models.media.Schema schema52 = null;
        schema47.setNot(schema52);
        schema47.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema44.additionalProperties(schema47);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema47.minimum(bigDecimal57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test12076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema23.setDiscriminator(discriminator26);
        schema23.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema25.setDiscriminator(discriminator36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema25.multipleOf(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        schema42.setMinLength((java.lang.Integer) 100);
        java.lang.Integer int47 = schema42.getMaxItems();
        java.lang.Boolean boolean48 = schema42.getDeprecated();
        io.swagger.oas.models.media.Schema schema49 = schema39.not(schema42);
        io.swagger.oas.models.media.Schema schema51 = schema39.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema53 = schema39.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test12078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.xml(xML8);
        schema2.setDescription("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.multipleOf(bigDecimal12);
        io.swagger.oas.annotations.media.Content[] contentArray14 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components21);
        io.swagger.oas.models.media.Schema schema23 = schema13.example((java.lang.Object) contentArray14);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional25 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional27 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional29 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional31 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional33 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional35 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components34);
        java.util.Optional<io.swagger.oas.annotations.media.Content[]> contentArrayOptional36 = java.util.Optional.of(contentArray14);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray14, components37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(contentArray14);
        org.junit.Assert.assertNotNull(contentOptional16);
        org.junit.Assert.assertNotNull(contentOptional18);
        org.junit.Assert.assertNotNull(contentOptional20);
        org.junit.Assert.assertNotNull(contentOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(contentOptional25);
        org.junit.Assert.assertNotNull(contentOptional27);
        org.junit.Assert.assertNotNull(contentOptional29);
        org.junit.Assert.assertNotNull(contentOptional31);
        org.junit.Assert.assertNotNull(contentOptional33);
        org.junit.Assert.assertNotNull(contentOptional35);
        org.junit.Assert.assertNotNull(contentArrayOptional36);
        org.junit.Assert.assertNotNull(contentOptional38);
    }

    @Test
    public void test12079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        java.math.BigDecimal bigDecimal39 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema41 = schema6.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        schema6.setMinimum(bigDecimal42);
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test12080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12080");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator2 = null;
        strComparableSchema0.setDiscriminator(discriminator2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML6 = strComparableSchema0.getXml();
        strComparableSchema0.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(xML6);
    }

    @Test
    public void test12081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12081");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.minimum(bigDecimal7);
        schema2.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test12082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12082");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        java.lang.Boolean boolean18 = schema10.getReadOnly();
        schema10.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema10.minimum(bigDecimal21);
        java.lang.Object obj23 = schema22.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
    }

    @Test
    public void test12083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema12.set$ref("");
        io.swagger.oas.models.media.Schema schema23 = schema12.format("#/components/schemas/no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        schema12.setProperties(strMap24);
        io.swagger.oas.models.media.Schema schema26 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test12084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.math.BigDecimal bigDecimal24 = null;
        schema21.setMinimum(bigDecimal24);
        java.lang.Boolean boolean26 = schema21.getDeprecated();
        schema5.setDefault((java.lang.Object) schema21);
        io.swagger.oas.models.media.Schema schema28 = schema21.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema30 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(schema28);
    }

    @Test
    public void test12085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12085");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional5 = java.util.Optional.ofNullable(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        org.junit.Assert.assertNotNull(linkArray1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(linkArrayOptional5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test12086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12086");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.String[] strArray11 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        schema5.setRequired((java.util.List<java.lang.String>) strList12);
        schema5.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str17 = schema5.get$ref();
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = schema5.getMaximum();
        java.math.BigDecimal bigDecimal21 = schema5.getMaximum();
        java.lang.Boolean boolean22 = schema5.getWriteOnly();
        java.lang.String str23 = schema5.getTitle();
        io.swagger.oas.models.media.Schema schema25 = schema5.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int28 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(bigDecimal21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test12087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema23.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        schema29.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test12088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema35 = schema2.pattern("Optional.empty");
        java.math.BigDecimal bigDecimal36 = schema35.getMultipleOf();
        io.swagger.oas.models.media.XML xML37 = schema35.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema40.format("no description");
        io.swagger.oas.models.media.Schema schema45 = schema43.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema46.pattern("no description");
        strComparableSchema46.setMaxProperties((java.lang.Integer) 10);
        schema43.setDefault((java.lang.Object) strComparableSchema46);
        io.swagger.oas.models.media.Schema schema55 = schema43.deprecated((java.lang.Boolean) true);
        schema55.setExclusiveMaximum((java.lang.Boolean) false);
        schema55.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema55.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema35.setExample((java.lang.Object) schema55);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNull(xML37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test12089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12089");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.lang.Integer int36 = schema35.getMinItems();
        schema25.setAdditionalProperties(schema35);
        java.math.BigDecimal bigDecimal38 = null;
        schema35.setMinimum(bigDecimal38);
        java.math.BigDecimal bigDecimal40 = schema35.getMaximum();
        schema22.setNot(schema35);
        schema22.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = schema22.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema51 = schema47.title("no description");
        io.swagger.oas.models.media.Schema schema53 = schema47.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        schema56.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = schema56.title("no description");
        io.swagger.oas.models.media.Schema schema61 = schema47.additionalProperties(schema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.properties(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema69.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        schema73.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean76 = schema73.getUniqueItems();
        io.swagger.oas.models.media.Schema schema77 = schema69.not(schema73);
        io.swagger.oas.models.media.Schema schema79 = schema69.minItems((java.lang.Integer) 10);
        schema79.setMinLength((java.lang.Integer) 100);
        schema79.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator84 = null;
        schema79.setDiscriminator(discriminator84);
        io.swagger.oas.models.media.Schema schema86 = schema47.addProperties("no description", schema79);
        io.swagger.oas.models.media.Schema schema88 = schema47.maxLength((java.lang.Integer) 0);
        java.lang.Integer int89 = schema47.getMinItems();
        schema47.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema93 = schema47.minItems((java.lang.Integer) 0);
        schema22.setNot(schema93);
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema93.multipleOf(bigDecimal95);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test12090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12090");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema26 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema17.setExtensions(strMap28);
        strComparableSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema17.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema17.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.lang.String[] strArray54 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = schema48.required((java.util.List<java.lang.String>) strList55);
        java.lang.Object obj58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.example(obj58);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.multipleOf(bigDecimal60);
        java.lang.String str62 = schema59.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.properties(strMap69);
        java.lang.Integer int71 = schema70.getMinItems();
        io.swagger.oas.models.media.Schema schema73 = schema70.title("no description");
        java.lang.Boolean boolean74 = schema70.getWriteOnly();
        io.swagger.oas.models.media.Schema schema76 = schema70.nullable((java.lang.Boolean) true);
        java.lang.String str77 = schema76.getPattern();
        schema59.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema76);
        java.math.BigDecimal bigDecimal79 = null;
        schema76.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema76.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal83 = schema76.getMinimum();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema17.additionalProperties(schema76);
        strComparableSchema17.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test12091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema28 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean31 = schema30.getReadOnly();
        java.lang.String str32 = schema30.getPattern();
        schema30.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test12092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema30.setExternalDocs(externalDocumentation31);
        java.lang.Boolean boolean33 = schema30.getNullable();
        io.swagger.oas.models.media.XML xML34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema30.xml(xML34);
        schema35.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema6.example((java.lang.Object) schema35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test12093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12093");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema75.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema78 = schema75.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.properties(strMap82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.properties(strMap84);
        java.lang.Integer int86 = schema85.getMinItems();
        schema75.setAdditionalProperties(schema85);
        java.lang.String[] strArray91 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        io.swagger.oas.models.media.Schema schema94 = schema85.required((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema96 = schema85.name("hi!");
        boolean boolean97 = serverListOptional1.equals((java.lang.Object) schema96);
        java.lang.String str98 = serverListOptional1.toString();
        boolean boolean99 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "Optional.empty" + "'", str98, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12094");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        schema13.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema schema27 = schema24.name("no description");
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema20.not(schema27);
        schema20.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj33 = null;
        boolean boolean34 = schema20.equals(obj33);
        io.swagger.oas.models.media.Schema schema36 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str37 = schema36.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema36.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.not(schema40);
        schema13.setExample((java.lang.Object) schema39);
        java.lang.Integer int43 = schema39.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test12095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        schema42.setPattern("no description");
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.lang.Integer int61 = schema60.getMinItems();
        schema50.setAdditionalProperties(schema60);
        java.lang.String[] strArray66 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = schema60.required((java.util.List<java.lang.String>) strList67);
        java.lang.String str70 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema71 = schema42.not(schema60);
        java.math.BigDecimal bigDecimal72 = schema42.getMinimum();
        schema42.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema42.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.xml(xML77);
        io.swagger.oas.models.media.Schema schema80 = schema78.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test12096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.deprecated((java.lang.Boolean) false);
        schema5.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema10.setAdditionalProperties(schema20);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        schema35.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema35);
        io.swagger.oas.models.media.Schema schema41 = schema31.minItems((java.lang.Integer) 10);
        schema41.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean44 = schema41.getNullable();
        java.math.BigDecimal bigDecimal45 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema47 = schema41.maxLength((java.lang.Integer) (-1));
        schema24.setNot(schema47);
        boolean boolean49 = schema5.equals((java.lang.Object) schema47);
        io.swagger.oas.models.media.Schema schema51 = schema5.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema54 = schema51.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema54.title("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal57 = null;
        schema56.setMultipleOf(bigDecimal57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test12097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema31.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema67 = schema65.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = schema65.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema70.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test12098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12098");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema5.deprecated((java.lang.Boolean) true);
        schema5.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema5.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.lang.String str18 = schema17.get$ref();
        io.swagger.oas.models.media.Schema schema20 = schema17.name("no description");
        java.lang.Boolean boolean21 = schema17.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema24.not(schema31);
        io.swagger.oas.models.media.Schema schema35 = schema17.not(schema31);
        io.swagger.oas.models.media.Schema schema37 = schema17.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList38 = schema17.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.lang.Integer int52 = schema51.getMinItems();
        schema41.setAdditionalProperties(schema51);
        java.math.BigDecimal bigDecimal54 = null;
        schema51.setMaximum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema51.maxProperties((java.lang.Integer) 1);
        schema17.setAdditionalProperties(schema57);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema17.minimum(bigDecimal59);
        schema60.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema60.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        schema68.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema68.title("no description");
        io.swagger.oas.models.media.Schema schema74 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema60.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema74);
        schema14.setNot(schema60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strComparableList38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test12099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema12.format("no description");
        java.lang.Class<?> wildcardClass18 = schema12.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional19 = java.util.Optional.ofNullable((java.lang.reflect.GenericDeclaration) wildcardClass18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(genericDeclarationOptional19);
    }

    @Test
    public void test12100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        schema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "hi!");
        java.lang.Boolean boolean30 = schema27.getNullable();
        java.lang.String str31 = schema27.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test12101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.maximum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("Optional[[]]");
        java.lang.Object obj15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.example(obj15);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test12102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12102");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList36 = schema34.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema42.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        io.swagger.oas.models.media.Schema schema60 = schema42.additionalProperties(schema55);
        java.lang.Boolean boolean61 = schema60.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema34.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema64 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str65 = schema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = schema29.example((java.lang.Object) str65);
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.xml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema66.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNull(strComparableList36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
    }

    @Test
    public void test12103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12103");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema9.getExtensions();
        java.lang.Object obj21 = schema9.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        schema9.setProperties(strMap22);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.lang.Integer int32 = schema31.getMinItems();
        io.swagger.oas.models.media.Schema schema34 = schema31.title("no description");
        java.lang.Boolean boolean35 = schema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema31.$ref("");
        java.lang.Integer int40 = schema31.getMinItems();
        java.lang.String str41 = schema31.getDescription();
        io.swagger.oas.models.media.Schema schema43 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean44 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema46 = schema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean47 = serverListOptional1.equals((java.lang.Object) schema31);
        java.lang.String str48 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Optional.empty" + "'", str48, "Optional.empty");
    }

    @Test
    public void test12104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema19 = schema16.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.lang.Integer int27 = schema26.getMinItems();
        schema16.setAdditionalProperties(schema26);
        java.lang.String[] strArray32 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        io.swagger.oas.models.media.Schema schema35 = schema26.required((java.util.List<java.lang.String>) strList33);
        java.lang.String str36 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema26.minProperties((java.lang.Integer) 0);
        schema13.setNot(schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList41 = strComparableSchema40.getRequired();
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema40.required((java.util.List<java.lang.String>) strList44);
        schema38.setRequired((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema schema49 = schema38.minItems((java.lang.Integer) 0);
        schema38.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test12105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12105");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.xml(xML8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str27 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("no description");
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema29.setDiscriminator(discriminator32);
        io.swagger.oas.models.media.Schema schema35 = schema29.addRequiredItem("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        schema29.setExternalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema29.format("Optional.empty");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList40 = schema29.getEnum();
        io.swagger.oas.models.media.Schema schema42 = schema29.name("");
        io.swagger.oas.models.media.Schema schema44 = schema42.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema53.getNot();
        java.lang.Boolean boolean57 = schema53.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema53.discriminator(discriminator58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema62.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema62.format("no description");
        schema65.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        io.swagger.oas.models.media.Discriminator discriminator75 = schema74.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        schema78.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean81 = schema78.getUniqueItems();
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema78);
        io.swagger.oas.models.media.Schema schema83 = schema65.additionalProperties(schema78);
        java.lang.String[] strArray86 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema78.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema90 = schema59.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema91 = schema50.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.XML xML92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema91.xml(xML92);
        schema44.setDefault((java.lang.Object) schema93);
        io.swagger.oas.models.media.Schema schema96 = schema93.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: -1\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strComparableList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test12106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        java.lang.Integer int5 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema7 = schema2.format("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test12107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12107");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.xml(xML17);
        java.lang.Integer int19 = schema16.getMinLength();
        io.swagger.oas.models.media.Schema schema21 = schema16.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12108");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12109");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema26.not(schema30);
        schema30.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema18.not(schema30);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema schema52 = schema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema48.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        io.swagger.oas.models.media.Discriminator discriminator62 = schema61.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean68 = schema65.getUniqueItems();
        io.swagger.oas.models.media.Schema schema69 = schema61.not(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.format("no description");
        schema75.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema61.not(schema75);
        io.swagger.oas.models.media.Schema schema80 = schema61.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema80.setRequired((java.util.List<java.lang.String>) strList86);
        schema48.setRequired((java.util.List<java.lang.String>) strList86);
        schema37.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema11.additionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema93 = schema37.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean94 = schema37.getDeprecated();
        java.lang.Integer int95 = schema37.getMinItems();
        java.lang.String str96 = schema37.get$ref();
        java.math.BigDecimal bigDecimal97 = null;
        schema37.setMultipleOf(bigDecimal97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNull(int95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test12110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        schema30.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema36.minLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList39 = schema36.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        schema58.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean61 = schema58.getUniqueItems();
        io.swagger.oas.models.media.Schema schema62 = schema54.not(schema58);
        schema58.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema46.not(schema58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) true);
        schema46.setDefault((java.lang.Object) schema70);
        io.swagger.oas.models.media.Schema schema72 = schema36.additionalProperties(schema70);
        schema72.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test12111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Schema schema7 = schema2.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal8 = schema2.getMultipleOf();
        schema2.setTitle("#/components/schemas/no description");
        schema2.setMinProperties((java.lang.Integer) (-1));
        java.lang.String str13 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test12112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12112");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema31 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.format("no description");
        java.lang.String str38 = schema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.format("no description");
        schema44.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema62 = schema44.additionalProperties(schema57);
        schema62.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema37.not(schema62);
        io.swagger.oas.models.media.Schema schema66 = schema37.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = schema70.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema73 = schema70.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema74.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.properties(strMap77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        java.lang.Integer int81 = schema80.getMinItems();
        schema70.setAdditionalProperties(schema80);
        java.math.BigDecimal bigDecimal83 = null;
        schema80.setMaximum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = schema80.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema88 = schema80.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema89 = schema37.addProperties("no description", schema80);
        io.swagger.oas.models.media.Schema schema90 = schema25.additionalProperties(schema80);
        io.swagger.oas.models.media.Schema schema92 = schema80.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema93 = schema8.example((java.lang.Object) schema80);
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        schema93.setDiscriminator(discriminator94);
        io.swagger.oas.models.media.Schema schema97 = schema93.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema99 = schema97.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test12113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12113");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        schema42.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        schema48.setAdditionalProperties(schema58);
        java.lang.String[] strArray64 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema58.required((java.util.List<java.lang.String>) strList65);
        java.lang.Object obj68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.example(obj68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.xml(xML72);
        java.lang.Boolean boolean74 = schema71.getExclusiveMinimum();
        schema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        java.lang.String str80 = schema79.get$ref();
        io.swagger.oas.models.media.Schema schema82 = schema79.name("no description");
        schema82.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema82.setDiscriminator(discriminator85);
        io.swagger.oas.models.media.Schema schema88 = schema82.addRequiredItem("hi!");
        io.swagger.oas.models.media.Discriminator discriminator89 = schema82.getDiscriminator();
        io.swagger.oas.models.media.Schema schema90 = schema71.additionalProperties(schema82);
        schema42.setAdditionalProperties(schema90);
        schema90.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int94 = schema90.getMinItems();
        io.swagger.oas.models.media.Schema schema96 = schema90.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema98 = schema96.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(discriminator89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test12115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema12.title("#/components/schemas/");
        schema12.setType("no description");
        java.lang.Integer int21 = schema12.getMinLength();
        java.lang.Boolean boolean22 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema12.addRequiredItem("hi!");
        java.lang.Class<?> wildcardClass25 = schema24.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test12116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = schema19.name("no description");
        java.lang.Boolean boolean23 = schema19.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        schema19.setProperties(strMap24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema19.externalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = schema27.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        schema31.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.discriminator(discriminator44);
        java.lang.Integer int46 = schema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema48 = schema41.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema56 = schema53.format("no description");
        schema56.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        io.swagger.oas.models.media.Discriminator discriminator66 = schema65.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        schema69.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean72 = schema69.getUniqueItems();
        io.swagger.oas.models.media.Schema schema73 = schema65.not(schema69);
        io.swagger.oas.models.media.Schema schema74 = schema56.additionalProperties(schema69);
        java.lang.String[] strArray77 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema69.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = schema48.required((java.util.List<java.lang.String>) strList78);
        schema27.setRequired((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema83 = schema11.required((java.util.List<java.lang.String>) strList78);
        schema83.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(discriminator66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test12117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.xml(xML29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema30.getProperties();
        java.math.BigDecimal bigDecimal32 = schema30.getMaximum();
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
    }

    @Test
    public void test12118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        boolean boolean17 = schema9.equals((java.lang.Object) 100L);
        io.swagger.oas.models.media.Schema schema19 = schema9.deprecated((java.lang.Boolean) false);
        schema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        schema19.setFormat("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        schema19.setMaximum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test12119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12119");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) true);
        schema2.setNot(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList52 = strComparableSchema51.getRequired();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema51.required((java.util.List<java.lang.String>) strList55);
        schema48.setRequired((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = schema2.required((java.util.List<java.lang.String>) strList55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema2.getProperties();
        io.swagger.oas.models.media.Schema schema62 = schema2.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test12120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12120");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("no description");
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.not(schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema14.getExtensions();
        schema14.setMinLength((java.lang.Integer) 10);
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int30 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj33 = strComparableSchema32.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema32.properties(strMap34);
        java.lang.Object obj36 = null;
        schema35.setDefault(obj36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.properties(strMap38);
        io.swagger.oas.models.media.Schema schema40 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema9.setNot(schema39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(obj33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test12121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema schema10 = schema8.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema10.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.annotations.Parameter[] parameterArray17 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components28);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional30 = java.util.Optional.of(parameterArray17);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray17, components35);
        schema10.setDefault((java.lang.Object) parameterArray17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(parameterArray17);
        org.junit.Assert.assertNotNull(parameterListOptional19);
        org.junit.Assert.assertNotNull(parameterListOptional21);
        org.junit.Assert.assertNotNull(parameterListOptional23);
        org.junit.Assert.assertNotNull(parameterListOptional25);
        org.junit.Assert.assertNotNull(parameterListOptional27);
        org.junit.Assert.assertNotNull(parameterListOptional29);
        org.junit.Assert.assertNotNull(parameterArrayOptional30);
        org.junit.Assert.assertNotNull(parameterListOptional32);
        org.junit.Assert.assertNotNull(parameterListOptional34);
        org.junit.Assert.assertNotNull(parameterListOptional36);
    }

    @Test
    public void test12122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12122");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        java.lang.Integer int21 = schema2.getMinLength();
        io.swagger.oas.models.media.Schema schema23 = schema2.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12123");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList68 = schema25.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(strComparableList68);
    }

    @Test
    public void test12124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema12.nullable((java.lang.Boolean) false);
        schema12.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema12.setMaximum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test12125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.xml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        schema14.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema14.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema34 = schema27.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        schema37.setAdditionalProperties(schema47);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        schema62.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean65 = schema62.getUniqueItems();
        io.swagger.oas.models.media.Schema schema66 = schema58.not(schema62);
        io.swagger.oas.models.media.Schema schema68 = schema58.minItems((java.lang.Integer) 10);
        schema68.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean71 = schema68.getNullable();
        java.math.BigDecimal bigDecimal72 = schema68.getMaximum();
        io.swagger.oas.models.media.Schema schema74 = schema68.maxLength((java.lang.Integer) (-1));
        schema51.setNot(schema74);
        io.swagger.oas.models.media.Schema schema76 = schema34.additionalProperties(schema51);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.xml(xML77);
        schema76.set$ref("#/components/schemas/no description");
        java.lang.Integer int81 = schema76.getMinItems();
        io.swagger.oas.models.media.Schema schema83 = schema76.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema84 = schema8.example((java.lang.Object) schema76);
        java.lang.String str85 = schema76.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test12126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12126");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        java.lang.Object obj17 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema11.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema21 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema22 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema21);
        io.swagger.oas.models.media.Schema schema24 = schema22.maxProperties((java.lang.Integer) (-1));
        java.lang.String str25 = schema24.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test12127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int5 = schema2.getMinItems();
        java.lang.Boolean boolean6 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema8 = schema2.title("Optional.empty");
        java.math.BigDecimal bigDecimal9 = null;
        schema2.setMultipleOf(bigDecimal9);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        schema2.setExternalDocs(externalDocumentation11);
        java.lang.String str13 = schema2.getType();
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test12128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema21.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema21.properties(strMap35);
        schema18.setAdditionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema18.writeOnly((java.lang.Boolean) false);
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = schema39.description("");
        io.swagger.oas.models.media.Schema schema45 = schema43.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema45.setExternalDocs(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test12129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema schema8 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema5.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Schema schema14 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema12.maxProperties((java.lang.Integer) (-1));
        java.lang.String str17 = schema12.getType();
        java.lang.Boolean boolean18 = schema12.getReadOnly();
        io.swagger.oas.annotations.links.Link link19 = null;
        io.swagger.oas.annotations.links.Link[] linkArray20 = new io.swagger.oas.annotations.links.Link[] { link19 };
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional21 = java.util.Optional.of(linkArray20);
        io.swagger.oas.models.media.Schema schema22 = schema12.example((java.lang.Object) linkArray20);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(linkArray20);
        org.junit.Assert.assertNotNull(linkArrayOptional21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test12130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.lang.String str18 = schema17.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema schema24 = schema21.name("no description");
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema17.not(schema24);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema17.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema17.writeOnly((java.lang.Boolean) false);
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema17.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap32);
    }

    @Test
    public void test12131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema2.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema18.getExtensions();
        io.swagger.oas.models.media.Schema schema23 = schema18.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.lang.String[] strArray42 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema36.required((java.util.List<java.lang.String>) strList43);
        schema23.setRequired((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema schema48 = schema23.nullable((java.lang.Boolean) false);
        schema23.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test12132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        java.lang.Integer int15 = schema6.getMinItems();
        io.swagger.oas.models.media.XML xML16 = schema6.getXml();
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema6.getNullable();
        schema6.setDescription("Optional.empty");
        io.swagger.oas.models.media.Schema schema23 = schema6.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        schema23.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + true + "'", boolean19, true);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test12133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12133");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        io.swagger.oas.models.media.Schema schema43 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema45.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema45.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal50 = schema45.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test12134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.minLength((java.lang.Integer) (-1));
        schema3.setExample((java.lang.Object) schema9);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinItems();
        schema22.setAdditionalProperties(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        schema53.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema60 = schema41.not(schema53);
        io.swagger.oas.models.media.Schema schema62 = schema60.deprecated((java.lang.Boolean) false);
        schema22.setAdditionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema65 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML66 = schema22.getXml();
        java.math.BigDecimal bigDecimal67 = schema22.getMinimum();
        schema9.setNot(schema22);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema9.minimum(bigDecimal69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema9.maximum(bigDecimal71);
        io.swagger.oas.models.media.Schema schema74 = schema9.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal75 = null;
        schema9.setMaximum(bigDecimal75);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(xML66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test12135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.lang.Integer int32 = schema31.getMinItems();
        schema21.setAdditionalProperties(schema31);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema37 = schema31.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.minLength((java.lang.Integer) 100);
        java.lang.Integer int42 = schema39.getMaxLength();
        java.lang.Boolean boolean43 = schema39.getDeprecated();
        schema39.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setExample((java.lang.Object) schema39);
        java.math.BigDecimal bigDecimal47 = null;
        schema39.setMinimum(bigDecimal47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test12136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.lang.Integer int28 = schema27.getMinItems();
        schema17.setAdditionalProperties(schema27);
        java.lang.String[] strArray33 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        io.swagger.oas.models.media.Schema schema36 = schema27.required((java.util.List<java.lang.String>) strList34);
        java.lang.Object obj37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.example(obj37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema6.not(schema40);
        schema6.setPattern("");
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema6.setDiscriminator(discriminator44);
        schema6.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        schema14.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test12138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        java.lang.Boolean boolean44 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema47.getNot();
        java.lang.Boolean boolean51 = schema47.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema47.discriminator(discriminator52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        schema59.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean75 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema72);
        io.swagger.oas.models.media.Schema schema77 = schema59.additionalProperties(schema72);
        java.lang.String[] strArray80 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        schema72.setRequired((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema53.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema85 = schema2.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Discriminator discriminator86 = schema85.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(discriminator86);
    }

    @Test
    public void test12139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        java.lang.Integer int31 = schema30.getMaxLength();
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.discriminator(discriminator32);
        schema30.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema37 = schema30.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal40 = null;
        schema39.setMaximum(bigDecimal40);
        schema39.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator23 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema26);
        schema30.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str33 = schema30.getTitle();
        io.swagger.oas.models.media.Schema schema35 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema35);
        java.lang.String str37 = schema35.getType();
        io.swagger.oas.models.media.Schema schema39 = schema35.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12141");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        java.lang.Integer int62 = schema57.getMaxItems();
        java.lang.Boolean boolean63 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema57.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema57.setMinLength((java.lang.Integer) 100);
        schema57.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean70 = schema57.getReadOnly();
        java.lang.Boolean boolean71 = schema57.getReadOnly();
        schema57.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(boolean71);
    }

    @Test
    public void test12142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12142");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional14 = java.util.Optional.of(linkArray1);
        org.junit.Assert.assertNotNull(linkArray1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(linkArrayOptional14);
    }

    @Test
    public void test12143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.lang.Object obj2 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.readOnly((java.lang.Boolean) false);
        strComparableSchema0.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        io.swagger.oas.models.media.Schema schema19 = schema14.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema14);
        java.lang.String str21 = strComparableSchema0.getDescription();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema0.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minItems((java.lang.Integer) 0);
        schema8.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema8.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test12145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12145");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str4 = serverListOptional3.toString();
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional3.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        schema27.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema15.not(schema27);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) false);
        java.lang.String str37 = schema36.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        boolean boolean40 = serverListOptional3.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema42 = schema39.title("");
        io.swagger.oas.models.media.Schema schema44 = schema42.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema42.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test12146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        schema79.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList82 = schema79.getRequired();
        java.math.BigDecimal bigDecimal83 = schema79.getMultipleOf();
        schema79.setUniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal86 = null;
        schema79.setMinimum(bigDecimal86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test12147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema38.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema20.additionalProperties(schema48);
        java.math.BigDecimal bigDecimal50 = schema48.getMinimum();
        io.swagger.oas.models.media.Schema schema52 = schema48.maxProperties((java.lang.Integer) 10);
        schema52.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test12148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList46 = null;
        schema45.setRequired(strList46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.discriminator(discriminator48);
        io.swagger.oas.models.media.Schema schema51 = schema45.minProperties((java.lang.Integer) (-1));
        schema51.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test12149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        schema22.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        schema35.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema22.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema42 = schema35.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMinItems();
        schema45.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.discriminator(discriminator58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema66.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        schema70.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean73 = schema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema74 = schema66.not(schema70);
        io.swagger.oas.models.media.Schema schema76 = schema66.minItems((java.lang.Integer) 10);
        schema76.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean79 = schema76.getNullable();
        java.math.BigDecimal bigDecimal80 = schema76.getMaximum();
        io.swagger.oas.models.media.Schema schema82 = schema76.maxLength((java.lang.Integer) (-1));
        schema59.setNot(schema82);
        io.swagger.oas.models.media.Schema schema84 = schema42.additionalProperties(schema59);
        io.swagger.oas.models.media.XML xML85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.xml(xML85);
        schema84.set$ref("#/components/schemas/no description");
        java.lang.String str89 = schema84.getFormat();
        schema2.setNot(schema84);
        io.swagger.oas.models.media.XML xML91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema84.xml(xML91);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema92.externalDocs(externalDocumentation93);
        schema92.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test12150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator23 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema26);
        io.swagger.oas.models.media.Schema schema32 = schema22.minItems((java.lang.Integer) 10);
        schema32.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean35 = schema32.getNullable();
        java.math.BigDecimal bigDecimal36 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema32.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema32.minProperties((java.lang.Integer) 10);
        boolean boolean41 = schema13.equals((java.lang.Object) schema32);
        schema13.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test12151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        schema6.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator26 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean48 = schema45.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema45);
        schema45.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema33.not(schema45);
        java.math.BigDecimal bigDecimal53 = schema52.getMinimum();
        io.swagger.oas.models.media.Schema schema54 = schema22.example((java.lang.Object) bigDecimal53);
        schema22.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema6.example((java.lang.Object) 100);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMinimum(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = schema57.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal60);
    }

    @Test
    public void test12152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        schema11.setMinProperties((java.lang.Integer) (-1));
        schema11.setTitle("hi!");
        schema11.setType("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema11.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        schema21.setMultipleOf(bigDecimal22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12153");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema5.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema8 = schema5.format("no description");
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("");
        java.lang.Integer int11 = schema10.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        schema18.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema31);
        io.swagger.oas.models.media.Schema schema36 = schema18.additionalProperties(schema31);
        java.lang.String str37 = schema31.getFormat();
        java.lang.Integer int38 = schema31.getMinProperties();
        schema10.addExtension("hi!", (java.lang.Object) int38);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema10.getExtensions();
        schema2.setExtensions(strMap40);
        java.lang.Integer int42 = schema2.getMinProperties();
        java.lang.Boolean boolean43 = schema2.getDeprecated();
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test12154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema6.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema6.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str21 = schema6.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.lang.Integer int35 = schema34.getMinItems();
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.discriminator(discriminator37);
        java.lang.Integer int39 = schema34.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        schema42.setAdditionalProperties(schema52);
        java.lang.String[] strArray58 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema52.required((java.util.List<java.lang.String>) strList59);
        schema34.setRequired((java.util.List<java.lang.String>) strList59);
        schema6.setRequired((java.util.List<java.lang.String>) strList59);
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test12155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12155");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema6.getExternalDocs();
        java.lang.Boolean boolean16 = schema6.getReadOnly();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        java.lang.String str18 = schema6.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test12156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12156");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema5.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        io.swagger.oas.models.media.Schema schema36 = schema19.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean37 = schema36.getWriteOnly();
        schema36.setNullable((java.lang.Boolean) true);
        schema36.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema36.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test12158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12158");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.lang.Integer int80 = schema79.getMinItems();
        io.swagger.oas.models.media.Schema schema82 = schema79.title("no description");
        io.swagger.oas.models.media.Schema schema84 = schema82.type("no description");
        io.swagger.oas.models.media.Schema schema86 = schema82.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema86.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema86.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema92 = schema90.description("Optional.empty");
        schema92.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema71.not(schema92);
        io.swagger.oas.models.media.Schema schema97 = schema95.pattern("");
        schema95.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test12159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12159");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        java.lang.String str25 = schema24.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema24.getExternalDocs();
        java.lang.Integer int29 = schema24.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.lang.String str35 = schema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.lang.String str39 = schema38.get$ref();
        io.swagger.oas.models.media.Schema schema41 = schema38.name("no description");
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema34.not(schema41);
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.lang.Integer int54 = schema53.getMinItems();
        io.swagger.oas.models.media.Schema schema56 = schema53.title("no description");
        java.lang.Boolean boolean57 = schema53.getWriteOnly();
        io.swagger.oas.models.media.Schema schema59 = schema53.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema59.$ref("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = schema61.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = schema44.example((java.lang.Object) externalDocumentation62);
        io.swagger.oas.models.media.Schema schema64 = schema24.not(schema44);
        schema64.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.discriminator(discriminator67);
        io.swagger.oas.models.media.Schema schema70 = schema68.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int71 = schema70.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(externalDocumentation62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
    }

    @Test
    public void test12160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12160");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema schema23 = schema12.example((java.lang.Object) serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<java.lang.Cloneable> cloneableOptional25 = java.util.Optional.ofNullable((java.lang.Cloneable) serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional29 = java.util.Optional.of(serverArray21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(cloneableOptional25);
        org.junit.Assert.assertNotNull(serverListOptional26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertNotNull(serverListOptional28);
        org.junit.Assert.assertNotNull(serverArrayOptional29);
    }

    @Test
    public void test12161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        schema16.setDescription("hi!");
        schema16.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj26 = strComparableSchema25.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        schema32.setDiscriminator(discriminator35);
        java.lang.String[] strArray38 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        schema32.setRequired((java.util.List<java.lang.String>) strList39);
        strComparableSchema25.setRequired((java.util.List<java.lang.String>) strList39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.lang.String str46 = schema45.get$ref();
        io.swagger.oas.models.media.Schema schema48 = schema45.name("no description");
        schema48.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema48.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema schema54 = schema48.addRequiredItem("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        schema48.setExternalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema schema58 = schema48.format("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema48.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema25.not(schema48);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema25.minimum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema63.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean66 = schema65.getNullable();
        schema65.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean69 = schema16.equals((java.lang.Object) schema65);
        schema65.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test12162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.xml(xML18);
        schema16.setNullable((java.lang.Boolean) false);
        java.lang.String str22 = schema16.getDescription();
        io.swagger.oas.models.media.Schema schema24 = schema16.readOnly((java.lang.Boolean) true);
        java.lang.String str25 = schema16.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test12163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12163");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        java.lang.Object obj8 = null;
        boolean boolean9 = serverListOptional1.equals(obj8);
        io.swagger.jaxrs2.OperationParser operationParser10 = new io.swagger.jaxrs2.OperationParser();
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional11 = java.util.Optional.of(operationParser10);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional12 = java.util.Optional.of(operationParser10);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional13 = java.util.Optional.ofNullable(operationParser10);
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional14 = java.util.Optional.ofNullable(operationParser10);
        boolean boolean15 = serverListOptional1.equals((java.lang.Object) operationParser10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator22 = schema18.getDiscriminator();
        schema18.setType("no description");
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema18.xml(xML25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean48 = schema45.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema45);
        schema45.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema33.not(schema45);
        schema26.setExample((java.lang.Object) schema33);
        java.lang.Integer int54 = schema33.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.math.BigDecimal bigDecimal62 = null;
        schema59.setMultipleOf(bigDecimal62);
        java.lang.Boolean boolean64 = schema59.getReadOnly();
        java.lang.Boolean boolean65 = schema59.getExclusiveMaximum();
        schema33.setNot(schema59);
        boolean boolean67 = serverListOptional1.equals((java.lang.Object) schema33);
        java.math.BigDecimal bigDecimal68 = schema33.getMultipleOf();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(operationParserOptional11);
        org.junit.Assert.assertNotNull(operationParserOptional12);
        org.junit.Assert.assertNotNull(operationParserOptional13);
        org.junit.Assert.assertNotNull(operationParserOptional14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(bigDecimal68);
    }

    @Test
    public void test12164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema6.getExternalDocs();
        io.swagger.oas.models.media.Schema schema17 = schema6.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema6.$ref("Optional.empty");
        java.lang.String str20 = schema19.getDescription();
        io.swagger.oas.models.media.Schema schema22 = schema19.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test12165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12165");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema50.getNot();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema50.minimum(bigDecimal54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.properties(strMap56);
        java.lang.Boolean boolean58 = schema50.getExclusiveMaximum();
        schema2.setExample((java.lang.Object) schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema63.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.properties(strMap72);
        java.lang.Integer int74 = schema73.getMinItems();
        schema63.setAdditionalProperties(schema73);
        java.lang.String[] strArray79 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema73.required((java.util.List<java.lang.String>) strList80);
        java.lang.Object obj83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.example(obj83);
        io.swagger.oas.models.media.Schema schema86 = schema82.$ref("no description");
        java.math.BigDecimal bigDecimal87 = schema86.getMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema2.not(schema86);
        schema86.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(bigDecimal87);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test12166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12166");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test12167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        schema16.setDiscriminator(discriminator17);
        io.swagger.oas.models.media.Schema schema20 = schema16.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test12168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int23 = schema22.getMinProperties();
        schema22.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema22.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema27.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test12169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList36 = schema34.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema42.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        io.swagger.oas.models.media.Schema schema60 = schema42.additionalProperties(schema55);
        java.lang.Boolean boolean61 = schema60.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema34.additionalProperties(schema60);
        io.swagger.oas.models.media.Schema schema64 = schema60.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str65 = schema64.getPattern();
        io.swagger.oas.models.media.Schema schema66 = schema29.example((java.lang.Object) str65);
        io.swagger.oas.models.media.Schema schema68 = schema66.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.xml(xML69);
        io.swagger.oas.models.media.Schema schema72 = schema66.description("#/components/schemas/");
        java.lang.Boolean boolean73 = schema66.getWriteOnly();
        java.lang.Boolean boolean74 = schema66.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNull(strComparableList36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + true + "'", boolean73, true);
        org.junit.Assert.assertNull(boolean74);
    }

    @Test
    public void test12170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12170");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema6.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema6.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str21 = schema6.getTitle();
        schema6.setMinLength((java.lang.Integer) 100);
        java.lang.String str24 = schema6.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test12171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        schema37.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("no description");
        java.lang.Boolean boolean47 = schema43.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.lang.String str55 = schema54.get$ref();
        io.swagger.oas.models.media.Schema schema57 = schema54.name("no description");
        schema57.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema60 = schema50.not(schema57);
        io.swagger.oas.models.media.Schema schema61 = schema43.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema43.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList64 = schema43.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema68 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema70 = schema67.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.lang.Integer int78 = schema77.getMinItems();
        schema67.setAdditionalProperties(schema77);
        java.math.BigDecimal bigDecimal80 = null;
        schema77.setMaximum(bigDecimal80);
        io.swagger.oas.models.media.Schema schema83 = schema77.maxProperties((java.lang.Integer) 1);
        schema43.setAdditionalProperties(schema83);
        java.math.BigDecimal bigDecimal85 = null;
        schema43.setMultipleOf(bigDecimal85);
        io.swagger.oas.models.media.Schema schema87 = schema37.additionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema89 = schema43.minLength((java.lang.Integer) 1);
        schema89.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int92 = schema89.getMaxItems();
        io.swagger.oas.models.media.Schema schema94 = schema89.deprecated((java.lang.Boolean) true);
        java.lang.String str95 = schema89.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strComparableList64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(int92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test12172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12172");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema16.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test12173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema38.getPattern();
        schema22.addExtension("", (java.lang.Object) schema38);
        schema38.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema38.exclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema47.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema53 = schema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema53.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema55.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema55.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap58);
    }

    @Test
    public void test12174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12174");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int16 = schema2.getMinLength();
        schema2.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema2.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema20.setDiscriminator(discriminator21);
        java.lang.Boolean boolean23 = schema20.getUniqueItems();
        java.lang.Class<?> wildcardClass24 = schema20.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test12175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMultipleOf(bigDecimal26);
        schema23.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema23.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema33 = schema31.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema31.getNot();
        io.swagger.oas.models.media.Schema schema36 = schema31.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12176");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.Boolean boolean15 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        io.swagger.oas.models.media.Schema schema25 = schema22.title("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList29 = strComparableSchema28.getRequired();
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema28.required((java.util.List<java.lang.String>) strList32);
        schema25.setRequired((java.util.List<java.lang.String>) strList32);
        schema2.setRequired((java.util.List<java.lang.String>) strList32);
        java.lang.String str37 = schema2.getType();
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema2.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.lang.Integer int18 = schema17.getMinItems();
        schema7.setAdditionalProperties(schema17);
        java.math.BigDecimal bigDecimal20 = null;
        schema17.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema17.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int24 = schema17.getMaxLength();
        io.swagger.oas.models.media.Schema schema25 = schema4.not(schema17);
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        io.swagger.oas.models.media.Schema schema29 = schema27.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test12178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) schema36);
        schema36.setMaxLength((java.lang.Integer) 1);
        java.lang.Boolean boolean40 = schema36.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList50 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean51 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean52 = strComparableList50.add((java.lang.Comparable<java.lang.String>) "");
        schema47.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList50);
        schema47.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema36.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.lang.String str57 = schema56.getName();
        io.swagger.oas.models.media.Schema schema59 = schema56.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test12179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema18.minItems((java.lang.Integer) (-1));
        schema18.setFormat("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema18.multipleOf(bigDecimal51);
        java.lang.Integer int53 = schema52.getMinProperties();
        schema52.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal56 = null;
        schema52.setMaximum(bigDecimal56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test12180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema1 = strComparableSchema0.getAdditionalProperties();
        java.lang.Integer int2 = strComparableSchema0.getMaxLength();
        org.junit.Assert.assertNull(schema1);
        org.junit.Assert.assertNull(int2);
    }

    @Test
    public void test12181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12181");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema schema32 = schema30.pattern("");
        schema21.setAdditionalProperties(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.maxProperties((java.lang.Integer) 10);
        schema2.setAdditionalProperties(schema32);
        schema32.setReadOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean39 = schema32.getReadOnly();
        java.math.BigDecimal bigDecimal40 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        io.swagger.oas.models.media.Schema schema50 = schema47.title("no description");
        java.lang.Boolean boolean51 = schema47.getWriteOnly();
        io.swagger.oas.models.media.Schema schema53 = schema47.nullable((java.lang.Boolean) true);
        java.lang.String str54 = schema53.getPattern();
        io.swagger.oas.models.media.Schema schema56 = schema53.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int57 = schema53.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.lang.Integer int66 = schema65.getMinItems();
        io.swagger.oas.models.media.Schema schema68 = schema65.title("no description");
        java.lang.Boolean boolean69 = schema65.getWriteOnly();
        io.swagger.oas.models.media.Schema schema71 = schema65.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema71.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator74 = schema71.getDiscriminator();
        io.swagger.oas.models.media.Schema schema76 = schema71.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema77 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema71);
        io.swagger.oas.models.media.Schema schema79 = schema77.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("no description");
        schema32.setAdditionalProperties(schema79);
        java.lang.Integer int83 = schema32.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int83);
    }

    @Test
    public void test12182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12182");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        schema23.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.servers.Server[] serverArray26 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray26);
        io.swagger.oas.models.servers.Server[] serverArray28 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList29 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList29, serverArray28);
        java.util.List<io.swagger.oas.models.servers.Server> serverList31 = serverListOptional27.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str33 = strComparableSchema32.getPattern();
        java.lang.Object obj34 = strComparableSchema32.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        schema37.setAdditionalProperties(schema47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema37.description("");
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema32.additionalProperties(schema52);
        boolean boolean54 = serverListOptional27.equals((java.lang.Object) strComparableSchema32);
        boolean boolean55 = schema23.equals((java.lang.Object) strComparableSchema32);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema32.maximum(bigDecimal56);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = schema64.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema67 = schema64.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.lang.Integer int75 = schema74.getMinItems();
        schema64.setAdditionalProperties(schema74);
        io.swagger.oas.models.media.Discriminator discriminator77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.discriminator(discriminator77);
        schema78.setType("hi!");
        schema78.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = schema78.description("");
        io.swagger.oas.models.media.Schema schema86 = schema78.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema88 = schema78.exclusiveMinimum((java.lang.Boolean) true);
        schema57.setAdditionalProperties(schema78);
        java.lang.Boolean boolean90 = schema78.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(serverArray26);
        org.junit.Assert.assertNotNull(serverListOptional27);
        org.junit.Assert.assertNotNull(serverArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(serverList31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean90);
    }

    @Test
    public void test12183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        schema30.setMinProperties((java.lang.Integer) 1);
        schema30.setMinItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.maximum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.set$ref("hi!");
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema6.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test12185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12185");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        java.lang.Object obj8 = null;
        boolean boolean9 = serverListOptional1.equals(obj8);
        io.swagger.oas.annotations.servers.Server server10 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray11 = new io.swagger.oas.annotations.servers.Server[] { server10 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray11);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional14 = java.util.Optional.of(serverListOptional13);
        io.swagger.oas.annotations.servers.Server[] serverArray15 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray15);
        io.swagger.oas.models.servers.Server[] serverArray17 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList18 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList18, serverArray17);
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional16.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList18);
        boolean boolean21 = serverListOptional16.isPresent();
        boolean boolean22 = serverListOptional16.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        io.swagger.oas.models.media.Schema schema32 = schema29.title("no description");
        java.lang.Boolean boolean33 = schema29.getWriteOnly();
        io.swagger.oas.models.media.Schema schema35 = schema29.nullable((java.lang.Boolean) true);
        java.lang.String str36 = schema35.getPattern();
        io.swagger.oas.models.media.Schema schema38 = schema35.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean39 = serverListOptional16.equals((java.lang.Object) schema38);
        boolean boolean40 = serverListOptional16.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        io.swagger.oas.models.media.Discriminator discriminator48 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean54 = schema51.getUniqueItems();
        io.swagger.oas.models.media.Schema schema55 = schema47.not(schema51);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = schema58.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema61 = schema58.format("no description");
        schema61.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean64 = schema61.getReadOnly();
        io.swagger.oas.models.media.Schema schema66 = schema61.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema51.not(schema61);
        boolean boolean68 = serverListOptional16.equals((java.lang.Object) schema51);
        io.swagger.oas.annotations.servers.Server[] serverArray69 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray69);
        io.swagger.oas.models.servers.Server[] serverArray71 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList72 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList72, serverArray71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList74 = serverListOptional70.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList72);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional75 = java.util.Optional.ofNullable(serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional16.orElse(serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList77 = serverListOptional13.orElse(serverList76);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional1.orElse(serverList76);
        java.lang.String str79 = serverListOptional1.toString();
        boolean boolean80 = serverListOptional1.isPresent();
        java.lang.String str81 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serverArray11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertNotNull(serverListOptionalOptional14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertNotNull(serverListOptional16);
        org.junit.Assert.assertNotNull(serverArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertNotNull(serverListOptional70);
        org.junit.Assert.assertNotNull(serverArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serverList74);
        org.junit.Assert.assertNotNull(serverListOptional75);
        org.junit.Assert.assertNotNull(serverList76);
        org.junit.Assert.assertNotNull(serverList77);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Optional.empty" + "'", str79, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Optional.empty" + "'", str81, "Optional.empty");
    }

    @Test
    public void test12186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12186");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema11.getEnum();
        java.lang.Boolean boolean13 = schema11.getNullable();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList14 = schema11.getEnum();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema11.minimum(bigDecimal15);
        schema11.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema11.getReadOnly();
        java.lang.String str20 = schema11.getTitle();
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strComparableList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + true + "'", boolean19, true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test12187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        java.lang.String str27 = schema18.getName();
        io.swagger.oas.models.media.Schema schema29 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema29.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema31.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12188");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.String str7 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema9 = schema2.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema31.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional35 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        schema31.setNot(schema41);
        io.swagger.oas.models.media.Schema schema44 = schema31.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema31.properties(strMap45);
        schema28.setAdditionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema28.writeOnly((java.lang.Boolean) false);
        schema49.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema53 = schema49.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        schema57.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        java.lang.Integer int69 = schema68.getMinItems();
        io.swagger.oas.models.media.Schema schema71 = schema68.title("no description");
        java.lang.Boolean boolean72 = schema68.getWriteOnly();
        schema68.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.properties(strMap81);
        java.lang.Integer int83 = schema82.getMinItems();
        schema82.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema68.addProperties("hi!", schema82);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema87 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema87.maxProperties((java.lang.Integer) 10);
        schema86.setNot(schema89);
        schema89.setName("");
        java.math.BigDecimal bigDecimal93 = schema89.getMaximum();
        io.swagger.oas.models.media.Schema schema94 = schema57.not(schema89);
        io.swagger.oas.models.media.Schema schema95 = schema53.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap96 = schema53.getProperties();
        io.swagger.oas.models.media.Schema schema97 = schema2.properties(strMap96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(bigDecimal93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test12189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12189");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        schema19.setDiscriminator(discriminator24);
        io.swagger.oas.models.media.Schema schema27 = schema19.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema19.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
    }

    @Test
    public void test12190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12190");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        schema25.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema25);
        java.lang.Integer int33 = schema32.getMinLength();
        schema32.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema32.getMaxItems();
        schema5.setExample((java.lang.Object) int36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema5.multipleOf(bigDecimal38);
        schema5.setMinLength((java.lang.Integer) 0);
        java.lang.String str42 = schema5.getName();
        io.swagger.oas.models.media.Schema schema44 = schema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass45 = schema44.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test12191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12191");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        schema16.setDescription("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        schema28.setDiscriminator(discriminator31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        io.swagger.oas.models.media.Schema schema49 = schema47.pattern("");
        java.lang.Integer int50 = schema49.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = schema54.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema57 = schema54.format("no description");
        schema57.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema66.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        schema70.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean73 = schema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema74 = schema66.not(schema70);
        io.swagger.oas.models.media.Schema schema75 = schema57.additionalProperties(schema70);
        java.lang.String str76 = schema70.getFormat();
        java.lang.Integer int77 = schema70.getMinProperties();
        schema49.addExtension("hi!", (java.lang.Object) int77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema49.getExtensions();
        schema41.setExtensions(strMap79);
        schema34.setExtensions(strMap79);
        schema16.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema schema84 = schema16.deprecated((java.lang.Boolean) true);
        java.lang.Integer int85 = schema16.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNull(strComparableList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int85);
    }

    @Test
    public void test12193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal11 = schema4.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.lang.Integer int20 = schema19.getMinItems();
        io.swagger.oas.models.media.Schema schema22 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.type("no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.lang.Integer int40 = schema39.getMinItems();
        schema29.setAdditionalProperties(schema39);
        java.lang.String[] strArray45 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema39.required((java.util.List<java.lang.String>) strList46);
        java.lang.String str49 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema39.minProperties((java.lang.Integer) 0);
        schema26.setNot(schema51);
        io.swagger.oas.models.media.Schema schema53 = schema4.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        io.swagger.oas.models.media.Schema schema55 = schema53.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test12194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema12.addRequiredItem("no description");
        java.lang.String str26 = schema25.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean29 = schema28.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean29 + "' != '" + true + "'", boolean29, true);
    }

    @Test
    public void test12195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12195");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        io.swagger.oas.models.media.Schema schema43 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema45.name("#/components/schemas/");
        java.lang.Boolean boolean48 = schema45.getDeprecated();
        io.swagger.oas.models.media.Schema schema50 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj51 = schema45.getExample();
        io.swagger.oas.models.media.Schema schema53 = schema45.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(obj51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test12196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12196");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12197");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.format("hi!");
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList12 = schema9.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test12198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        schema28.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.xml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12199");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean9 = schema2.getUniqueItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.multipleOf(bigDecimal10);
        java.lang.String str12 = schema2.getType();
        io.swagger.oas.models.media.Schema schema14 = schema2.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema14.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema14.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test12200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema21.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema21.properties(strMap35);
        schema18.setAdditionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema18.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str41 = strComparableSchema40.getPattern();
        java.lang.Object obj42 = strComparableSchema40.getExample();
        schema18.setNot((io.swagger.oas.models.media.Schema) strComparableSchema40);
        schema18.setNullable((java.lang.Boolean) true);
        java.lang.Object obj46 = schema18.getExample();
        java.lang.Boolean boolean47 = schema18.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(obj42);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
    }

    @Test
    public void test12201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12201");
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(parameterArrayOptional0);
    }

    @Test
    public void test12202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        java.lang.Boolean boolean36 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema35.getNot();
        schema37.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema37.title("Optional.empty");
        schema41.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12203");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Schema schema7 = schema2.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal8 = schema2.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema2.getNot();
        schema2.setMinItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test12204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        schema16.setDescription("hi!");
        schema16.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.lang.Integer int38 = schema37.getMinItems();
        schema27.setAdditionalProperties(schema37);
        java.math.BigDecimal bigDecimal40 = null;
        schema37.setMaximum(bigDecimal40);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema37.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.lang.String str47 = schema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema50.name("no description");
        schema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema46.not(schema53);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = schema46.getExtensions();
        io.swagger.oas.models.media.Schema schema59 = schema46.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema59.exclusiveMinimum((java.lang.Boolean) false);
        schema43.setDefault((java.lang.Object) schema61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema43.properties(strMap63);
        schema43.setFormat("#/components/schemas/no description");
        schema43.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str69 = schema43.getPattern();
        io.swagger.oas.models.media.Schema schema70 = schema16.additionalProperties(schema43);
        schema43.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML73 = schema43.getXml();
        schema43.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean78 = schema43.getDeprecated();
        java.lang.Class<?> wildcardClass79 = schema43.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(xML73);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test12205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        schema10.setMaxProperties((java.lang.Integer) 100);
        java.lang.Integer int13 = schema10.getMinItems();
        java.lang.String str14 = schema10.toString();
        java.lang.Integer int15 = schema10.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str14, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test12206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12206");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.xml(xML18);
        java.lang.Integer int20 = schema19.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test12207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12207");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        schema2.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = null;
        schema2.setEnum(strComparableList29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema2.multipleOf(bigDecimal31);
        schema32.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12208");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema26.not(schema30);
        schema30.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema18.not(schema30);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema schema52 = schema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema48.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        io.swagger.oas.models.media.Discriminator discriminator62 = schema61.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean68 = schema65.getUniqueItems();
        io.swagger.oas.models.media.Schema schema69 = schema61.not(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.format("no description");
        schema75.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema61.not(schema75);
        io.swagger.oas.models.media.Schema schema80 = schema61.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema80.setRequired((java.util.List<java.lang.String>) strList86);
        schema48.setRequired((java.util.List<java.lang.String>) strList86);
        schema37.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema11.additionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema93 = schema37.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean94 = schema37.getDeprecated();
        io.swagger.oas.models.media.Schema schema96 = schema37.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema97 = schema37.getNot();
        java.lang.String str98 = schema37.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(str98);
    }

    @Test
    public void test12209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        schema34.setDiscriminator(discriminator35);
        io.swagger.oas.models.media.Schema schema38 = schema34.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test12210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.format("no description");
        schema16.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean19 = schema16.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.format("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.pattern("");
        schema16.setAdditionalProperties(schema27);
        schema16.setType("hi!");
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema16.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema10.not(schema16);
        io.swagger.oas.models.media.Schema schema37 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema16.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Boolean boolean28 = schema25.getExclusiveMinimum();
        schema25.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.lang.String str34 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema36 = schema33.name("no description");
        schema36.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema36.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema42 = schema36.addRequiredItem("hi!");
        io.swagger.oas.models.media.Discriminator discriminator43 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema44 = schema25.additionalProperties(schema36);
        schema25.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = schema25.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(externalDocumentation47);
    }

    @Test
    public void test12212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12212");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema21.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal29 = schema23.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test12213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.xml(xML7);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test12214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        schema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema33 = schema15.additionalProperties(schema28);
        java.lang.String str34 = schema28.getFormat();
        java.lang.Integer int35 = schema28.getMinProperties();
        schema7.addExtension("hi!", (java.lang.Object) int35);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.lang.String str41 = schema40.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.lang.String str45 = schema44.get$ref();
        io.swagger.oas.models.media.Schema schema47 = schema44.name("no description");
        schema47.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema40.not(schema47);
        java.lang.Boolean boolean51 = schema47.getReadOnly();
        java.lang.Boolean boolean52 = schema47.getExclusiveMinimum();
        java.lang.Integer int53 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = schema57.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional61 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema57);
        java.lang.Integer int62 = schema57.getMinProperties();
        java.math.BigDecimal bigDecimal63 = schema57.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema57);
        schema64.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int69 = schema64.getMinLength();
        schema7.addExtension("Optional.empty", (java.lang.Object) schema64);
        schema64.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = schema64.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + false + "'", boolean52, false);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNull(strMap73);
    }

    @Test
    public void test12215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12215");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        schema29.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema17.not(schema29);
        schema10.setExample((java.lang.Object) schema17);
        java.lang.Integer int38 = schema17.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.math.BigDecimal bigDecimal46 = null;
        schema43.setMultipleOf(bigDecimal46);
        java.lang.Boolean boolean48 = schema43.getReadOnly();
        java.lang.Boolean boolean49 = schema43.getExclusiveMaximum();
        schema17.setNot(schema43);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema17.minimum(bigDecimal51);
        io.swagger.oas.models.media.XML xML53 = null;
        schema52.setXml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema52.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test12216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema18.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        java.lang.String str30 = schema28.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator31 = schema28.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema28.setDiscriminator(discriminator32);
        schema28.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML36 = schema28.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNull(xML36);
    }

    @Test
    public void test12217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        schema18.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        io.swagger.oas.models.media.Schema schema33 = schema28.minLength((java.lang.Integer) 100);
        java.lang.String str34 = schema33.getPattern();
        io.swagger.oas.models.media.Schema schema35 = schema18.additionalProperties(schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.discriminator(discriminator51);
        java.lang.Integer int53 = schema48.getMinProperties();
        io.swagger.oas.models.media.Schema schema55 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema55.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal58 = null;
        schema55.setMultipleOf(bigDecimal58);
        io.swagger.oas.models.media.Discriminator discriminator60 = null;
        schema55.setDiscriminator(discriminator60);
        io.swagger.oas.models.media.Schema schema63 = schema55.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema55.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean66 = schema65.getNullable();
        schema35.setNot(schema65);
        java.math.BigDecimal bigDecimal68 = null;
        schema35.setMaximum(bigDecimal68);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean66);
    }

    @Test
    public void test12218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal15 = schema9.getMaximum();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema9.getExtensions();
        schema9.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema9.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator27 = schema23.getDiscriminator();
        schema23.setType("no description");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema23.xml(xML30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        schema31.setExample((java.lang.Object) schema38);
        java.lang.Integer int59 = schema38.getMinProperties();
        schema20.setNot(schema38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test12219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema17 = schema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML18 = schema5.getXml();
        schema5.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int21 = schema5.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(xML18);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test12220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12220");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) true);
        java.lang.String str28 = schema27.getFormat();
        schema27.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean31 = schema27.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test12221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema2.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema18.setDiscriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxProperties((java.lang.Integer) (-1));
        schema18.setTitle("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema18.minimum(bigDecimal25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test12222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        java.lang.Object obj17 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema11.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema21 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema22 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema21);
        java.lang.String str23 = schema19.getPattern();
        java.lang.Boolean boolean24 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        schema35.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema35);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema31.xml(xML40);
        schema41.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema41.readOnly((java.lang.Boolean) true);
        java.lang.Integer int46 = schema41.getMinProperties();
        schema41.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema41.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema50.format("hi!");
        io.swagger.oas.models.media.Schema schema54 = schema52.$ref("");
        schema19.setDefault((java.lang.Object) schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test12223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.String str7 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema10.setAdditionalProperties(schema20);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.discriminator(discriminator23);
        java.lang.Integer int25 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.lang.String[] strArray44 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema38.required((java.util.List<java.lang.String>) strList45);
        schema20.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = schema2.required((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal50 = null;
        schema2.setMaximum(bigDecimal50);
        java.math.BigDecimal bigDecimal52 = null;
        schema2.setMultipleOf(bigDecimal52);
        io.swagger.oas.models.media.Schema schema55 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList56 = schema2.getRequired();
        io.swagger.oas.models.media.Schema schema58 = schema2.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator59 = schema2.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
    }

    @Test
    public void test12224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12224");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = schema38.getMinimum();
        java.lang.String str42 = schema38.getName();
        schema38.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test12225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema25.getExtensions();
        io.swagger.oas.models.media.Schema schema30 = schema25.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema32.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12226");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional10.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptional10);
    }

    @Test
    public void test12227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        java.math.BigDecimal bigDecimal45 = null;
        schema44.setMultipleOf(bigDecimal45);
        java.lang.Integer int47 = schema44.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema50.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional54 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        schema50.setNot(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema50.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema50.properties(strMap64);
        java.util.List<java.lang.String> strList66 = schema65.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema65.properties(strMap67);
        schema68.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.lang.Integer int78 = schema77.getMinItems();
        io.swagger.oas.models.media.Schema schema80 = schema77.title("no description");
        io.swagger.oas.models.media.Schema schema82 = schema80.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList84 = strComparableSchema83.getRequired();
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema83.required((java.util.List<java.lang.String>) strList87);
        schema80.setRequired((java.util.List<java.lang.String>) strList87);
        schema68.setRequired((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema92 = schema44.required((java.util.List<java.lang.String>) strList87);
        io.swagger.oas.models.media.Schema schema94 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema94.getProperties();
        io.swagger.oas.models.media.Schema schema97 = schema94.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(strMap95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test12228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12228");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        java.math.BigDecimal bigDecimal4 = strComparableSchema0.getMinimum();
        java.math.BigDecimal bigDecimal5 = null;
        strComparableSchema0.setMaximum(bigDecimal5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        schema13.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean16 = schema13.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("");
        schema13.setAdditionalProperties(schema24);
        schema13.setType("hi!");
        schema13.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema13.addRequiredItem("#/components/schemas/");
        strComparableSchema0.addExtension("hi!", (java.lang.Object) schema31);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList33 = strComparableSchema0.getEnum();
        java.lang.Boolean boolean34 = strComparableSchema0.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        schema40.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean43 = schema40.getReadOnly();
        io.swagger.oas.models.media.Schema schema45 = schema40.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema40.name("");
        io.swagger.oas.models.media.Schema schema49 = schema40.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema0.example((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(bigDecimal4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strComparableList33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test12229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.name("no description");
        java.lang.Boolean boolean40 = schema36.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        schema36.setProperties(strMap41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema36.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList60 = schema55.getEnum();
        io.swagger.oas.models.media.Schema schema62 = schema55.type("hi!");
        schema55.setType("#/components/schemas/");
        schema36.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.XML xML66 = schema55.getXml();
        io.swagger.oas.models.media.Schema schema67 = schema33.not(schema55);
        io.swagger.oas.models.media.Schema schema69 = schema33.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.lang.Integer int75 = schema74.getMinLength();
        io.swagger.oas.models.media.Schema schema77 = schema74.maxItems((java.lang.Integer) 10);
        schema74.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema74.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean82 = schema74.getWriteOnly();
        java.lang.String str83 = schema74.get$ref();
        io.swagger.oas.models.media.XML xML84 = null;
        schema74.setXml(xML84);
        io.swagger.oas.models.media.Schema schema86 = schema33.example((java.lang.Object) xML84);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList87 = null;
        schema33.setEnum(strComparableList87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strComparableList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertEquals("'" + boolean82 + "' != '" + false + "'", boolean82, false);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test12230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.discriminator(discriminator18);
        io.swagger.oas.models.media.Schema schema21 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.title("");
        java.lang.String str26 = schema25.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test12231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.not(schema28);
        schema22.setAdditionalProperties(schema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema29.getExternalDocs();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList32 = schema29.getEnum();
        schema29.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(strComparableList32);
    }

    @Test
    public void test12232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12232");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema40.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.lang.Integer int51 = schema50.getMinItems();
        schema40.setAdditionalProperties(schema50);
        java.lang.String[] strArray56 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        io.swagger.oas.models.media.Schema schema59 = schema50.required((java.util.List<java.lang.String>) strList57);
        java.lang.Object obj60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.example(obj60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.multipleOf(bigDecimal62);
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.xml(xML64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.maximum(bigDecimal66);
        schema63.setName("");
        schema63.setReadOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList72 = schema63.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema37.required(strList72);
        java.lang.String str74 = schema73.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test12233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema33.getMinItems();
        boolean boolean37 = schema27.equals((java.lang.Object) schema33);
        java.lang.String str38 = schema33.getFormat();
        schema33.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal41 = schema33.getMultipleOf();
        java.lang.Integer int42 = schema33.getMinLength();
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema33.multipleOf(bigDecimal43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test12234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        schema6.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        schema6.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinItems();
        schema22.setAdditionalProperties(schema32);
        java.lang.String[] strArray38 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        io.swagger.oas.models.media.Schema schema41 = schema32.required((java.util.List<java.lang.String>) strList39);
        java.lang.Object obj42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.example(obj42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.multipleOf(bigDecimal44);
        java.lang.String str46 = schema43.getDescription();
        schema43.setMaxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema43.minimum(bigDecimal49);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema43.multipleOf(bigDecimal51);
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.xml(xML53);
        io.swagger.oas.models.media.Schema schema56 = schema52.type("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema6.example((java.lang.Object) "hi!");
        java.lang.String str58 = schema57.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "#/components/schemas/" + "'", str58, "#/components/schemas/");
    }

    @Test
    public void test12235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12235");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test12236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema2.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema18.setDiscriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxProperties((java.lang.Integer) (-1));
        schema18.setMinProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema18.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test12237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12237");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        schema13.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator23 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema26);
        io.swagger.oas.models.media.Schema schema31 = schema13.additionalProperties(schema26);
        java.lang.String[] strArray34 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        schema26.setRequired((java.util.List<java.lang.String>) strList35);
        boolean boolean38 = serverListOptional1.equals((java.lang.Object) strList35);
        io.swagger.oas.annotations.servers.Server[] serverArray39 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional40 = io.swagger.jaxrs2.OperationParser.getServers(serverArray39);
        io.swagger.oas.models.servers.Server[] serverArray41 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList42 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList42, serverArray41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional40.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList42);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional45 = java.util.Optional.ofNullable(serverList44);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional1.orElse(serverList44);
        io.swagger.oas.models.servers.Server[] serverArray47 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList48 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList48, serverArray47);
        java.util.Optional<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListOptional50 = java.util.Optional.of((java.util.AbstractList<io.swagger.oas.models.servers.Server>) serverList48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList48);
        java.util.Optional<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListOptional52 = java.util.Optional.of((java.util.AbstractList<io.swagger.oas.models.servers.Server>) serverList48);
        java.util.Optional<java.util.ArrayList<io.swagger.oas.models.servers.Server>> serverListOptional53 = java.util.Optional.ofNullable(serverList48);
        java.util.Optional<java.lang.Iterable<io.swagger.oas.models.servers.Server>> serverIterableOptional54 = java.util.Optional.ofNullable((java.lang.Iterable<io.swagger.oas.models.servers.Server>) serverList48);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverArray39);
        org.junit.Assert.assertNotNull(serverListOptional40);
        org.junit.Assert.assertNotNull(serverArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverListOptional45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertNotNull(serverArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(serverListOptional50);
        org.junit.Assert.assertNotNull(serverList51);
        org.junit.Assert.assertNotNull(serverListOptional52);
        org.junit.Assert.assertNotNull(serverListOptional53);
        org.junit.Assert.assertNotNull(serverIterableOptional54);
    }

    @Test
    public void test12238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.minItems((java.lang.Integer) 10);
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = schema4.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test12239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12239");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema28 = schema2.minItems((java.lang.Integer) 0);
        schema28.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema28.maxItems((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema28.getProperties();
        io.swagger.oas.models.media.Schema schema35 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema28.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test12240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.setName("no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.discriminator(discriminator20);
        java.lang.String str22 = schema21.getName();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema21.setDiscriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = schema21.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "no description" + "'", str22, "no description");
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test12241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = schema23.getXml();
        io.swagger.oas.models.media.Schema schema28 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minLength((java.lang.Integer) 10);
        schema23.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12242");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.getPattern();
        java.lang.Object obj8 = strComparableSchema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema11.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema11.description("");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema6.additionalProperties(schema26);
        boolean boolean28 = serverListOptional1.equals((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.lang.String str36 = schema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema42 = schema39.name("no description");
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema35.not(schema42);
        java.lang.Boolean boolean46 = schema42.getReadOnly();
        java.lang.Boolean boolean47 = schema42.getExclusiveMinimum();
        java.lang.Boolean boolean48 = schema42.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema55 = schema52.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.lang.Integer int63 = schema62.getMinItems();
        schema52.setAdditionalProperties(schema62);
        java.lang.Integer int65 = schema62.getMinProperties();
        java.lang.Object obj66 = schema62.getExample();
        io.swagger.oas.models.media.Schema schema67 = schema42.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema62);
        io.swagger.oas.models.media.Schema schema69 = schema42.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema42.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema30.additionalProperties(schema71);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        schema30.setExternalDocs(externalDocumentation73);
        java.lang.Class<?> wildcardClass75 = schema30.getClass();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertEquals("'" + boolean47 + "' != '" + false + "'", boolean47, false);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test12243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.$ref("hi!");
        java.lang.String str20 = schema19.getTitle();
        schema19.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        io.swagger.oas.models.media.Schema schema32 = schema29.title("no description");
        io.swagger.oas.models.media.Schema schema34 = schema32.type("no description");
        io.swagger.oas.models.media.Schema schema36 = schema32.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema32.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional45 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        schema41.setNot(schema51);
        io.swagger.oas.models.media.Schema schema54 = schema41.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema32.additionalProperties(schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        java.lang.String str59 = schema58.get$ref();
        io.swagger.oas.models.media.Schema schema61 = schema58.name("no description");
        java.lang.Boolean boolean62 = schema58.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        schema58.setProperties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema58.name("");
        io.swagger.oas.models.media.Schema schema67 = schema32.additionalProperties(schema66);
        io.swagger.oas.models.media.Schema schema68 = schema19.example((java.lang.Object) schema66);
        java.math.BigDecimal bigDecimal69 = null;
        schema19.setMultipleOf(bigDecimal69);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test12244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12244");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.minimum(bigDecimal7);
        java.lang.String str9 = schema8.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test12245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12245");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        java.lang.Boolean boolean16 = schema9.getExclusiveMaximum();
        java.lang.String str17 = schema9.getDescription();
        io.swagger.oas.models.media.Schema schema19 = schema9.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal20 = schema9.getMaximum();
        schema9.setMinLength((java.lang.Integer) 10);
        schema9.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str25 = schema9.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "no description" + "'", str25, "no description");
    }

    @Test
    public void test12246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema26 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema17.setExtensions(strMap28);
        strComparableSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema33.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12247");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.maximum(bigDecimal28);
        java.lang.Boolean boolean30 = schema29.getUniqueItems();
        io.swagger.oas.annotations.servers.Server[] serverArray32 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional33 = io.swagger.jaxrs2.OperationParser.getServers(serverArray32);
        io.swagger.oas.models.servers.Server[] serverArray34 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList35 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList35, serverArray34);
        java.util.List<io.swagger.oas.models.servers.Server> serverList37 = serverListOptional33.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList35);
        boolean boolean38 = serverListOptional33.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.minimum(bigDecimal45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema41.properties(strMap47);
        java.lang.Boolean boolean49 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        io.swagger.oas.models.media.Schema schema59 = schema56.title("no description");
        java.lang.Boolean boolean60 = schema56.getWriteOnly();
        io.swagger.oas.models.media.Schema schema62 = schema56.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema56.$ref("");
        schema41.setAdditionalProperties(schema64);
        java.lang.String str66 = schema64.getName();
        java.lang.Object obj67 = schema64.getExample();
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema64.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema64.maxLength((java.lang.Integer) 10);
        boolean boolean72 = serverListOptional33.equals((java.lang.Object) schema64);
        io.swagger.oas.annotations.servers.Server[] serverArray73 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional74 = io.swagger.jaxrs2.OperationParser.getServers(serverArray73);
        io.swagger.oas.models.servers.Server[] serverArray75 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList76 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList76, serverArray75);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional74.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList76);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional79 = java.util.Optional.ofNullable(serverList78);
        boolean boolean80 = serverListOptional79.isPresent();
        boolean boolean81 = serverListOptional79.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList82 = serverListOptional79.get();
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional33.orElse(serverList82);
        schema29.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) serverList82);
        schema29.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema88 = schema29.minLength((java.lang.Integer) 0);
        schema29.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertNotNull(serverListOptional33);
        org.junit.Assert.assertNotNull(serverArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(serverList37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(serverArray73);
        org.junit.Assert.assertNotNull(serverListOptional74);
        org.junit.Assert.assertNotNull(serverArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertNotNull(serverListOptional79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(serverList82);
        org.junit.Assert.assertNotNull(serverList83);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test12248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12248");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        schema2.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 1);
        schema19.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test12249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema12.title("#/components/schemas/");
        java.util.List<java.lang.String> strList19 = null;
        schema12.setRequired(strList19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema31);
        io.swagger.oas.models.media.Schema schema37 = schema27.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.discriminator(discriminator38);
        schema37.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema37.writeOnly((java.lang.Boolean) false);
        boolean boolean44 = schema12.equals((java.lang.Object) schema43);
        java.lang.Boolean boolean45 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test12250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        schema2.setExtensions(strMap3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        schema7.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema7.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional11 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema7);
        java.lang.Integer int12 = schema7.getMinProperties();
        java.math.BigDecimal bigDecimal13 = schema7.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema7.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema2.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        schema19.setAdditionalProperties(schema29);
        java.math.BigDecimal bigDecimal32 = null;
        schema29.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema38.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional42 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        schema38.setNot(schema48);
        java.lang.String str50 = schema48.get$ref();
        schema35.setExample((java.lang.Object) schema48);
        schema15.setExample((java.lang.Object) schema48);
        java.lang.Integer int53 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema schema55 = schema15.maxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal56 = null;
        schema55.setMinimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test12251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int19 = schema12.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema12.minLength((java.lang.Integer) 10);
        java.lang.Integer int28 = schema12.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test12252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12252");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        java.lang.Boolean boolean7 = schema2.getNullable();
        schema2.setMaxLength((java.lang.Integer) 0);
        java.lang.Object obj10 = schema2.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(obj10);
    }

    @Test
    public void test12253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12253");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "", "#/components/schemas/", "no description" };
        java.util.Optional<java.lang.String[]> strArrayOptional5 = java.util.Optional.ofNullable(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.lang.String[]> strArrayOptional11 = java.util.Optional.ofNullable(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.lang.String[]> strArrayOptional13 = java.util.Optional.of(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArrayOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(strArrayOptional11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
        org.junit.Assert.assertNotNull(strArrayOptional13);
        org.junit.Assert.assertNotNull(tagSetOptional14);
        org.junit.Assert.assertNotNull(tagSetOptional15);
        org.junit.Assert.assertNotNull(tagSetOptional16);
    }

    @Test
    public void test12254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema10.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.type("");
        schema18.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test12255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema32.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        io.swagger.oas.annotations.servers.Server[] serverArray40 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional41 = io.swagger.jaxrs2.OperationParser.getServers(serverArray40);
        io.swagger.oas.models.servers.Server[] serverArray42 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList43 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList43, serverArray42);
        java.util.List<io.swagger.oas.models.servers.Server> serverList45 = serverListOptional41.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList43);
        boolean boolean46 = serverListOptional41.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.minimum(bigDecimal53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema49.properties(strMap55);
        java.lang.Boolean boolean57 = schema49.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.lang.Integer int65 = schema64.getMinItems();
        io.swagger.oas.models.media.Schema schema67 = schema64.title("no description");
        java.lang.Boolean boolean68 = schema64.getWriteOnly();
        io.swagger.oas.models.media.Schema schema70 = schema64.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema64.$ref("");
        schema49.setAdditionalProperties(schema72);
        java.lang.String str74 = schema72.getName();
        java.lang.Object obj75 = schema72.getExample();
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema72.xml(xML76);
        io.swagger.oas.models.media.Schema schema79 = schema72.maxLength((java.lang.Integer) 10);
        boolean boolean80 = serverListOptional41.equals((java.lang.Object) schema72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        schema72.setProperties(strMap81);
        schema72.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema86 = schema72.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema87 = schema38.example((java.lang.Object) schema72);
        schema72.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(serverArray40);
        org.junit.Assert.assertNotNull(serverListOptional41);
        org.junit.Assert.assertNotNull(serverArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(serverList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test12256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        java.lang.Boolean boolean16 = schema14.getReadOnly();
        java.lang.String str17 = schema14.getPattern();
        java.math.BigDecimal bigDecimal18 = schema14.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema22.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal28 = schema22.getMultipleOf();
        java.math.BigDecimal bigDecimal29 = null;
        schema22.setMaximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema22.readOnly((java.lang.Boolean) true);
        schema14.setDefault((java.lang.Object) schema32);
        io.swagger.oas.models.media.Schema schema35 = schema32.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test12257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema schema32 = schema27.minLength((java.lang.Integer) 0);
        schema27.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12258");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = java.util.Optional.ofNullable(serverList5);
        boolean boolean7 = serverListOptional6.isPresent();
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional6.get();
        java.lang.String str9 = serverListOptional6.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema10.pattern("no description");
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema19.getEnum();
        io.swagger.oas.models.media.Schema schema22 = schema16.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema24 = schema16.minProperties((java.lang.Integer) 100);
        boolean boolean25 = serverListOptional6.equals((java.lang.Object) schema24);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional6.get();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.lang.String str34 = schema33.get$ref();
        io.swagger.oas.models.media.Schema schema36 = schema33.name("no description");
        schema36.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema29.not(schema36);
        java.lang.Boolean boolean40 = schema36.getReadOnly();
        java.lang.Boolean boolean41 = schema36.getExclusiveMinimum();
        java.lang.Integer int42 = schema36.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = schema46.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional50 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema46);
        java.lang.Integer int51 = schema46.getMinProperties();
        java.math.BigDecimal bigDecimal52 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema schema53 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema46);
        java.util.List<java.lang.String> strList54 = schema36.getRequired();
        io.swagger.oas.models.media.Schema schema56 = schema36.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = schema56.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        boolean boolean61 = serverListOptional6.equals((java.lang.Object) externalDocumentation59);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Optional[[]]" + "'", str9, "Optional[[]]");
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test12259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12259");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.getPattern();
        java.lang.Object obj8 = strComparableSchema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema11.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema11.description("");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema6.additionalProperties(schema26);
        boolean boolean28 = serverListOptional1.equals((java.lang.Object) strComparableSchema6);
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema6.pattern("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        io.swagger.oas.models.media.Schema schema41 = schema38.title("no description");
        io.swagger.oas.models.media.Schema schema43 = schema41.type("no description");
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema43.type("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        schema47.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema6.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema52 = schema50.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test12260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        java.lang.String str80 = schema79.getTitle();
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema79.multipleOf(bigDecimal81);
        java.math.BigDecimal bigDecimal83 = null;
        schema82.setMinimum(bigDecimal83);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList85 = schema82.getEnum();
        java.lang.String str86 = schema82.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strComparableList85);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test12261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12261");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setNot(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        schema48.setAdditionalProperties(schema58);
        java.lang.String[] strArray64 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema58.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = schema58.name("hi!");
        schema69.setName("no description");
        schema10.setNot(schema69);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema69.multipleOf(bigDecimal73);
        java.lang.Object obj75 = schema74.getExample();
        schema74.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema74.minimum(bigDecimal78);
        java.lang.Boolean boolean80 = schema79.getReadOnly();
        schema79.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str83 = schema79.getFormat();
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema79.maximum(bigDecimal84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test12262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema23.addRequiredItem("no description");
        java.lang.Integer int30 = schema23.getMinProperties();
        io.swagger.oas.models.media.Schema schema32 = schema23.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        schema32.setExternalDocs(externalDocumentation35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12263");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.multipleOf(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        schema15.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema15.title("no description");
        io.swagger.oas.models.media.Schema schema21 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema24 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema21);
        io.swagger.oas.models.media.Schema schema25 = null;
        schema24.setNot(schema25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test12264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema24.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema32 = schema24.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema24.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.lang.String str38 = schema37.get$ref();
        io.swagger.oas.models.media.Schema schema40 = schema37.name("no description");
        java.lang.Boolean boolean41 = schema37.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.lang.String str45 = schema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.lang.String str49 = schema48.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema48.name("no description");
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema44.not(schema51);
        io.swagger.oas.models.media.Schema schema55 = schema37.not(schema51);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        schema51.setDiscriminator(discriminator56);
        io.swagger.oas.models.media.Schema schema59 = schema51.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema51.xml(xML60);
        io.swagger.oas.models.media.Schema schema63 = schema51.uniqueItems((java.lang.Boolean) true);
        schema34.setDefault((java.lang.Object) schema51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test12265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        schema29.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = schema29.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.discriminator(discriminator34);
        java.lang.Integer int36 = schema35.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
    }

    @Test
    public void test12266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema24.minItems((java.lang.Integer) 10);
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str33 = schema28.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema36.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        schema39.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        io.swagger.oas.models.media.Discriminator discriminator49 = schema48.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        schema52.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean55 = schema52.getUniqueItems();
        io.swagger.oas.models.media.Schema schema56 = schema48.not(schema52);
        io.swagger.oas.models.media.Schema schema57 = schema39.additionalProperties(schema52);
        schema52.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.lang.String str63 = schema62.get$ref();
        io.swagger.oas.models.media.Schema schema65 = schema62.name("no description");
        io.swagger.oas.models.media.Schema schema67 = schema62.minLength((java.lang.Integer) 100);
        java.lang.String str68 = schema67.getPattern();
        io.swagger.oas.models.media.Schema schema69 = schema52.additionalProperties(schema67);
        schema69.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int72 = schema69.getMinProperties();
        io.swagger.oas.models.media.Schema schema74 = schema69.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema69.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setAdditionalProperties(schema69);
        schema23.setDefault((java.lang.Object) schema69);
        java.lang.Boolean boolean79 = schema23.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean79);
    }

    @Test
    public void test12267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.String str7 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema10.setAdditionalProperties(schema20);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.discriminator(discriminator23);
        java.lang.Integer int25 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.lang.String[] strArray44 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema38.required((java.util.List<java.lang.String>) strList45);
        schema20.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = schema2.required((java.util.List<java.lang.String>) strList45);
        java.math.BigDecimal bigDecimal50 = null;
        schema2.setMaximum(bigDecimal50);
        java.lang.Object obj52 = schema2.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(obj52);
    }

    @Test
    public void test12268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema19.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema19.maxProperties((java.lang.Integer) 1);
        schema19.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12269");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema schema36 = schema26.readOnly((java.lang.Boolean) true);
        schema36.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        java.lang.Boolean boolean51 = schema50.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = schema54.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema57 = schema54.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.lang.Integer int65 = schema64.getMinItems();
        schema54.setAdditionalProperties(schema64);
        java.lang.String[] strArray70 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        io.swagger.oas.models.media.Schema schema73 = schema64.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema74 = schema50.required((java.util.List<java.lang.String>) strList71);
        io.swagger.oas.models.media.Schema schema75 = schema36.required((java.util.List<java.lang.String>) strList71);
        schema36.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator78 = null;
        schema36.setDiscriminator(discriminator78);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test12270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        schema26.setNot(schema32);
        io.swagger.oas.models.media.Schema schema41 = schema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema26.setDiscriminator(discriminator42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema26.maximum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema26.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema51.maxItems((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test12271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12271");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = schema11.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test12272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12272");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema6.readOnly((java.lang.Boolean) true);
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema14.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test12273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        java.lang.Object obj17 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema11.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema21 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema22 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema21);
        java.lang.String str23 = schema19.getPattern();
        java.lang.Boolean boolean24 = schema19.getReadOnly();
        io.swagger.oas.models.media.Schema schema26 = schema19.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema19.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test12274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12274");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        boolean boolean8 = serverListOptional1.isPresent();
        boolean boolean9 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        schema16.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema16.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxLength((java.lang.Integer) 100);
        boolean boolean74 = schema54.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema76 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema54.minimum(bigDecimal77);
        boolean boolean79 = serverListOptional1.equals((java.lang.Object) bigDecimal77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema80.maxProperties((java.lang.Integer) 10);
        java.lang.String str83 = schema82.get$ref();
        io.swagger.oas.models.media.Schema schema85 = schema82.name("no description");
        schema85.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int88 = schema85.getMaxLength();
        io.swagger.oas.models.media.Schema schema90 = schema85.exclusiveMaximum((java.lang.Boolean) false);
        boolean boolean91 = serverListOptional1.equals((java.lang.Object) schema85);
        java.lang.String str92 = serverListOptional1.toString();
        java.lang.Object obj93 = null;
        boolean boolean94 = serverListOptional1.equals(obj93);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Optional.empty" + "'", str92, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test12275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12275");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.xml(xML19);
        java.lang.Integer int21 = schema16.getMaxItems();
        java.lang.String str22 = schema16.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test12276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12276");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.maximum(bigDecimal34);
        java.lang.Integer int36 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema38 = schema33.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema38.minProperties((java.lang.Integer) 0);
        java.lang.Integer int41 = schema38.getMaxLength();
        schema38.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema38.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test12277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        java.lang.Integer int41 = schema38.getMinLength();
        io.swagger.oas.models.media.Schema schema43 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        schema49.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        schema62.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean65 = schema62.getUniqueItems();
        io.swagger.oas.models.media.Schema schema66 = schema58.not(schema62);
        io.swagger.oas.models.media.Schema schema67 = schema49.additionalProperties(schema62);
        io.swagger.oas.models.media.Schema schema69 = schema62.name("no description");
        io.swagger.oas.models.media.Schema schema71 = schema69.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = schema69.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema77 = schema75.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema79 = schema77.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema79.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema82 = schema43.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test12278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12278");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("");
        java.lang.Integer int15 = schema14.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        schema22.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        schema35.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean38 = schema35.getUniqueItems();
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema35);
        io.swagger.oas.models.media.Schema schema40 = schema22.additionalProperties(schema35);
        java.lang.String str41 = schema35.getFormat();
        java.lang.Integer int42 = schema35.getMinProperties();
        schema14.addExtension("hi!", (java.lang.Object) int42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = schema14.getExtensions();
        schema6.setExtensions(strMap44);
        schema6.setDeprecated((java.lang.Boolean) false);
        schema6.setName("hi!");
        schema6.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12279");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema18.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal28 = null;
        schema18.setMultipleOf(bigDecimal28);
        java.math.BigDecimal bigDecimal30 = schema18.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema18.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean33 = schema32.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test12280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema5.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema14.title("no description");
        io.swagger.oas.models.media.Schema schema20 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.title("no description");
        io.swagger.oas.models.media.Schema schema28 = schema14.additionalProperties(schema23);
        java.lang.Object obj29 = schema23.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema23.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema33 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema34 = schema31.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema36.pattern("");
        schema36.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema36.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema11.properties(strMap41);
        io.swagger.oas.models.media.Schema schema44 = schema42.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test12281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        schema12.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = schema30.title("no description");
        io.swagger.oas.models.media.Schema schema35 = schema33.type("no description");
        java.lang.Boolean boolean36 = schema35.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.lang.Integer int50 = schema49.getMinItems();
        schema39.setAdditionalProperties(schema49);
        java.lang.String[] strArray55 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = schema49.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema59 = schema35.required((java.util.List<java.lang.String>) strList56);
        schema12.setRequired((java.util.List<java.lang.String>) strList56);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema12.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema12.properties(strMap62);
        schema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema12.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test12282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        java.lang.Integer int19 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema12.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema12.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema12.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema38.discriminator(discriminator43);
        java.lang.Integer int45 = schema38.getMaxLength();
        io.swagger.oas.models.media.Schema schema47 = schema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema38.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema38.$ref("");
        schema38.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        schema56.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema60 = schema56.title("no description");
        io.swagger.oas.models.media.Schema schema62 = schema56.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema65.title("no description");
        io.swagger.oas.models.media.Schema schema70 = schema56.additionalProperties(schema65);
        java.lang.Object obj71 = schema65.getExample();
        io.swagger.oas.models.media.Schema schema73 = schema65.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema75 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema76 = schema73.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema75);
        io.swagger.oas.models.media.Schema schema78 = schema76.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema80 = schema78.pattern("");
        schema78.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema78.getProperties();
        schema38.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema85 = schema12.properties(strMap83);
        io.swagger.oas.models.media.XML xML86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.xml(xML86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(obj71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test12283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) 1);
        schema12.set$ref("");
        io.swagger.oas.models.media.Schema schema18 = schema12.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean19 = schema12.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test12284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setNot(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        schema59.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        io.swagger.oas.models.media.Schema schema69 = schema5.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema71 = schema69.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        java.lang.String str75 = schema74.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        java.lang.String str79 = schema78.get$ref();
        io.swagger.oas.models.media.Schema schema81 = schema78.name("no description");
        schema81.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema84 = schema74.not(schema81);
        schema74.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean87 = schema74.getDeprecated();
        java.lang.Integer int88 = schema74.getMaxItems();
        schema69.setExample((java.lang.Object) int88);
        schema69.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNull(int88);
    }

    @Test
    public void test12285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12285");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) true);
        schema25.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12286");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema28 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test12287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12287");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        schema21.setWriteOnly((java.lang.Boolean) true);
        schema21.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal26 = null;
        schema21.setMinimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.maximum(bigDecimal30);
        io.swagger.oas.models.media.Schema schema33 = schema29.maxItems((java.lang.Integer) 10);
        schema29.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12288");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        schema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema3.minimum(bigDecimal6);
        java.lang.Integer int8 = schema7.getMinLength();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
    }

    @Test
    public void test12289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12289");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        schema2.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema2.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean23 = schema20.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema26.getNot();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.minimum(bigDecimal30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema26.properties(strMap32);
        java.lang.Boolean boolean34 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.title("no description");
        java.lang.Boolean boolean45 = schema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = schema41.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema41.$ref("");
        schema26.setAdditionalProperties(schema49);
        java.lang.String str51 = schema49.getName();
        java.lang.Object obj52 = schema49.getExample();
        io.swagger.oas.models.media.XML xML53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema49.xml(xML53);
        io.swagger.oas.annotations.servers.Server[] serverArray55 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional56 = io.swagger.jaxrs2.OperationParser.getServers(serverArray55);
        io.swagger.oas.models.servers.Server[] serverArray57 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList58 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList58, serverArray57);
        java.util.List<io.swagger.oas.models.servers.Server> serverList60 = serverListOptional56.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList58);
        io.swagger.oas.annotations.servers.Server[] serverArray61 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional62 = io.swagger.jaxrs2.OperationParser.getServers(serverArray61);
        io.swagger.oas.models.servers.Server[] serverArray63 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList64 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList64, serverArray63);
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional62.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList64);
        boolean boolean67 = serverListOptional62.isPresent();
        boolean boolean68 = serverListOptional62.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray69 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional70 = io.swagger.jaxrs2.OperationParser.getServers(serverArray69);
        io.swagger.oas.models.servers.Server[] serverArray71 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList72 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList72, serverArray71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList74 = serverListOptional70.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList72);
        java.util.List<io.swagger.oas.models.servers.Server> serverList75 = serverListOptional62.orElse(serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional56.orElse(serverList74);
        boolean boolean77 = schema54.equals((java.lang.Object) serverListOptional56);
        schema20.setNot(schema54);
        io.swagger.oas.models.media.Schema schema80 = schema20.minItems((java.lang.Integer) 100);
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean83 = schema20.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(obj52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(serverArray55);
        org.junit.Assert.assertNotNull(serverListOptional56);
        org.junit.Assert.assertNotNull(serverArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(serverList60);
        org.junit.Assert.assertNotNull(serverArray61);
        org.junit.Assert.assertNotNull(serverListOptional62);
        org.junit.Assert.assertNotNull(serverArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverList66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(serverArray69);
        org.junit.Assert.assertNotNull(serverListOptional70);
        org.junit.Assert.assertNotNull(serverArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serverList74);
        org.junit.Assert.assertNotNull(serverList75);
        org.junit.Assert.assertNotNull(serverList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test12290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int16 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        java.lang.Boolean boolean28 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        io.swagger.oas.models.media.Schema schema38 = schema36.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.minimum(bigDecimal39);
        java.lang.Boolean boolean41 = schema36.getDeprecated();
        schema36.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test12291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        schema38.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema38.getProperties();
        io.swagger.oas.models.media.Schema schema43 = schema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        java.math.BigDecimal bigDecimal59 = null;
        schema56.setMaximum(bigDecimal59);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.lang.Integer int63 = schema56.getMaxLength();
        io.swagger.oas.models.media.Schema schema65 = schema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema56.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema schema69 = schema56.$ref("");
        java.lang.Boolean boolean70 = schema56.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema56.maximum(bigDecimal71);
        io.swagger.oas.models.media.Schema schema73 = schema43.example((java.lang.Object) schema56);
        schema43.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema43.maximum(bigDecimal76);
        schema43.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test12292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12292");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.format("");
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable12 = strComparableSchema9.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = strComparableSchema9.getExternalDocs();
        java.math.BigDecimal bigDecimal14 = strComparableSchema9.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema9.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.minLength((java.lang.Integer) (-1));
        java.lang.String str21 = schema20.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema24.not(schema31);
        java.lang.Boolean boolean35 = schema31.getReadOnly();
        java.lang.Boolean boolean36 = schema31.getExclusiveMinimum();
        java.lang.Integer int37 = schema31.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional45 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema41);
        java.lang.Integer int46 = schema41.getMinProperties();
        java.math.BigDecimal bigDecimal47 = schema41.getMaximum();
        io.swagger.oas.models.media.Schema schema48 = schema31.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema51.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList53 = schema51.getEnum();
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = schema58.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema61 = schema58.format("no description");
        io.swagger.oas.models.media.Schema schema63 = schema61.pattern("");
        java.lang.Integer int64 = schema63.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema68.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema71 = schema68.format("no description");
        schema71.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema74.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.properties(strMap77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        io.swagger.oas.models.media.Discriminator discriminator81 = schema80.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema82.maxProperties((java.lang.Integer) 10);
        schema84.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean87 = schema84.getUniqueItems();
        io.swagger.oas.models.media.Schema schema88 = schema80.not(schema84);
        io.swagger.oas.models.media.Schema schema89 = schema71.additionalProperties(schema84);
        java.lang.String str90 = schema84.getFormat();
        java.lang.Integer int91 = schema84.getMinProperties();
        schema63.addExtension("hi!", (java.lang.Object) int91);
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = schema63.getExtensions();
        schema55.setExtensions(strMap93);
        schema41.setExtensions(strMap93);
        schema20.setExtensions(strMap93);
        schema8.setExtensions(strMap93);
        schema8.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strComparable12);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(bigDecimal14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNull(strComparableList53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(discriminator81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test12293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema28.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str33 = schema32.getFormat();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMultipleOf(bigDecimal34);
        io.swagger.oas.models.media.Schema schema37 = schema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema37.pattern("no description");
        java.math.BigDecimal bigDecimal40 = null;
        schema37.setMaximum(bigDecimal40);
        java.math.BigDecimal bigDecimal42 = null;
        schema37.setMultipleOf(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12294");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean64 = schema31.getExclusiveMaximum();
        java.lang.Boolean boolean65 = schema31.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNull(boolean65);
    }

    @Test
    public void test12295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema42 = schema40.title("no description");
        io.swagger.oas.models.media.Schema schema44 = schema42.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.lang.String str48 = schema47.get$ref();
        io.swagger.oas.models.media.Schema schema50 = schema47.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator51 = schema47.getDiscriminator();
        java.lang.String str52 = schema47.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema55.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.lang.Integer int66 = schema65.getMinItems();
        schema55.setAdditionalProperties(schema65);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.discriminator(discriminator68);
        java.lang.Integer int70 = schema65.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema74 = schema73.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema76 = schema73.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.properties(strMap80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.properties(strMap82);
        java.lang.Integer int84 = schema83.getMinItems();
        schema73.setAdditionalProperties(schema83);
        java.lang.String[] strArray89 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        io.swagger.oas.models.media.Schema schema92 = schema83.required((java.util.List<java.lang.String>) strList90);
        schema65.setRequired((java.util.List<java.lang.String>) strList90);
        io.swagger.oas.models.media.Schema schema94 = schema47.required((java.util.List<java.lang.String>) strList90);
        schema44.setRequired((java.util.List<java.lang.String>) strList90);
        java.lang.Boolean boolean96 = schema44.getNullable();
        schema44.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str99 = schema44.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean96);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test12296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setDeprecated((java.lang.Boolean) false);
        schema18.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test12297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12297");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int23 = schema22.getMinProperties();
        schema22.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test12298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12298");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.minLength((java.lang.Integer) (-1));
        schema3.setExample((java.lang.Object) schema9);
        schema3.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test12299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12299");
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional0 = java.util.Optional.empty();
        java.lang.String str1 = serverListOptional0.toString();
        org.junit.Assert.assertNotNull(serverListOptional0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Optional.empty" + "'", str1, "Optional.empty");
    }

    @Test
    public void test12300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        java.lang.String str31 = schema9.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.lang.String str35 = schema34.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.lang.String str39 = schema38.get$ref();
        io.swagger.oas.models.media.Schema schema41 = schema38.name("no description");
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema34.not(schema41);
        java.lang.Boolean boolean45 = schema41.getReadOnly();
        java.lang.Boolean boolean46 = schema41.getExclusiveMinimum();
        java.lang.Integer int47 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema51.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional55 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema51);
        java.lang.Integer int56 = schema51.getMinProperties();
        java.math.BigDecimal bigDecimal57 = schema51.getMaximum();
        io.swagger.oas.models.media.Schema schema58 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema51);
        schema58.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema58.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema58.discriminator(discriminator63);
        schema64.setExclusiveMinimum((java.lang.Boolean) true);
        schema64.setNullable((java.lang.Boolean) true);
        schema9.setDefault((java.lang.Object) schema64);
        io.swagger.oas.models.media.XML xML70 = null;
        schema9.setXml(xML70);
        io.swagger.oas.models.media.Schema schema73 = schema9.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema54);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test12301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema13.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema13.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test12302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12302");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        io.swagger.oas.models.media.Schema schema18 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema20 = schema16.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema20.externalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12303");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.lang.Integer int58 = schema57.getMinItems();
        schema47.setAdditionalProperties(schema57);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.maxLength((java.lang.Integer) 100);
        boolean boolean64 = schema44.equals((java.lang.Object) 100);
        java.math.BigDecimal bigDecimal65 = null;
        schema44.setMultipleOf(bigDecimal65);
        schema44.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str69 = schema44.getFormat();
        io.swagger.oas.models.media.Schema schema71 = schema44.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal72 = null;
        schema44.setMultipleOf(bigDecimal72);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test12304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema47);
        io.swagger.oas.models.media.Schema schema53 = schema43.minItems((java.lang.Integer) 10);
        schema53.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean56 = schema53.getNullable();
        java.math.BigDecimal bigDecimal57 = schema53.getMaximum();
        io.swagger.oas.models.media.Schema schema59 = schema53.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema62.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema62.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList68 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        schema65.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        io.swagger.oas.models.media.Schema schema73 = schema65.maxItems((java.lang.Integer) 1);
        schema65.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema53.not(schema65);
        boolean boolean77 = schema34.equals((java.lang.Object) schema76);
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema34.xml(xML78);
        io.swagger.oas.models.media.Schema schema81 = schema79.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str82 = schema81.getDescription();
        java.math.BigDecimal bigDecimal83 = schema81.getMultipleOf();
        io.swagger.oas.models.media.Schema schema85 = schema81.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test12305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        schema20.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema20.minimum(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        schema2.setExtensions(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.lang.Integer int14 = schema13.getMinItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("no description");
        java.lang.Boolean boolean17 = schema13.getWriteOnly();
        schema13.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.lang.Integer int28 = schema27.getMinItems();
        schema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema13.addProperties("hi!", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema31.setNot(schema34);
        schema34.setName("");
        java.math.BigDecimal bigDecimal38 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema2.not(schema34);
        java.util.List<java.lang.String> strList40 = schema34.getRequired();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema34.externalDocs(externalDocumentation41);
        java.lang.Integer int43 = schema42.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test12307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema schema27 = schema25.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        java.lang.Integer int30 = schema29.getMaxItems();
        io.swagger.oas.models.media.Schema schema32 = schema29.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.lang.String str36 = schema35.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema42 = schema39.name("no description");
        schema42.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema35.not(schema42);
        schema35.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema35.multipleOf(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema35.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema51.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean54 = schema53.getDeprecated();
        java.lang.Boolean boolean55 = schema53.getWriteOnly();
        schema53.setMaxLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList58 = schema53.getRequired();
        io.swagger.oas.models.media.Schema schema59 = schema29.not(schema53);
        java.lang.Class<?> wildcardClass60 = schema53.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + false + "'", boolean55, false);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test12308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = schema18.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema51.pattern("no description");
        strComparableSchema51.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema51.minItems((java.lang.Integer) 0);
        schema59.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema59.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        java.lang.String str67 = schema66.get$ref();
        io.swagger.oas.models.media.Schema schema69 = schema66.name("no description");
        schema69.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator72 = null;
        schema69.setDiscriminator(discriminator72);
        java.lang.String[] strArray75 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema69.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema79 = schema63.required((java.util.List<java.lang.String>) strList76);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema79);
        io.swagger.oas.models.media.Schema schema82 = schema79.nullable((java.lang.Boolean) false);
        schema79.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema79.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test12309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema26.not(schema30);
        schema30.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema18.not(schema30);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema schema52 = schema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema48.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        io.swagger.oas.models.media.Discriminator discriminator62 = schema61.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean68 = schema65.getUniqueItems();
        io.swagger.oas.models.media.Schema schema69 = schema61.not(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.format("no description");
        schema75.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema61.not(schema75);
        io.swagger.oas.models.media.Schema schema80 = schema61.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema80.setRequired((java.util.List<java.lang.String>) strList86);
        schema48.setRequired((java.util.List<java.lang.String>) strList86);
        schema37.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema11.additionalProperties(schema37);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = schema11.getExternalDocs();
        io.swagger.oas.models.media.Schema schema94 = schema11.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema96 = schema11.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(externalDocumentation92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test12310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12310");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = schema19.not(schema23);
        io.swagger.oas.models.media.Schema schema28 = schema10.additionalProperties(schema23);
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema32 = schema28.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema28.minProperties((java.lang.Integer) 100);
        schema34.set$ref("Optional[[]]");
        java.util.List<java.lang.String> strList37 = schema34.getRequired();
        io.swagger.oas.models.media.Schema schema39 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.maximum(bigDecimal40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.lang.String str28 = schema27.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema27.name("no description");
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int33 = schema30.getMaxLength();
        io.swagger.oas.models.media.Schema schema35 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = schema30.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        java.lang.Boolean boolean49 = schema45.getWriteOnly();
        io.swagger.oas.models.media.Schema schema51 = schema45.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema45.$ref("");
        java.lang.Integer int54 = schema45.getMinItems();
        io.swagger.oas.models.media.XML xML55 = schema45.getXml();
        java.lang.String str56 = schema45.getType();
        io.swagger.oas.models.media.Schema schema57 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        schema37.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema37.maxLength((java.lang.Integer) (-1));
        schema37.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(xML55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test12312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        schema20.setAdditionalProperties(schema30);
        java.lang.String[] strArray36 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema30.required((java.util.List<java.lang.String>) strList37);
        schema12.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.lang.Integer int54 = schema53.getMinItems();
        schema43.setAdditionalProperties(schema53);
        java.math.BigDecimal bigDecimal56 = null;
        schema53.setMaximum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema53.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) schema53);
        java.lang.Object obj61 = schema12.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean75 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema80 = schema79.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema82 = schema79.format("no description");
        schema82.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean85 = schema82.getReadOnly();
        io.swagger.oas.models.media.Schema schema87 = schema82.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema72.not(schema82);
        io.swagger.oas.models.media.Schema schema90 = schema88.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = null;
        schema90.setProperties(strMap91);
        io.swagger.oas.models.media.Schema schema94 = schema90.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema95 = schema12.not(schema94);
        schema12.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal98 = null;
        io.swagger.oas.models.media.Schema schema99 = schema12.multipleOf(bigDecimal98);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(obj61);
        org.junit.Assert.assertEquals(obj61.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj61), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj61), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test12313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        java.math.BigDecimal bigDecimal4 = strComparableSchema0.getMinimum();
        java.lang.String str5 = strComparableSchema0.getTitle();
        io.swagger.oas.models.media.XML xML6 = strComparableSchema0.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        schema9.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj22 = null;
        boolean boolean23 = schema9.equals(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str26 = schema25.getFormat();
        java.lang.Class<?> wildcardClass27 = schema25.getClass();
        strComparableSchema0.setExample((java.lang.Object) wildcardClass27);
        strComparableSchema0.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(bigDecimal4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(xML6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test12314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema19.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema19.minProperties((java.lang.Integer) 10);
        schema19.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test12315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.minLength((java.lang.Integer) (-1));
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        io.swagger.oas.models.media.Schema schema41 = schema38.title("no description");
        java.lang.Boolean boolean42 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = schema38.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator47 = schema44.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = schema44.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal54 = null;
        schema49.setMultipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema49.deprecated((java.lang.Boolean) false);
        schema29.setExample((java.lang.Object) schema57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test12316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.minLength((java.lang.Integer) (-1));
        schema3.setExample((java.lang.Object) schema9);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema9.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema19.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: true\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        schema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int6 = schema3.getMaxItems();
        io.swagger.oas.models.media.Schema schema8 = schema3.minProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal9 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.lang.String str13 = schema12.get$ref();
        io.swagger.oas.models.media.Schema schema15 = schema12.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator16 = schema12.getDiscriminator();
        java.lang.Integer int17 = schema12.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema schema27 = schema24.name("no description");
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema20.not(schema27);
        java.lang.Boolean boolean31 = schema27.getReadOnly();
        java.lang.Boolean boolean32 = schema27.getExclusiveMinimum();
        java.lang.Integer int33 = schema27.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        schema37.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema37.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional41 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema37);
        java.lang.Integer int42 = schema37.getMinProperties();
        java.math.BigDecimal bigDecimal43 = schema37.getMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema27.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList49 = schema47.getEnum();
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = schema54.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema57 = schema54.format("no description");
        io.swagger.oas.models.media.Schema schema59 = schema57.pattern("");
        java.lang.Integer int60 = schema59.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = schema64.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema67 = schema64.format("no description");
        schema67.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.properties(strMap75);
        io.swagger.oas.models.media.Discriminator discriminator77 = schema76.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema78.maxProperties((java.lang.Integer) 10);
        schema80.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean83 = schema80.getUniqueItems();
        io.swagger.oas.models.media.Schema schema84 = schema76.not(schema80);
        io.swagger.oas.models.media.Schema schema85 = schema67.additionalProperties(schema80);
        java.lang.String str86 = schema80.getFormat();
        java.lang.Integer int87 = schema80.getMinProperties();
        schema59.addExtension("hi!", (java.lang.Object) int87);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema59.getExtensions();
        schema51.setExtensions(strMap89);
        schema37.setExtensions(strMap89);
        schema12.setExtensions(strMap89);
        schema8.setExtensions(strMap89);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNull(strComparableList49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(discriminator77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test12318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        io.swagger.oas.models.media.Schema schema36 = schema19.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean37 = schema36.getWriteOnly();
        schema36.setNullable((java.lang.Boolean) true);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema36.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test12319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema14.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str17 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema19 = schema14.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema14.getNot();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML23 = null;
        schema20.setXml(xML23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema25.pattern("no description");
        io.swagger.oas.models.media.Schema schema31 = schema29.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema33.title("no description");
        schema20.setDefault((java.lang.Object) "no description");
        io.swagger.oas.models.media.Schema schema37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema20.additionalProperties(schema37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test12320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12320");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) true);
        schema6.setDefault((java.lang.Object) schema30);
        java.lang.Integer int32 = schema30.getMinLength();
        java.math.BigDecimal bigDecimal33 = null;
        schema30.setMinimum(bigDecimal33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.minimum(bigDecimal35);
        java.lang.Integer int37 = schema36.getMaxItems();
        java.math.BigDecimal bigDecimal38 = null;
        schema36.setMaximum(bigDecimal38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test12321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        java.lang.String str80 = schema79.getTitle();
        io.swagger.oas.annotations.servers.Server[] serverArray82 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional83 = io.swagger.jaxrs2.OperationParser.getServers(serverArray82);
        io.swagger.oas.models.servers.Server[] serverArray84 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList85 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList85, serverArray84);
        java.util.List<io.swagger.oas.models.servers.Server> serverList87 = serverListOptional83.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList85);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional88 = java.util.Optional.ofNullable(serverList87);
        java.lang.String str89 = serverListOptional88.toString();
        schema79.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) serverListOptional88);
        java.util.List<io.swagger.oas.models.servers.Server> serverList91 = serverListOptional88.get();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(serverArray82);
        org.junit.Assert.assertNotNull(serverListOptional83);
        org.junit.Assert.assertNotNull(serverArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(serverList87);
        org.junit.Assert.assertNotNull(serverListOptional88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "Optional[[]]" + "'", str89, "Optional[[]]");
        org.junit.Assert.assertNotNull(serverList91);
    }

    @Test
    public void test12322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12322");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema18.discriminator(discriminator29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema30.getProperties();
        schema30.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.name("no description");
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema39.setDiscriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema45.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema30.not(schema45);
        io.swagger.oas.models.media.Schema schema50 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test12323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12323");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean11 = schema5.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema5.getEnum();
        schema5.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema5.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema31 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        io.swagger.oas.models.media.Schema schema34 = schema31.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema34.setMaxLength((java.lang.Integer) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema34);
    }

    @Test
    public void test12324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema2.type("no description");
        java.lang.Boolean boolean13 = schema12.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test12325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12325");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema schema36 = schema26.readOnly((java.lang.Boolean) true);
        schema36.set$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema schema52 = schema50.pattern("#/components/schemas/");
        java.lang.String str53 = schema52.getDescription();
        schema36.setDefault((java.lang.Object) str53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        schema36.setProperties(strMap55);
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema36.xml(xML57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test12326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12326");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional4 = java.util.Optional.of(serverListOptional3);
        boolean boolean5 = serverListOptional3.isPresent();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptionalOptional4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test12327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12327");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        java.lang.String str9 = schema6.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        schema20.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean23 = schema20.getUniqueItems();
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema20);
        io.swagger.oas.models.media.Schema schema26 = schema24.pattern("");
        java.lang.String str27 = schema26.getDescription();
        boolean boolean28 = schema6.equals((java.lang.Object) str27);
        io.swagger.oas.models.media.Schema<java.lang.Iterable<io.swagger.oas.models.servers.Server>> serverIterableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Iterable<io.swagger.oas.models.servers.Server>>();
        io.swagger.oas.models.media.Schema schema30 = schema6.additionalProperties((io.swagger.oas.models.media.Schema) serverIterableSchema29);
        io.swagger.oas.models.media.XML xML31 = schema6.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(xML31);
    }

    @Test
    public void test12328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.setName("no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        schema19.setMinimum(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test12329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema10 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str11 = schema10.getDescription();
        io.swagger.oas.models.media.Schema schema13 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema15.getNot();
        schema15.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
    }

    @Test
    public void test12330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12330");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        io.swagger.oas.models.media.Schema schema81 = schema78.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema81.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema83.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema83.maxLength((java.lang.Integer) 1);
        java.lang.String str88 = schema87.getType();
        io.swagger.oas.models.media.Schema schema89 = schema87.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(schema89);
    }

    @Test
    public void test12331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12331");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema25.xml(xML68);
        java.lang.Boolean boolean70 = schema69.getExclusiveMinimum();
        schema69.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema69.discriminator(discriminator73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test12332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.$ref("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.$ref("");
        java.lang.Boolean boolean12 = schema9.getNullable();
        io.swagger.oas.models.media.Schema schema13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.not(schema13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test12333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12333");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        java.lang.Boolean boolean14 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema16 = schema12.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        schema16.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema16.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12334");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema12.setExternalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema12.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
    }

    @Test
    public void test12335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12335");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        java.lang.String[] strArray48 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema42.required((java.util.List<java.lang.String>) strList49);
        java.lang.Object obj52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.example(obj52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.xml(xML56);
        java.lang.Integer int58 = schema57.getMinProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema23.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        schema71.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean74 = schema71.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema71);
        io.swagger.oas.models.media.Schema schema77 = schema67.minItems((java.lang.Integer) 10);
        schema77.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean80 = schema77.getNullable();
        java.math.BigDecimal bigDecimal81 = schema77.getMaximum();
        io.swagger.oas.models.media.Schema schema83 = schema77.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema77.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema77.minimum(bigDecimal86);
        schema57.setExample((java.lang.Object) schema87);
        java.lang.Boolean boolean89 = schema87.getDeprecated();
        java.math.BigDecimal bigDecimal90 = null;
        schema87.setMultipleOf(bigDecimal90);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean89);
    }

    @Test
    public void test12336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema20.getEnum();
        schema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.externalDocs(externalDocumentation24);
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema schema28 = schema20.uniqueItems((java.lang.Boolean) true);
        schema20.setFormat("Optional[[]]");
        io.swagger.oas.models.media.Schema schema32 = schema20.minItems((java.lang.Integer) 0);
        schema20.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.$ref("hi!");
        java.util.List<java.lang.String> strList6 = schema5.getRequired();
        io.swagger.oas.models.media.Schema schema8 = schema5.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.multipleOf(bigDecimal9);
        java.lang.Boolean boolean11 = schema10.getExclusiveMinimum();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test12338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        schema12.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema12.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema22.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema24.format("");
        java.lang.Object obj27 = schema26.getExample();
        java.lang.Boolean boolean28 = schema26.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test12339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12339");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        schema25.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema25);
        java.lang.Integer int33 = schema32.getMinLength();
        schema32.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema32.getMaxItems();
        schema5.setExample((java.lang.Object) int36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema5.multipleOf(bigDecimal38);
        schema39.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema39.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema39.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = schema39.getProperties();
        java.math.BigDecimal bigDecimal47 = null;
        schema39.setMinimum(bigDecimal47);
        schema39.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
    }

    @Test
    public void test12340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.discriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test12341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        schema25.setDescription("#/components/schemas/");
        java.lang.Boolean boolean32 = schema25.getDeprecated();
        io.swagger.oas.models.media.Schema schema34 = schema25.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema36.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test12342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12342");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = java.util.Optional.ofNullable(serverList5);
        boolean boolean7 = serverListOptional6.isPresent();
        java.lang.String str8 = serverListOptional6.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema11.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional15 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema11.setNot(schema21);
        java.lang.String str23 = schema21.get$ref();
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.xml(xML24);
        io.swagger.oas.models.media.Schema schema27 = schema21.title("#/components/schemas/");
        java.util.List<java.lang.String> strList28 = null;
        schema21.setRequired(strList28);
        boolean boolean30 = serverListOptional6.equals((java.lang.Object) schema21);
        schema21.setType("#/components/schemas/hi!");
        schema21.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Optional[[]]" + "'", str8, "Optional[[]]");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test12343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        java.lang.Boolean boolean12 = schema11.getNullable();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        java.lang.String[] strArray31 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema25.required((java.util.List<java.lang.String>) strList32);
        io.swagger.oas.models.media.Schema schema35 = schema11.required((java.util.List<java.lang.String>) strList32);
        java.lang.Integer int36 = schema11.getMaxItems();
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema11.xml(xML37);
        java.lang.Integer int39 = schema11.getMinProperties();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema11.minimum(bigDecimal40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator9 = schema8.getDiscriminator();
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(discriminator9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test12345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema8.description("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema8.type("no description");
        schema8.setName("");
        io.swagger.oas.models.media.Schema schema20 = schema8.writeOnly((java.lang.Boolean) true);
        schema8.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.title("no description");
        io.swagger.oas.models.media.Schema schema31 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema34.title("no description");
        io.swagger.oas.models.media.Schema schema39 = schema25.additionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema41 = schema34.pattern("no description");
        io.swagger.oas.models.media.Schema schema43 = schema41.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema43.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        schema50.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        io.swagger.oas.models.media.Discriminator discriminator60 = schema59.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean66 = schema63.getUniqueItems();
        io.swagger.oas.models.media.Schema schema67 = schema59.not(schema63);
        io.swagger.oas.models.media.Schema schema68 = schema50.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema70 = schema63.name("no description");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList71 = schema63.getEnum();
        io.swagger.oas.models.media.Schema schema72 = schema43.not(schema63);
        schema8.setExample((java.lang.Object) schema63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strComparableList71);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test12346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12346");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema12.name("hi!");
        schema12.setMinProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema12.properties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema12.uniqueItems((java.lang.Boolean) true);
        schema12.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean32 = schema12.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.lang.Integer int40 = schema39.getMinItems();
        io.swagger.oas.models.media.Schema schema42 = schema39.title("no description");
        io.swagger.oas.models.media.Schema schema44 = schema42.type("no description");
        io.swagger.oas.models.media.Schema schema46 = schema42.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator51 = schema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema48.maxLength((java.lang.Integer) 100);
        schema53.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema12.not(schema53);
        schema56.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.xml(xML59);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test12347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema6.getExternalDocs();
        java.lang.String str16 = schema6.getName();
        io.swagger.oas.models.media.Schema schema18 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema24);
        java.lang.String str26 = schema6.getType();
        schema6.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test12348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.xml(xML68);
        schema67.set$ref("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema72 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema74 = schema72.description("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema76 = schema72.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int77 = schema76.getMinLength();
        java.lang.String str78 = schema76.getDescription();
        java.math.BigDecimal bigDecimal79 = null;
        schema76.setMinimum(bigDecimal79);
        io.swagger.oas.models.media.Schema schema82 = schema76.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "#/components/schemas/no description" + "'", str78, "#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test12349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12349");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        io.swagger.oas.models.media.Schema schema36 = schema19.maxItems((java.lang.Integer) 100);
        java.lang.Boolean boolean37 = schema36.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema36.getProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.lang.Integer int52 = schema51.getMinItems();
        schema41.setAdditionalProperties(schema51);
        java.math.BigDecimal bigDecimal54 = null;
        schema51.setMaximum(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema51.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int58 = schema51.getMaxLength();
        io.swagger.oas.models.media.Schema schema60 = schema51.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema36.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema63 = schema61.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test12350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema4.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.maximum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = schema19.name("no description");
        java.lang.Boolean boolean23 = schema19.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        schema19.setProperties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema19.name("");
        io.swagger.oas.models.media.Schema schema29 = schema19.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema40.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = schema36.not(schema40);
        io.swagger.oas.models.media.Schema schema46 = schema44.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable50 = strComparableSchema47.getDefault();
        schema44.setNot((io.swagger.oas.models.media.Schema) strComparableSchema47);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList60 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean61 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean62 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean63 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean64 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "Optional[[]]");
        boolean boolean65 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean66 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean67 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean68 = strComparableList60.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema44.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList60);
        schema19.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList60);
        schema16.setDefault((java.lang.Object) strComparableList60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strComparable50);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
    }

    @Test
    public void test12351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema67.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.addProperties("no description", schema67);
        io.swagger.oas.models.media.Schema schema77 = schema12.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema79 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema79.pattern("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal82 = null;
        schema81.setMultipleOf(bigDecimal82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = schema81.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap84);
    }

    @Test
    public void test12352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12352");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema18.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        io.swagger.oas.models.media.Discriminator discriminator57 = schema56.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        schema60.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean63 = schema60.getUniqueItems();
        io.swagger.oas.models.media.Schema schema64 = schema56.not(schema60);
        io.swagger.oas.models.media.Schema schema66 = schema56.minItems((java.lang.Integer) 10);
        schema66.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean69 = schema66.getNullable();
        java.math.BigDecimal bigDecimal70 = schema66.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema66.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema74 = schema66.minProperties((java.lang.Integer) 10);
        java.lang.String str75 = schema66.getPattern();
        schema48.addExtension("", (java.lang.Object) schema66);
        schema66.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema80 = schema66.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema80.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(discriminator57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test12353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema43 = schema36.type("hi!");
        schema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema6.example((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema36.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.not(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema48.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema48.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema48.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = schema48.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.xml(xML63);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList65 = schema62.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strComparableList65);
    }

    @Test
    public void test12354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema28 = schema19.addRequiredItem("hi!");
        schema28.setName("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML33 = schema28.getXml();
        io.swagger.oas.models.media.Schema schema35 = schema28.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("no description");
        schema46.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema39.not(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema39.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema52.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal55 = schema52.getMinimum();
        io.swagger.oas.models.media.Schema schema57 = schema52.writeOnly((java.lang.Boolean) false);
        schema28.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema57);
        java.lang.String str59 = schema57.getFormat();
        io.swagger.oas.models.media.Schema schema61 = schema57.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema57.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int64 = schema57.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
    }

    @Test
    public void test12355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.math.BigDecimal bigDecimal7 = null;
        schema4.setMultipleOf(bigDecimal7);
        java.lang.Boolean boolean9 = schema4.getReadOnly();
        java.lang.Boolean boolean10 = schema4.getExclusiveMaximum();
        java.lang.String str11 = schema4.getTitle();
        io.swagger.oas.models.media.Schema schema13 = schema4.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema4.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.minProperties((java.lang.Integer) 0);
        schema15.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test12356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        java.lang.String str5 = schema4.getType();
        java.lang.Boolean boolean6 = schema4.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
    }

    @Test
    public void test12357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema38.getPattern();
        schema22.addExtension("", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema45 = schema22.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList46 = schema45.getRequired();
        java.math.BigDecimal bigDecimal47 = null;
        schema45.setMinimum(bigDecimal47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strList46);
    }

    @Test
    public void test12358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12358");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        schema13.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        io.swagger.oas.models.media.Discriminator discriminator23 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema26.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema26);
        io.swagger.oas.models.media.Schema schema31 = schema13.additionalProperties(schema26);
        java.lang.String[] strArray34 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        schema26.setRequired((java.util.List<java.lang.String>) strList35);
        boolean boolean38 = serverListOptional1.equals((java.lang.Object) strList35);
        io.swagger.oas.annotations.servers.Server[] serverArray39 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional40 = io.swagger.jaxrs2.OperationParser.getServers(serverArray39);
        io.swagger.oas.models.servers.Server[] serverArray41 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList42 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList42, serverArray41);
        java.util.List<io.swagger.oas.models.servers.Server> serverList44 = serverListOptional40.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList42);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional45 = java.util.Optional.ofNullable(serverList44);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional1.orElse(serverList44);
        java.lang.String str47 = serverListOptional1.toString();
        java.lang.String str48 = serverListOptional1.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema51.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema51.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.lang.Integer int62 = schema61.getMinItems();
        schema51.setAdditionalProperties(schema61);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.discriminator(discriminator64);
        java.lang.Integer int66 = schema61.getMinProperties();
        io.swagger.oas.models.media.Schema schema68 = schema61.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema68.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema68.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.lang.Integer int80 = schema79.getMinItems();
        io.swagger.oas.models.media.Schema schema82 = schema79.title("no description");
        java.lang.Boolean boolean83 = schema79.getWriteOnly();
        io.swagger.oas.models.media.Schema schema84 = schema68.example((java.lang.Object) schema79);
        boolean boolean85 = serverListOptional1.equals((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema86 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema86.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema88.properties(strMap89);
        java.lang.Integer int91 = schema90.getMinLength();
        io.swagger.oas.models.media.Schema schema93 = schema90.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema90.pattern("");
        io.swagger.oas.models.media.XML xML96 = null;
        schema90.setXml(xML96);
        boolean boolean98 = serverListOptional1.equals((java.lang.Object) xML96);
        boolean boolean99 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(serverArray39);
        org.junit.Assert.assertNotNull(serverListOptional40);
        org.junit.Assert.assertNotNull(serverArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(serverList44);
        org.junit.Assert.assertNotNull(serverListOptional45);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Optional.empty" + "'", str47, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Optional.empty" + "'", str48, "Optional.empty");
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test12359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12359");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        schema26.setNot(schema32);
        io.swagger.oas.models.media.Schema schema41 = schema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema schema47 = schema26.title("");
        io.swagger.oas.models.media.Schema schema49 = schema47.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test12360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("no description");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema19.not(schema26);
        java.lang.Boolean boolean30 = schema26.getReadOnly();
        java.lang.Boolean boolean31 = schema26.getExclusiveMinimum();
        java.lang.Integer int32 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional40 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema36);
        java.lang.Integer int41 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal42 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        io.swagger.oas.models.media.Schema schema45 = schema36.addRequiredItem("hi!");
        schema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML50 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema52 = schema45.format("#/components/schemas/no description");
        java.util.List<java.lang.String> strList53 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema12.required(strList53);
        schema54.setWriteOnly((java.lang.Boolean) false);
        java.lang.Integer int57 = schema54.getMinItems();
        java.lang.Boolean boolean58 = schema54.getExclusiveMinimum();
        schema54.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test12361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12361");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        java.lang.Integer int19 = schema12.getMaxLength();
        io.swagger.oas.models.media.Schema schema21 = schema12.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema12.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean26 = schema12.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
    }

    @Test
    public void test12362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12362");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema26 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = null;
        strComparableSchema17.setExtensions(strMap28);
        strComparableSchema17.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema17.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.minimum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test12363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.math.BigDecimal bigDecimal22 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        java.lang.String str40 = schema39.getPattern();
        io.swagger.oas.models.media.Schema schema42 = schema39.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int43 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.lang.Integer int52 = schema51.getMinItems();
        io.swagger.oas.models.media.Schema schema54 = schema51.title("no description");
        java.lang.Boolean boolean55 = schema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = schema51.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator60 = schema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema62 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema57);
        java.lang.Boolean boolean64 = schema63.getUniqueItems();
        schema26.setAdditionalProperties(schema63);
        schema63.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema72 = schema71.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema74 = schema71.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema75.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.properties(strMap80);
        java.lang.Integer int82 = schema81.getMinItems();
        schema71.setAdditionalProperties(schema81);
        java.lang.String[] strArray87 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        io.swagger.oas.models.media.Schema schema90 = schema81.required((java.util.List<java.lang.String>) strList88);
        java.math.BigDecimal bigDecimal91 = schema81.getMinimum();
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema81.minimum(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema63.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema93);
        schema94.setDeprecated((java.lang.Boolean) false);
        schema94.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test12364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.minimum(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema38.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema38.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema20.additionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema51 = schema20.deprecated((java.lang.Boolean) true);
        schema51.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test12365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        schema8.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = schema8.pattern("Optional[[]]");
        io.swagger.oas.models.media.Schema schema18 = schema16.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test12366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMinimum();
        java.math.BigDecimal bigDecimal6 = strComparableSchema0.getMultipleOf();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.name("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNull(bigDecimal6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test12367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12367");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.ofNullable(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional5 = java.util.Optional.ofNullable(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverArrayOptional5);
        org.junit.Assert.assertNotNull(serverListOptional6);
    }

    @Test
    public void test12368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12368");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema8 = schema6.getNot();
        java.lang.String str9 = schema6.getPattern();
        io.swagger.oas.models.media.Schema schema11 = schema6.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test12369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12369");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema16.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema16.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        java.lang.String str31 = schema28.getName();
        schema28.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML34 = null;
        schema28.setXml(xML34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "no description" + "'", str31, "no description");
    }

    @Test
    public void test12370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12370");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML31 = null;
        schema27.setXml(xML31);
        schema27.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test12371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema24.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema32 = schema24.minProperties((java.lang.Integer) 0);
        schema24.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema2.minimum(bigDecimal14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.pattern("");
        java.lang.Integer int25 = schema24.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        schema32.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean48 = schema45.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema45);
        io.swagger.oas.models.media.Schema schema50 = schema32.additionalProperties(schema45);
        java.lang.String str51 = schema45.getFormat();
        java.lang.Integer int52 = schema45.getMinProperties();
        schema24.addExtension("hi!", (java.lang.Object) int52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.lang.String str58 = schema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.lang.String str62 = schema61.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema61.name("no description");
        schema64.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema57.not(schema64);
        java.lang.Boolean boolean68 = schema64.getReadOnly();
        java.lang.Boolean boolean69 = schema64.getExclusiveMinimum();
        java.lang.Integer int70 = schema64.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        schema74.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema77 = schema74.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional78 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema74);
        java.lang.Integer int79 = schema74.getMinProperties();
        java.math.BigDecimal bigDecimal80 = schema74.getMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema64.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema74);
        schema81.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema81.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int86 = schema81.getMinLength();
        schema24.addExtension("Optional.empty", (java.lang.Object) schema81);
        schema15.addExtension("Optional[[]]", (java.lang.Object) schema81);
        io.swagger.oas.models.media.Schema schema90 = schema15.minItems((java.lang.Integer) 100);
        schema90.setDeprecated((java.lang.Boolean) true);
        schema90.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertEquals("'" + boolean69 + "' != '" + false + "'", boolean69, false);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema77);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test12373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.setName("no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        java.lang.String str20 = schema19.getTitle();
        io.swagger.oas.models.media.Schema schema22 = schema19.pattern("Optional.empty");
        java.lang.Object obj23 = schema19.getExample();
        io.swagger.oas.models.media.Schema schema25 = schema19.$ref("");
        io.swagger.oas.models.media.XML xML26 = null;
        schema19.setXml(xML26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test12374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = schema12.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema12.setDiscriminator(discriminator18);
        schema12.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int22 = schema12.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test12375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.lang.Object obj2 = strComparableSchema0.getExample();
        java.math.BigDecimal bigDecimal3 = null;
        strComparableSchema0.setMinimum(bigDecimal3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test12376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema32.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema39 = schema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema38);
        io.swagger.oas.models.media.Schema schema41 = schema38.maxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test12377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12377");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema20.getEnum();
        schema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.externalDocs(externalDocumentation24);
        io.swagger.oas.annotations.Parameter parameter26 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray27 = new io.swagger.oas.annotations.Parameter[] { parameter26 };
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray27, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray27, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray27, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray27, components34);
        io.swagger.oas.models.media.Schema schema36 = schema25.example((java.lang.Object) parameterArray27);
        java.util.Optional<java.io.Serializable> serializableOptional37 = java.util.Optional.of((java.io.Serializable) parameterArray27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(parameterArray27);
        org.junit.Assert.assertNotNull(parameterListOptional29);
        org.junit.Assert.assertNotNull(parameterListOptional31);
        org.junit.Assert.assertNotNull(parameterListOptional33);
        org.junit.Assert.assertNotNull(parameterListOptional35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(serializableOptional37);
    }

    @Test
    public void test12378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = null;
        schema2.setExtensions(strMap5);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.lang.Integer int14 = schema13.getMinItems();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("no description");
        java.lang.Boolean boolean17 = schema13.getWriteOnly();
        schema13.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.lang.Integer int28 = schema27.getMinItems();
        schema27.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema13.addProperties("hi!", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema31.setNot(schema34);
        schema34.setName("");
        java.math.BigDecimal bigDecimal38 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema2.not(schema34);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema41.getNot();
        java.lang.Integer int43 = schema41.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test12379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        schema2.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema2.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML23 = schema18.getXml();
        io.swagger.oas.models.media.Schema schema25 = schema18.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(xML23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test12380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        schema26.setNot(schema32);
        io.swagger.oas.models.media.Schema schema41 = schema26.maxItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal42 = schema26.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        schema26.setExternalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema schema46 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test12381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        schema27.setName("");
        io.swagger.oas.models.media.Schema schema32 = schema27.pattern("Optional.empty");
        java.lang.String str33 = schema27.getName();
        schema27.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test12382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12382");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Schema schema7 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        schema2.setExternalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Discriminator discriminator10 = schema2.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = schema2.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("no description");
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema18.setDiscriminator(discriminator21);
        java.lang.String[] strArray24 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        schema18.setRequired((java.util.List<java.lang.String>) strList25);
        java.math.BigDecimal bigDecimal28 = null;
        schema18.setMinimum(bigDecimal28);
        schema18.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema37 = schema34.getNot();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema34.minimum(bigDecimal38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.properties(strMap40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.lang.Integer int55 = schema54.getMinItems();
        schema44.setAdditionalProperties(schema54);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMaximum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema54.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int61 = schema54.getMaxLength();
        schema41.setExample((java.lang.Object) schema54);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema54.setExternalDocs(externalDocumentation63);
        schema54.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema54.minLength((java.lang.Integer) 10);
        java.lang.String str69 = schema54.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.format("no description");
        java.lang.String str76 = schema75.get$ref();
        io.swagger.oas.models.media.Schema schema78 = schema75.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema75.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.minimum(bigDecimal81);
        java.lang.String str83 = schema82.getPattern();
        io.swagger.oas.models.media.Schema schema84 = schema54.not(schema82);
        io.swagger.oas.models.media.Schema schema86 = schema54.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean87 = schema18.equals((java.lang.Object) schema54);
        io.swagger.oas.models.media.Schema schema89 = schema18.minItems((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList90 = schema18.getRequired();
        io.swagger.oas.models.media.Schema schema91 = schema12.required(strList90);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test12383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12383");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        schema10.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test12384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        io.swagger.oas.models.media.Schema schema16 = schema14.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setMaxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean21 = schema18.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
    }

    @Test
    public void test12385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        io.swagger.oas.models.media.Schema schema38 = schema36.type("no description");
        io.swagger.oas.models.media.Schema schema40 = schema36.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.maximum(bigDecimal41);
        schema26.setExample((java.lang.Object) bigDecimal41);
        io.swagger.oas.models.media.Schema schema45 = schema26.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema26.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test12386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.XML xML24 = strComparableSchema17.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.lang.String str28 = schema27.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema27.name("no description");
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int33 = schema30.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema36.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.lang.Integer int47 = schema46.getMinItems();
        schema36.setAdditionalProperties(schema46);
        java.math.BigDecimal bigDecimal49 = null;
        schema46.setMinimum(bigDecimal49);
        java.lang.Boolean boolean51 = schema46.getDeprecated();
        schema30.setDefault((java.lang.Object) schema46);
        io.swagger.oas.models.media.Schema schema54 = schema46.minItems((java.lang.Integer) 100);
        schema46.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema58 = schema46.uniqueItems((java.lang.Boolean) true);
        strComparableSchema17.setDefault((java.lang.Object) schema46);
        java.lang.Integer int60 = schema46.getMaxLength();
        io.swagger.oas.models.media.Schema schema62 = schema46.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNull(xML24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test12387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12387");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str10 = serverListOptional9.toString();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Optional.empty" + "'", str10, "Optional.empty");
    }

    @Test
    public void test12388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12388");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.math.BigDecimal bigDecimal51 = null;
        schema48.setMaximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema5.addProperties("no description", schema48);
        io.swagger.oas.models.media.Schema schema59 = schema5.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema59.readOnly((java.lang.Boolean) false);
        java.lang.String str62 = schema61.getDescription();
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) true);
        schema64.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test12389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList10 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean13 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean14 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.properties(strMap24);
        java.lang.Boolean boolean26 = schema18.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema33.$ref("");
        schema18.setAdditionalProperties(schema41);
        java.lang.String str43 = schema41.getName();
        java.lang.Object obj44 = schema41.getExample();
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.xml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.lang.Integer int60 = schema59.getMinItems();
        schema49.setAdditionalProperties(schema59);
        io.swagger.oas.models.media.Schema schema62 = schema46.not(schema59);
        io.swagger.oas.models.media.XML xML63 = null;
        schema46.setXml(xML63);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.not(schema46);
        schema65.setMaxItems((java.lang.Integer) 1);
        schema65.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test12390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12390");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema2.equals(obj15);
        java.math.BigDecimal bigDecimal17 = schema2.getMultipleOf();
        java.util.Optional<java.lang.Object> objOptional18 = java.util.Optional.ofNullable((java.lang.Object) schema2);
        schema2.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(objOptional18);
    }

    @Test
    public void test12392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) 10);
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema20.maxProperties((java.lang.Integer) 10);
        schema20.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str27 = schema20.getName();
        java.lang.String str28 = schema20.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test12393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12393");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) true);
        schema2.setNot(schema34);
        java.lang.Boolean boolean39 = schema2.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test12394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12394");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.lang.Integer int41 = schema40.getMinItems();
        schema30.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        io.swagger.oas.models.media.Discriminator discriminator58 = schema57.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        schema61.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean64 = schema61.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema57.not(schema61);
        schema61.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema68 = schema49.not(schema61);
        io.swagger.oas.models.media.Schema schema70 = schema68.deprecated((java.lang.Boolean) false);
        schema30.setAdditionalProperties(schema68);
        io.swagger.oas.models.media.Schema schema73 = schema30.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema74.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.properties(strMap77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        java.lang.Integer int81 = schema80.getMinItems();
        io.swagger.oas.models.media.Schema schema83 = schema80.title("no description");
        java.lang.Boolean boolean84 = schema80.getWriteOnly();
        io.swagger.oas.models.media.Schema schema86 = schema80.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema80.$ref("");
        java.lang.String str89 = schema80.get$ref();
        schema30.setExample((java.lang.Object) schema80);
        java.math.BigDecimal bigDecimal91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema80.maximum(bigDecimal91);
        io.swagger.oas.models.media.Schema schema93 = schema25.additionalProperties(schema92);
        schema93.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "#/components/schemas/" + "'", str89, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test12396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12396");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: #/components/schemas/no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test12397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12397");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema18.title("no description");
        io.swagger.oas.models.media.Schema schema24 = schema18.minLength((java.lang.Integer) 0);
        schema24.setExclusiveMaximum((java.lang.Boolean) true);
        schema24.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean29 = schema24.getNullable();
        schema24.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema24.exclusiveMinimum((java.lang.Boolean) false);
        schema14.setAdditionalProperties(schema33);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema14.minimum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test12399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12399");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema29.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test12400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12400");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        boolean boolean7 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema23);
        boolean boolean25 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        schema46.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean49 = schema46.getReadOnly();
        io.swagger.oas.models.media.Schema schema51 = schema46.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema36.not(schema46);
        boolean boolean53 = serverListOptional1.equals((java.lang.Object) schema36);
        java.lang.Integer int54 = schema36.getMinProperties();
        java.lang.Integer int55 = schema36.getMinProperties();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test12401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12401");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        schema42.setPattern("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        schema48.setAdditionalProperties(schema58);
        java.lang.String[] strArray64 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema58.required((java.util.List<java.lang.String>) strList65);
        java.lang.Object obj68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.example(obj68);
        java.math.BigDecimal bigDecimal70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.multipleOf(bigDecimal70);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.xml(xML72);
        java.lang.Boolean boolean74 = schema71.getExclusiveMinimum();
        schema71.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        java.lang.String str80 = schema79.get$ref();
        io.swagger.oas.models.media.Schema schema82 = schema79.name("no description");
        schema82.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator85 = null;
        schema82.setDiscriminator(discriminator85);
        io.swagger.oas.models.media.Schema schema88 = schema82.addRequiredItem("hi!");
        io.swagger.oas.models.media.Discriminator discriminator89 = schema82.getDiscriminator();
        io.swagger.oas.models.media.Schema schema90 = schema71.additionalProperties(schema82);
        schema42.setAdditionalProperties(schema90);
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema42.discriminator(discriminator92);
        java.math.BigDecimal bigDecimal94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema93.minimum(bigDecimal94);
        schema93.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema99 = schema93.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(discriminator89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test12402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12402");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList10 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean13 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean14 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.properties(strMap24);
        java.lang.Boolean boolean26 = schema18.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema33.$ref("");
        schema18.setAdditionalProperties(schema41);
        java.lang.String str43 = schema41.getName();
        java.lang.Object obj44 = schema41.getExample();
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.xml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.lang.Integer int60 = schema59.getMinItems();
        schema49.setAdditionalProperties(schema59);
        io.swagger.oas.models.media.Schema schema62 = schema46.not(schema59);
        io.swagger.oas.models.media.XML xML63 = null;
        schema46.setXml(xML63);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.not(schema46);
        java.lang.String str66 = schema65.get$ref();
        io.swagger.oas.models.media.Schema schema68 = schema65.writeOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList69 = schema68.getRequired();
        io.swagger.oas.models.media.Schema schema71 = schema68.addRequiredItem("");
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "#/components/schemas/hi!" + "'", str66, "#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test12403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12403");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test12404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12404");
        java.util.Optional<java.util.RandomAccess> randomAccessOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(randomAccessOptional0);
    }

    @Test
    public void test12405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        schema16.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.not(schema19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("no description");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        schema26.setDiscriminator(discriminator29);
        java.lang.String[] strArray32 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        schema26.setRequired((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.media.Schema schema36 = schema20.required((java.util.List<java.lang.String>) strList33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema20.setExternalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema20.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema20.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema20.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
    }

    @Test
    public void test12406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.not(schema28);
        schema22.setAdditionalProperties(schema29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema29.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator31);
    }

    @Test
    public void test12407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12407");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        java.util.Optional<java.io.Serializable> serializableOptional12 = java.util.Optional.of((java.io.Serializable) parameterArray1);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components13);
        org.junit.Assert.assertNotNull(parameterArray1);
        org.junit.Assert.assertNotNull(parameterListOptional3);
        org.junit.Assert.assertNotNull(parameterListOptional5);
        org.junit.Assert.assertNotNull(parameterListOptional7);
        org.junit.Assert.assertNotNull(parameterListOptional9);
        org.junit.Assert.assertNotNull(parameterListOptional11);
        org.junit.Assert.assertNotNull(serializableOptional12);
        org.junit.Assert.assertNotNull(parameterListOptional14);
    }

    @Test
    public void test12408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12408");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        schema12.set$ref("");
        io.swagger.oas.models.media.Schema schema23 = schema12.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = schema30.title("no description");
        java.lang.Boolean boolean34 = schema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = schema30.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema30.$ref("");
        java.lang.Integer int39 = schema30.getMinItems();
        io.swagger.oas.models.media.XML xML40 = schema30.getXml();
        java.lang.String str41 = schema30.getType();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema30.externalDocs(externalDocumentation42);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema43.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.lang.String str49 = schema48.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.lang.String str53 = schema52.get$ref();
        io.swagger.oas.models.media.Schema schema55 = schema52.name("no description");
        schema55.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema48.not(schema55);
        java.lang.Boolean boolean59 = schema55.getReadOnly();
        java.lang.Boolean boolean60 = schema55.getExclusiveMinimum();
        java.lang.Integer int61 = schema55.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema68 = schema65.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional69 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema65);
        java.lang.Integer int70 = schema65.getMinProperties();
        java.math.BigDecimal bigDecimal71 = schema65.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema65);
        io.swagger.oas.models.media.Schema schema74 = schema65.addRequiredItem("hi!");
        schema74.setName("hi!");
        io.swagger.oas.models.media.Schema schema78 = schema74.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML79 = schema74.getXml();
        io.swagger.oas.models.media.Schema schema81 = schema74.format("#/components/schemas/no description");
        java.util.List<java.lang.String> strList82 = schema81.getRequired();
        schema43.setRequired(strList82);
        io.swagger.oas.models.media.Schema schema84 = schema12.required(strList82);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList85 = schema84.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema86 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema87 = strComparableSchema86.getNot();
        schema84.setExample((java.lang.Object) strComparableSchema86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(xML40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertEquals("'" + boolean60 + "' != '" + false + "'", boolean60, false);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema68);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(strComparableList85);
        org.junit.Assert.assertNull(schema87);
    }

    @Test
    public void test12409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12409");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.math.BigDecimal bigDecimal51 = null;
        schema48.setMaximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema5.addProperties("no description", schema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        schema62.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema62.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        java.lang.String str72 = schema71.get$ref();
        io.swagger.oas.models.media.Schema schema74 = schema71.name("no description");
        java.math.BigDecimal bigDecimal75 = null;
        schema71.setMaximum(bigDecimal75);
        io.swagger.oas.models.media.Schema schema77 = schema62.not(schema71);
        schema71.setExample((java.lang.Object) (-1.0f));
        schema57.setDefault((java.lang.Object) (-1.0f));
        java.lang.Boolean boolean81 = schema57.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema83 = schema57.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema84 = null;
        schema57.setNot(schema84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test12410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.math.BigDecimal bigDecimal22 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema27.getNot();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("hi!");
        schema12.setExample((java.lang.Object) schema34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema38 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema34.title("no description");
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.xml(xML41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test12411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        schema44.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.lang.Integer int55 = schema54.getMinItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.title("no description");
        io.swagger.oas.models.media.Schema schema59 = schema57.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList61 = strComparableSchema60.getRequired();
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema60.required((java.util.List<java.lang.String>) strList64);
        schema57.setRequired((java.util.List<java.lang.String>) strList64);
        schema44.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.XML xML69 = schema44.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema74 = schema73.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema76 = schema73.format("no description");
        io.swagger.oas.models.media.Schema schema78 = schema76.pattern("");
        io.swagger.oas.models.media.Schema schema80 = schema78.writeOnly((java.lang.Boolean) false);
        schema78.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema84 = schema78.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema85 = schema44.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema78);
        io.swagger.oas.models.media.Schema schema87 = schema85.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(xML69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test12412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12412");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.format("");
        java.lang.String str7 = strComparableSchema0.getPattern();
        java.lang.Boolean boolean8 = strComparableSchema0.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(boolean8);
    }

    @Test
    public void test12413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strComparableSchema0.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test12414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12414");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema6.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema6.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str21 = schema6.getTitle();
        io.swagger.oas.models.media.Schema schema23 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema6.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.discriminator(discriminator26);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        schema25.setDiscriminator(discriminator28);
        schema25.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.List<java.lang.String> strList8 = schema2.getRequired();
        io.swagger.oas.models.media.Schema schema10 = schema2.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema12 = schema2.maxProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean13 = schema12.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: 0\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test12416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.discriminator(discriminator17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        java.lang.Object obj20 = schema18.getExample();
        io.swagger.oas.models.media.Schema schema22 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test12417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.List<java.lang.String> strList8 = schema2.getRequired();
        java.lang.String str9 = schema2.toString();
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        schema13.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = schema13.title("no description");
        io.swagger.oas.models.media.Schema schema19 = schema13.minLength((java.lang.Integer) 0);
        schema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.type("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema19.description("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema19.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema2.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema27.uniqueItems((java.lang.Boolean) true);
        schema32.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12418");
        java.util.Optional<java.lang.CharSequence> charSequenceOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(charSequenceOptional0);
    }

    @Test
    public void test12419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        schema25.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema25.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema38);
    }

    @Test
    public void test12420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        schema19.setAdditionalProperties(schema29);
        java.lang.String[] strArray35 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema29.required((java.util.List<java.lang.String>) strList36);
        java.lang.Object obj39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.example(obj39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.multipleOf(bigDecimal41);
        schema12.setNot(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema12.title("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal46 = null;
        schema12.setMultipleOf(bigDecimal46);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList48 = schema12.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strComparableList48);
    }

    @Test
    public void test12421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12421");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.setType("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema36.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        schema39.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean42 = schema39.getReadOnly();
        io.swagger.oas.models.media.Schema schema44 = schema39.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema29.not(schema39);
        io.swagger.oas.models.media.Schema schema47 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        schema47.setProperties(strMap48);
        io.swagger.oas.models.media.Schema schema51 = schema47.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema51.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.lang.Integer int67 = schema66.getMinItems();
        schema56.setAdditionalProperties(schema66);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema56.getExtensions();
        io.swagger.oas.models.media.Schema schema71 = schema56.description("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = schema74.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema77 = schema74.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList80 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean81 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean82 = strComparableList80.add((java.lang.Comparable<java.lang.String>) "");
        schema77.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList80);
        schema71.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList80);
        schema51.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList80);
        schema16.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList80);
        java.lang.Integer int87 = schema16.getMaxItems();
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema16.multipleOf(bigDecimal88);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test12422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12422");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema12.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        schema28.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.multipleOf(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema34.nullable((java.lang.Boolean) false);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema36);
        schema36.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test12423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema31.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema67 = schema65.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema67.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = schema67.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema67.writeOnly((java.lang.Boolean) true);
        schema67.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test12424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema12.setMultipleOf(bigDecimal19);
        java.lang.Object obj21 = schema12.getExample();
        schema12.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj21);
    }

    @Test
    public void test12425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        schema16.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema16.getNullable();
        java.math.BigDecimal bigDecimal20 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        io.swagger.oas.models.media.Discriminator discriminator28 = schema27.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        io.swagger.oas.models.media.Discriminator discriminator51 = schema50.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        schema54.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean57 = schema54.getUniqueItems();
        io.swagger.oas.models.media.Schema schema58 = schema50.not(schema54);
        schema54.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema61 = schema42.not(schema54);
        io.swagger.oas.models.media.Schema schema63 = schema61.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema61.exclusiveMinimum((java.lang.Boolean) false);
        schema31.setNot(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = schema69.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema72 = schema69.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList75 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        schema72.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema65.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema16.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        io.swagger.oas.models.media.Schema schema82 = schema16.deprecated((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema16.properties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema84.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        io.swagger.oas.models.media.Schema schema89 = schema87.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test12426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12426");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        schema14.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema14.additionalProperties(schema27);
        java.lang.String[] strArray35 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        schema27.setRequired((java.util.List<java.lang.String>) strList36);
        io.swagger.oas.models.media.Schema schema39 = schema8.required((java.util.List<java.lang.String>) strList36);
        java.lang.Boolean boolean40 = schema8.getNullable();
        schema8.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema8.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Object obj45 = schema44.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
    }

    @Test
    public void test12427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema22.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema22.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str41 = schema22.getTitle();
        java.lang.Boolean boolean42 = schema22.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str41, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(boolean42);
    }

    @Test
    public void test12428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema18.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.lang.String str28 = schema27.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema27.name("no description");
        java.lang.Boolean boolean31 = schema27.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        schema27.setProperties(strMap32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema27.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean49 = schema46.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema42.not(schema46);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList51 = schema46.getEnum();
        io.swagger.oas.models.media.Schema schema53 = schema46.type("hi!");
        schema46.setType("#/components/schemas/");
        schema27.setAdditionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema58 = schema46.minItems((java.lang.Integer) 0);
        boolean boolean59 = schema24.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema61 = schema24.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strComparableList51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test12429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.math.BigDecimal bigDecimal51 = null;
        schema48.setMaximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema5.addProperties("no description", schema48);
        io.swagger.oas.models.media.Schema schema59 = schema5.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.getPattern();
        java.lang.Object obj62 = strComparableSchema60.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema65.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema68 = schema65.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.properties(strMap72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.lang.Integer int76 = schema75.getMinItems();
        schema65.setAdditionalProperties(schema75);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema65.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema65.description("");
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema60.additionalProperties(schema80);
        io.swagger.oas.models.media.Schema schema82 = schema59.example((java.lang.Object) schema81);
        java.math.BigDecimal bigDecimal83 = schema59.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test12430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12430");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        boolean boolean8 = serverListOptional1.isPresent();
        boolean boolean9 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        schema16.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema16.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxLength((java.lang.Integer) 100);
        boolean boolean74 = schema54.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema76 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema54.minimum(bigDecimal77);
        boolean boolean79 = serverListOptional1.equals((java.lang.Object) bigDecimal77);
        java.lang.String str80 = serverListOptional1.toString();
        java.lang.String str81 = serverListOptional1.toString();
        java.lang.String str82 = serverListOptional1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Optional.empty" + "'", str80, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Optional.empty" + "'", str81, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Optional.empty" + "'", str82, "Optional.empty");
    }

    @Test
    public void test12431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12431");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema18.not(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema2.example((java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema32.getNot();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema32.minimum(bigDecimal36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema32.properties(strMap38);
        io.swagger.oas.models.media.Schema schema41 = schema32.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        schema41.setMinimum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema44 = schema29.example((java.lang.Object) bigDecimal42);
        schema44.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = schema44.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal47);
    }

    @Test
    public void test12432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12432");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.lang.Boolean boolean15 = schema6.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal16 = null;
        schema6.setMaximum(bigDecimal16);
        java.lang.String str18 = schema6.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        schema38.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema26.not(schema38);
        io.swagger.oas.models.media.Schema schema47 = schema45.deprecated((java.lang.Boolean) false);
        java.lang.String str48 = schema47.getFormat();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = null;
        schema50.setExtensions(strMap51);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        schema50.setExternalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema schema55 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test12433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12433");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server server6 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] { server6 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional10 = java.util.Optional.of(serverListOptional9);
        java.lang.String str11 = serverListOptional9.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray12 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray12);
        io.swagger.oas.models.servers.Server[] serverArray14 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList15 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList15, serverArray14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional13.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        boolean boolean18 = serverListOptional13.isPresent();
        boolean boolean19 = serverListOptional13.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.lang.Integer int27 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema29 = schema26.title("no description");
        java.lang.Boolean boolean30 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = schema26.nullable((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = schema32.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean36 = serverListOptional13.equals((java.lang.Object) schema35);
        boolean boolean37 = serverListOptional13.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema44.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        schema48.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean51 = schema48.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema44.not(schema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema55.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("no description");
        schema58.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean61 = schema58.getReadOnly();
        io.swagger.oas.models.media.Schema schema63 = schema58.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema48.not(schema58);
        boolean boolean65 = serverListOptional13.equals((java.lang.Object) schema48);
        io.swagger.oas.annotations.servers.Server[] serverArray66 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional67 = io.swagger.jaxrs2.OperationParser.getServers(serverArray66);
        io.swagger.oas.models.servers.Server[] serverArray68 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList69 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList69, serverArray68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional67.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList69);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional72 = java.util.Optional.ofNullable(serverList71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional13.orElse(serverList71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList74 = serverListOptional9.orElse(serverList73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList75 = serverListOptional5.orElse(serverList74);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = schema78.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema81 = schema78.format("no description");
        schema81.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean84 = schema81.getReadOnly();
        boolean boolean85 = serverListOptional5.equals((java.lang.Object) boolean84);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptionalOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverArray66);
        org.junit.Assert.assertNotNull(serverListOptional67);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverListOptional72);
        org.junit.Assert.assertNotNull(serverList73);
        org.junit.Assert.assertNotNull(serverList74);
        org.junit.Assert.assertNotNull(serverList75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test12434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        java.lang.String str34 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema35 = schema2.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test12435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        schema29.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal33 = schema29.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema29.discriminator(discriminator34);
        java.lang.String str36 = schema29.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test12436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12436");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.String str64 = schema31.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "#/components/schemas/" + "'", str64, "#/components/schemas/");
    }

    @Test
    public void test12437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema2.getProperties();
        io.swagger.oas.models.media.Schema schema18 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema18.setDiscriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxProperties((java.lang.Integer) (-1));
        schema18.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test12438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12438");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        schema4.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema12 = schema4.minItems((java.lang.Integer) 0);
        schema12.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.maximum(bigDecimal15);
        schema16.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test12439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        schema22.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema22.getReadOnly();
        io.swagger.oas.models.media.Schema schema27 = schema22.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema12.example((java.lang.Object) schema28);
        io.swagger.oas.models.media.Schema schema31 = schema12.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str32 = schema12.getFormat();
        java.lang.String str33 = schema12.getPattern();
        io.swagger.oas.annotations.servers.Server server34 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray35 = new io.swagger.oas.annotations.servers.Server[] { server34 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional36 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional37 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional38 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional39 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional40 = java.util.Optional.of(serverArray35);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional41 = io.swagger.jaxrs2.OperationParser.getServers(serverArray35);
        java.lang.String str42 = serverListOptional41.toString();
        boolean boolean43 = serverListOptional41.isPresent();
        io.swagger.oas.models.media.Schema schema44 = schema12.example((java.lang.Object) serverListOptional41);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(serverArray35);
        org.junit.Assert.assertNotNull(serverListOptional36);
        org.junit.Assert.assertNotNull(serverListOptional37);
        org.junit.Assert.assertNotNull(serverListOptional38);
        org.junit.Assert.assertNotNull(serverListOptional39);
        org.junit.Assert.assertNotNull(serverArrayOptional40);
        org.junit.Assert.assertNotNull(serverListOptional41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Optional.empty" + "'", str42, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
    }

    @Test
    public void test12440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema26.getProperties();
        java.lang.Boolean boolean34 = schema26.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test12441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMultipleOf(bigDecimal22);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        schema19.setDiscriminator(discriminator24);
        io.swagger.oas.models.media.Schema schema27 = schema19.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        schema19.setDiscriminator(discriminator28);
        java.math.BigDecimal bigDecimal30 = null;
        schema19.setMultipleOf(bigDecimal30);
        java.lang.Object obj32 = schema19.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test12442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12442");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        io.swagger.oas.models.media.Discriminator discriminator2 = null;
        strComparableSchema0.setDiscriminator(discriminator2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        strComparableSchema0.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema0.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.lang.String str13 = schema12.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.lang.String str17 = schema16.get$ref();
        io.swagger.oas.models.media.Schema schema19 = schema16.name("no description");
        schema19.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema22 = schema12.not(schema19);
        schema12.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema12.multipleOf(bigDecimal25);
        java.lang.Boolean boolean27 = schema26.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema26.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema9.additionalProperties(schema26);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema26.multipleOf(bigDecimal33);
        schema26.setMaxLength((java.lang.Integer) 10);
        java.lang.Integer int37 = schema26.getMinLength();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test12443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.pattern("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMaximum(bigDecimal27);
        io.swagger.oas.models.media.Schema schema30 = schema26.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test12444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema42 = schema18.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean43 = schema18.getDeprecated();
        io.swagger.oas.models.media.XML xML44 = null;
        schema18.setXml(xML44);
        java.lang.Object obj46 = schema18.getExample();
        io.swagger.oas.models.media.Schema schema48 = schema18.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNull(obj46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test12445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12445");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema21.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema21.properties(strMap35);
        schema18.setAdditionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema18.writeOnly((java.lang.Boolean) false);
        schema39.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema43 = schema39.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        schema47.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        io.swagger.oas.models.media.Schema schema61 = schema58.title("no description");
        java.lang.Boolean boolean62 = schema58.getWriteOnly();
        schema58.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.properties(strMap69);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.lang.Integer int73 = schema72.getMinItems();
        schema72.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema58.addProperties("hi!", schema72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        schema76.setNot(schema79);
        schema79.setName("");
        java.math.BigDecimal bigDecimal83 = schema79.getMaximum();
        io.swagger.oas.models.media.Schema schema84 = schema47.not(schema79);
        io.swagger.oas.models.media.Schema schema85 = schema43.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        schema85.setMaxLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal88 = schema85.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(bigDecimal88);
    }

    @Test
    public void test12446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        java.lang.Boolean boolean7 = schema2.getExclusiveMaximum();
        java.lang.String str8 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.lang.String str12 = schema11.get$ref();
        io.swagger.oas.models.media.Schema schema14 = schema11.name("no description");
        java.lang.Boolean boolean15 = schema11.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema18.not(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema11.not(schema25);
        java.lang.Boolean boolean30 = schema11.getExclusiveMaximum();
        schema11.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList37 = schema35.getEnum();
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.format("no description");
        io.swagger.oas.models.media.Schema schema47 = schema45.pattern("");
        java.lang.Integer int48 = schema47.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema55 = schema52.format("no description");
        schema55.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        io.swagger.oas.models.media.Discriminator discriminator65 = schema64.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        schema68.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean71 = schema68.getUniqueItems();
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema68);
        io.swagger.oas.models.media.Schema schema73 = schema55.additionalProperties(schema68);
        java.lang.String str74 = schema68.getFormat();
        java.lang.Integer int75 = schema68.getMinProperties();
        schema47.addExtension("hi!", (java.lang.Object) int75);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema47.getExtensions();
        schema39.setExtensions(strMap77);
        schema39.setDeprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = schema39.getExtensions();
        schema11.setExtensions(strMap81);
        schema2.setExtensions(strMap81);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNull(strComparableList37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(discriminator65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test12447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema25.xml(xML68);
        io.swagger.oas.models.media.Schema schema71 = schema69.addRequiredItem("");
        schema71.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test12448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema16 = null;
        schema5.setNot(schema16);
        java.lang.Boolean boolean18 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: -1\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test12449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12449");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String[] strArray26 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema18.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = schema18.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema18.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema18.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("Optional[[]]");
        schema38.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema38.name("");
        java.lang.Object obj43 = schema38.getExample();
        io.swagger.oas.models.media.Schema schema45 = schema38.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(obj43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test12450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int16 = schema12.getMaxItems();
        java.lang.String str17 = schema12.getDescription();
        io.swagger.oas.models.media.Schema schema19 = schema12.writeOnly((java.lang.Boolean) false);
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test12451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = schema4.not(schema13);
        io.swagger.oas.models.media.Schema schema21 = schema13.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema13.setExternalDocs(externalDocumentation22);
        java.lang.Integer int24 = schema13.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema27.getNot();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema27.properties(strMap33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        schema37.setAdditionalProperties(schema47);
        java.math.BigDecimal bigDecimal50 = null;
        schema47.setMaximum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema47.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int54 = schema47.getMaxLength();
        schema34.setExample((java.lang.Object) schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.lang.Integer int64 = schema63.getMinItems();
        schema63.setReadOnly((java.lang.Boolean) false);
        java.lang.String str67 = schema63.getPattern();
        schema47.addExtension("", (java.lang.Object) schema63);
        schema47.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = schema47.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int73 = schema72.getMinProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.multipleOf(bigDecimal76);
        io.swagger.oas.models.media.Schema schema78 = schema13.not(schema77);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test12452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12452");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.math.BigDecimal bigDecimal51 = null;
        schema48.setMaximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema5.addProperties("no description", schema48);
        io.swagger.oas.models.media.Schema schema59 = schema5.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str61 = strComparableSchema60.getPattern();
        java.lang.Object obj62 = strComparableSchema60.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema66 = schema65.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema68 = schema65.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.properties(strMap72);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.lang.Integer int76 = schema75.getMinItems();
        schema65.setAdditionalProperties(schema75);
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema65.getExtensions();
        io.swagger.oas.models.media.Schema schema80 = schema65.description("");
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema60.additionalProperties(schema80);
        io.swagger.oas.models.media.Schema schema82 = schema59.example((java.lang.Object) schema81);
        io.swagger.oas.models.media.Schema schema84 = schema59.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema86 = schema84.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(obj62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test12453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.discriminator(discriminator6);
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.lang.String[] strArray28 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        io.swagger.oas.models.media.Schema schema31 = schema22.required((java.util.List<java.lang.String>) strList29);
        io.swagger.oas.models.media.Schema schema33 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema38.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional42 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        schema38.setNot(schema48);
        java.lang.String str50 = schema48.get$ref();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.xml(xML51);
        io.swagger.oas.models.media.Schema schema54 = schema48.title("#/components/schemas/");
        java.util.List<java.lang.String> strList55 = null;
        schema48.setRequired(strList55);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        io.swagger.oas.models.media.Discriminator discriminator64 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        schema67.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean70 = schema67.getUniqueItems();
        io.swagger.oas.models.media.Schema schema71 = schema63.not(schema67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = schema74.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema77 = schema74.format("no description");
        schema77.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema80 = schema63.not(schema77);
        io.swagger.oas.models.media.Schema schema82 = schema63.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray87 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        schema82.setRequired((java.util.List<java.lang.String>) strList88);
        schema48.setRequired((java.util.List<java.lang.String>) strList88);
        schema33.setRequired((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema93 = schema9.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema95 = schema9.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str96 = schema95.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test12454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.String str6 = schema5.getFormat();
        schema5.setName("Optional[[]]");
        io.swagger.oas.models.media.Schema schema10 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML11 = null;
        schema10.setXml(xML11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test12455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList11 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema12 = schema6.additionalProperties(schema9);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema6.maximum(bigDecimal13);
        schema14.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int17 = schema14.getMaxItems();
        java.math.BigDecimal bigDecimal18 = null;
        schema14.setMaximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(strComparableList11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test12456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12456");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray4 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray4);
        io.swagger.oas.models.servers.Server[] serverArray6 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList7 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList7, serverArray6);
        java.util.List<io.swagger.oas.models.servers.Server> serverList9 = serverListOptional5.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList7);
        boolean boolean10 = serverListOptional5.isPresent();
        boolean boolean11 = serverListOptional5.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.lang.Integer int19 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema schema21 = schema18.title("no description");
        java.lang.Boolean boolean22 = schema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.lang.String str25 = schema24.getPattern();
        io.swagger.oas.models.media.Schema schema27 = schema24.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean28 = serverListOptional5.equals((java.lang.Object) schema27);
        boolean boolean29 = serverListOptional5.isPresent();
        java.lang.String str30 = serverListOptional5.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray31 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional32 = io.swagger.jaxrs2.OperationParser.getServers(serverArray31);
        io.swagger.oas.models.servers.Server[] serverArray33 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList34 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList34, serverArray33);
        java.util.List<io.swagger.oas.models.servers.Server> serverList36 = serverListOptional32.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList34);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional37 = java.util.Optional.ofNullable(serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList38 = serverListOptional5.orElse(serverList36);
        java.util.List<io.swagger.oas.models.servers.Server> serverList39 = serverListOptional3.orElse(serverList36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        schema58.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean61 = schema58.getUniqueItems();
        io.swagger.oas.models.media.Schema schema62 = schema54.not(schema58);
        schema58.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema65 = schema46.not(schema58);
        io.swagger.oas.models.media.Schema schema67 = schema65.deprecated((java.lang.Boolean) false);
        java.lang.String str68 = schema67.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema67.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = null;
        schema70.setExtensions(strMap71);
        schema70.setMaxLength((java.lang.Integer) 100);
        boolean boolean75 = serverListOptional3.equals((java.lang.Object) schema70);
        java.math.BigDecimal bigDecimal76 = null;
        schema70.setMinimum(bigDecimal76);
        schema70.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArray4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(serverList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Optional.empty" + "'", str30, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray31);
        org.junit.Assert.assertNotNull(serverListOptional32);
        org.junit.Assert.assertNotNull(serverArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(serverList36);
        org.junit.Assert.assertNotNull(serverListOptional37);
        org.junit.Assert.assertNotNull(serverList38);
        org.junit.Assert.assertNotNull(serverList39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test12457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12457");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        schema16.setMaxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema16.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test12458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema4.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.maximum(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getReadOnly();
        java.math.BigDecimal bigDecimal18 = schema16.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(bigDecimal18);
    }

    @Test
    public void test12459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean13 = schema8.getNullable();
        schema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        schema20.setAdditionalProperties(schema30);
        java.math.BigDecimal bigDecimal33 = null;
        schema30.setMaximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema39.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional43 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        schema39.setNot(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema39.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema39.properties(strMap53);
        schema36.setAdditionalProperties(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema36.writeOnly((java.lang.Boolean) false);
        java.lang.String str58 = schema57.get$ref();
        java.util.List<java.lang.String> strList59 = schema57.getRequired();
        io.swagger.oas.models.media.Schema schema61 = schema57.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator62 = schema57.getDiscriminator();
        schema8.setNot(schema57);
        java.lang.Integer int64 = schema57.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNull(int64);
    }

    @Test
    public void test12460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        schema27.setName("");
        java.math.BigDecimal bigDecimal31 = schema27.getMaximum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema27.setExternalDocs(externalDocumentation32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test12461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12461");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema2.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.String str27 = schema26.getDescription();
        java.lang.String str28 = schema26.getName();
        schema26.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema26.getProperties();
        io.swagger.oas.models.media.Schema schema33 = schema26.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 1\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Class<?> wildcardClass34 = schema33.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "no description" + "'", str28, "no description");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test12462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema18.maxProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        java.lang.String str30 = schema28.getName();
        schema28.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        java.lang.String str33 = schema28.getType();
        java.lang.Object obj34 = schema28.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(obj34);
    }

    @Test
    public void test12463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12463");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        java.lang.Integer int15 = schema6.getMinItems();
        java.lang.String str16 = schema6.getDescription();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema6.maximum(bigDecimal17);
        java.lang.String str19 = schema18.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList22 = strComparableSchema21.getRequired();
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema21.required((java.util.List<java.lang.String>) strList25);
        java.lang.String str28 = schema27.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema27.setProperties(strMap29);
        io.swagger.oas.models.media.Schema schema32 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema27);
        java.math.BigDecimal bigDecimal34 = schema33.getMultipleOf();
        schema33.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema33.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema33.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.minimum(bigDecimal41);
        schema40.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test12464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        schema7.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema7.getNot();
        java.lang.Boolean boolean11 = schema7.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema7.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema19 = schema16.format("no description");
        schema19.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema32.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema32);
        io.swagger.oas.models.media.Schema schema37 = schema19.additionalProperties(schema32);
        java.lang.String[] strArray40 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        schema32.setRequired((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema44 = schema13.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema schema45 = schema4.required((java.util.List<java.lang.String>) strList41);
        java.lang.String str46 = schema4.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test12465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12465");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean29 = schema28.getExclusiveMinimum();
        io.swagger.oas.models.media.Discriminator discriminator30 = schema28.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(discriminator30);
    }

    @Test
    public void test12466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) true);
        schema50.setDeprecated((java.lang.Boolean) true);
        java.lang.String str53 = schema50.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test12467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12467");
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional0 = java.util.Optional.empty();
        java.lang.Object obj1 = null;
        boolean boolean2 = serverListOptional0.equals(obj1);
        java.lang.String str3 = serverListOptional0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList4 = serverListOptional0.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverListOptional0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Optional.empty" + "'", str3, "Optional.empty");
    }

    @Test
    public void test12468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        java.lang.Boolean boolean16 = schema9.getExclusiveMaximum();
        java.lang.String str17 = schema9.getDescription();
        io.swagger.oas.models.media.Schema schema19 = schema9.minProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema19.setProperties(strMap20);
        io.swagger.oas.models.media.Schema schema22 = schema19.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean23 = schema22.getDeprecated();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
    }

    @Test
    public void test12469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12469");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        java.lang.Integer int19 = schema12.getMaxLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema12.getProperties();
        io.swagger.oas.models.media.Schema schema22 = schema12.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test12470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("");
        java.math.BigDecimal bigDecimal7 = null;
        schema2.setMinimum(bigDecimal7);
        io.swagger.oas.models.media.XML xML9 = null;
        schema2.setXml(xML9);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test12471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12471");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema2.addRequiredItem("#/components/schemas/no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Schema schema21 = schema18.deprecated((java.lang.Boolean) false);
        java.lang.String str22 = schema18.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test12472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        io.swagger.oas.models.media.Discriminator discriminator51 = schema50.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        schema54.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean57 = schema54.getUniqueItems();
        io.swagger.oas.models.media.Schema schema58 = schema50.not(schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema62 = schema61.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema64 = schema61.format("no description");
        schema64.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema67 = schema50.not(schema64);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        java.lang.String str69 = schema67.getDescription();
        io.swagger.oas.models.media.Schema schema71 = schema67.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema67.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema23.additionalProperties(schema73);
        java.math.BigDecimal bigDecimal75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema73.multipleOf(bigDecimal75);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test12473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12473");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int16 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        java.lang.Boolean boolean28 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema12.xml(xML37);
        io.swagger.oas.models.media.Schema schema40 = schema12.maxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test12474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.description("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema22.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema25 = schema22.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.lang.Integer int33 = schema32.getMinItems();
        schema22.setAdditionalProperties(schema32);
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.discriminator(discriminator35);
        schema36.setType("hi!");
        schema36.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema schema51 = schema49.pattern("");
        java.lang.Integer int52 = schema51.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        schema59.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean75 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema72);
        io.swagger.oas.models.media.Schema schema77 = schema59.additionalProperties(schema72);
        java.lang.String str78 = schema72.getFormat();
        java.lang.Integer int79 = schema72.getMinProperties();
        schema51.addExtension("hi!", (java.lang.Object) int79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = schema51.getExtensions();
        schema43.setExtensions(strMap81);
        schema36.setExtensions(strMap81);
        schema19.setExtensions(strMap81);
        java.lang.String str85 = schema19.getName();
        schema19.setMinItems((java.lang.Integer) (-1));
        schema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str85);
    }

    @Test
    public void test12475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema8 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema10 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.lang.Integer int24 = schema23.getMinItems();
        schema13.setAdditionalProperties(schema23);
        java.lang.String[] strArray29 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = schema23.required((java.util.List<java.lang.String>) strList30);
        schema10.setRequired((java.util.List<java.lang.String>) strList30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test12476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean11 = schema5.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema5.getEnum();
        schema5.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema5.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema31 = schema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML32 = null;
        schema31.setXml(xML32);
        io.swagger.oas.models.media.Schema schema34 = schema31.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema31.getProperties();
        io.swagger.oas.models.media.Schema schema37 = schema31.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal38 = schema37.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test12477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema38.getPattern();
        schema22.addExtension("", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema45 = schema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema22.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema50.name("no description");
        schema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        schema53.setDiscriminator(discriminator56);
        java.lang.Integer int58 = schema53.getMinLength();
        java.lang.Integer int59 = schema53.getMaxLength();
        schema47.setNot(schema53);
        io.swagger.oas.models.media.Schema schema62 = schema47.exclusiveMaximum((java.lang.Boolean) true);
        schema47.setType("Optional[[]]");
        schema47.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema47.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML69 = null;
        schema68.setXml(xML69);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test12478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12478");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema35 = schema30.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema35.getMinItems();
        java.lang.Integer int37 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema schema39 = schema35.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test12479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        java.lang.String str33 = schema30.getType();
        schema30.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema41.title("no description");
        io.swagger.oas.models.media.Schema schema47 = schema41.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema50.title("no description");
        io.swagger.oas.models.media.Schema schema55 = schema41.additionalProperties(schema50);
        io.swagger.oas.models.media.XML xML56 = null;
        schema50.setXml(xML56);
        schema38.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema60 = schema38.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema60.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema60.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean65 = schema64.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = schema64.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test12480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12480");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = schema4.not(schema13);
        java.lang.Integer int20 = schema19.getMinLength();
        schema19.setDescription("no description");
        java.lang.Boolean boolean23 = schema19.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema19.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema34 = schema28.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean35 = schema28.getUniqueItems();
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema28.multipleOf(bigDecimal36);
        java.lang.String str38 = schema28.getType();
        io.swagger.oas.models.media.Schema schema40 = schema28.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setNot(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = schema44.title("no description");
        io.swagger.oas.models.media.Schema schema49 = null;
        schema44.setNot(schema49);
        schema44.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean53 = schema25.equals((java.lang.Object) schema44);
        schema44.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str56 = schema44.getFormat();
        schema44.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema44.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str56, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test12481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema schema47 = schema44.title("no description");
        io.swagger.oas.models.media.Schema schema49 = schema47.type("no description");
        java.lang.Boolean boolean50 = schema49.getNullable();
        io.swagger.oas.models.media.Schema schema51 = schema6.example((java.lang.Object) schema49);
        schema49.set$ref("#/components/schemas/");
        java.math.BigDecimal bigDecimal54 = null;
        schema49.setMinimum(bigDecimal54);
        schema49.setNullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema49.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap58);
    }

    @Test
    public void test12482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.xml(xML18);
        schema16.setNullable((java.lang.Boolean) false);
        java.lang.Integer int22 = schema16.getMinProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = schema16.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test12483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12483");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema24.minItems((java.lang.Integer) 10);
        schema34.setMinLength((java.lang.Integer) 100);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema34.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = schema2.addProperties("no description", schema34);
        io.swagger.oas.models.media.Schema schema43 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test12484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12484");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema38.getPattern();
        schema22.addExtension("", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema45 = schema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema22.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema50.name("no description");
        schema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        schema53.setDiscriminator(discriminator56);
        java.lang.Integer int58 = schema53.getMinLength();
        java.lang.Integer int59 = schema53.getMaxLength();
        schema47.setNot(schema53);
        schema47.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test12485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 0);
        java.lang.Boolean boolean18 = schema12.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema20 = schema12.readOnly((java.lang.Boolean) true);
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.servers.Server[] serverArray23 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList24 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList24, serverArray23);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional22.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList24);
        boolean boolean27 = serverListOptional22.isPresent();
        java.lang.String str28 = serverListOptional22.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema34.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema47);
        io.swagger.oas.models.media.Schema schema52 = schema34.additionalProperties(schema47);
        java.lang.String[] strArray55 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        schema47.setRequired((java.util.List<java.lang.String>) strList56);
        boolean boolean59 = serverListOptional22.equals((java.lang.Object) strList56);
        io.swagger.oas.models.media.Schema schema60 = schema20.required((java.util.List<java.lang.String>) strList56);
        io.swagger.oas.models.media.Schema schema61 = schema60.getAdditionalProperties();
        java.math.BigDecimal bigDecimal62 = schema60.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Optional.empty" + "'", str28, "Optional.empty");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(schema61);
        org.junit.Assert.assertNull(bigDecimal62);
    }

    @Test
    public void test12486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12486");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        strComparableSchema0.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema0.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.lang.Integer int24 = schema23.getMinItems();
        schema13.setAdditionalProperties(schema23);
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMaximum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema23.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int30 = schema23.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema23.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema23.uniqueItems((java.lang.Boolean) false);
        schema10.setExample((java.lang.Object) schema34);
        java.lang.String str36 = schema10.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        io.swagger.oas.models.media.Schema schema46 = schema43.title("no description");
        io.swagger.oas.models.media.Schema schema48 = schema46.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList50 = strComparableSchema49.getRequired();
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema49.required((java.util.List<java.lang.String>) strList53);
        schema46.setRequired((java.util.List<java.lang.String>) strList53);
        java.util.Optional<java.io.Serializable> serializableOptional57 = java.util.Optional.of((java.io.Serializable) strList53);
        io.swagger.oas.models.media.Schema schema58 = schema10.required((java.util.List<java.lang.String>) strList53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(serializableOptional57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test12487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12487");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test12488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.format("");
        java.lang.Integer int7 = schema6.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema6.externalDocs(externalDocumentation8);
        schema9.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test12489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.lang.Boolean boolean8 = schema7.getWriteOnly();
        schema7.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        schema22.setFormat("hi!");
        java.lang.String str29 = schema22.getTitle();
        io.swagger.oas.models.media.Schema schema31 = schema22.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema7.addProperties("#/components/schemas/hi!", schema31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test12490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        java.lang.Object obj17 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema11.type("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        schema11.setProperties(strMap20);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema11.discriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test12491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12491");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema16.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema16.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema31 = schema16.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.format("no description");
        schema38.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        io.swagger.oas.models.media.Discriminator discriminator48 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean54 = schema51.getUniqueItems();
        io.swagger.oas.models.media.Schema schema55 = schema47.not(schema51);
        io.swagger.oas.models.media.Schema schema56 = schema38.additionalProperties(schema51);
        java.lang.String[] strArray59 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        schema51.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = schema51.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        schema51.setProperties(strMap64);
        io.swagger.oas.models.media.Schema schema67 = schema51.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema51.externalDocs(externalDocumentation68);
        java.lang.Boolean boolean70 = schema69.getReadOnly();
        schema69.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema73 = schema16.not(schema69);
        java.lang.String str74 = schema16.getType();
        schema16.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test12492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema28.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional32 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.format("no description");
        schema28.setNot(schema38);
        java.lang.String str40 = schema38.get$ref();
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.xml(xML41);
        io.swagger.oas.models.media.Schema schema44 = schema38.title("#/components/schemas/");
        java.util.List<java.lang.String> strList45 = null;
        schema38.setRequired(strList45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = schema64.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema67 = schema64.format("no description");
        schema67.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema53.not(schema67);
        io.swagger.oas.models.media.Schema schema72 = schema53.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray77 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        schema72.setRequired((java.util.List<java.lang.String>) strList78);
        schema38.setRequired((java.util.List<java.lang.String>) strList78);
        schema23.setRequired((java.util.List<java.lang.String>) strList78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema23.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator84 = schema23.getDiscriminator();
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema23.multipleOf(bigDecimal85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(discriminator84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test12493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        java.lang.Boolean boolean25 = schema10.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema28 = schema10.description("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(externalDocumentation26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test12494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str27 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("no description");
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema22.not(schema29);
        java.lang.Boolean boolean33 = schema29.getReadOnly();
        java.lang.Boolean boolean34 = schema29.getExclusiveMinimum();
        java.lang.Integer int35 = schema29.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema42 = schema39.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional43 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema39);
        java.lang.Integer int44 = schema39.getMinProperties();
        java.math.BigDecimal bigDecimal45 = schema39.getMaximum();
        io.swagger.oas.models.media.Schema schema46 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema46.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema46.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema46.discriminator(discriminator51);
        schema46.setTitle("");
        io.swagger.oas.models.media.Schema schema56 = schema46.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.lang.String str60 = schema59.get$ref();
        io.swagger.oas.models.media.Schema schema62 = schema59.name("no description");
        java.lang.Boolean boolean63 = schema59.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        java.lang.String str67 = schema66.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.lang.String str71 = schema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema70.name("no description");
        schema73.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema66.not(schema73);
        io.swagger.oas.models.media.Schema schema77 = schema59.not(schema73);
        io.swagger.oas.models.media.Discriminator discriminator78 = null;
        schema73.setDiscriminator(discriminator78);
        io.swagger.oas.models.media.Schema schema81 = schema73.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema73.xml(xML82);
        io.swagger.oas.models.media.Schema schema84 = schema46.not(schema73);
        schema46.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema15.additionalProperties(schema46);
        java.lang.String str88 = schema46.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema46.discriminator(discriminator89);
        schema46.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test12495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.lang.Object obj2 = strComparableSchema0.getExample();
        strComparableSchema0.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        io.swagger.oas.models.media.Discriminator discriminator13 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        schema16.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean19 = schema16.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = schema12.not(schema16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = schema12.getExternalDocs();
        io.swagger.oas.models.media.Schema schema23 = schema12.deprecated((java.lang.Boolean) false);
        schema12.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList26 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema28 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.lang.String str33 = schema32.get$ref();
        io.swagger.oas.models.media.Schema schema35 = schema32.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema32.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML38 = null;
        schema32.setXml(xML38);
        java.lang.Integer int40 = schema32.getMinProperties();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema0.not(schema32);
        java.lang.Boolean boolean42 = schema41.getDeprecated();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(discriminator13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(externalDocumentation21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
    }

    @Test
    public void test12496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        schema25.setMaxLength((java.lang.Integer) (-1));
        schema25.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        schema25.setMultipleOf(bigDecimal30);
        schema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema25.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema25.xml(xML36);
        io.swagger.oas.models.media.XML xML38 = schema37.getXml();
        java.lang.Integer int39 = schema37.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML38);
        org.junit.Assert.assertNull(int39);
    }

    @Test
    public void test12497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("no description");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema19.not(schema26);
        java.lang.Boolean boolean30 = schema26.getReadOnly();
        java.lang.Boolean boolean31 = schema26.getExclusiveMinimum();
        java.lang.Integer int32 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional40 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema36);
        java.lang.Integer int41 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal42 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        io.swagger.oas.models.media.Schema schema45 = schema36.addRequiredItem("hi!");
        schema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML50 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema52 = schema45.format("#/components/schemas/no description");
        java.util.List<java.lang.String> strList53 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema12.required(strList53);
        java.math.BigDecimal bigDecimal55 = schema54.getMultipleOf();
        schema54.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
    }

    @Test
    public void test12498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 100);
        java.lang.String str23 = schema20.getType();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.discriminator(discriminator24);
        java.lang.String str26 = schema25.getType();
        schema25.setDescription("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test12499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12499");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        java.lang.Integer int5 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        io.swagger.oas.models.media.Schema schema15 = schema12.title("no description");
        io.swagger.oas.models.media.Schema schema17 = schema15.type("no description");
        io.swagger.oas.models.media.Schema schema19 = schema15.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema15.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional28 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema24.setNot(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema24.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema15.additionalProperties(schema37);
        java.lang.Object obj39 = null;
        schema15.setDefault(obj39);
        schema2.setAdditionalProperties(schema15);
        io.swagger.oas.models.media.Schema schema43 = schema2.minProperties((java.lang.Integer) 100);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema2.properties(strMap44);
        java.math.BigDecimal bigDecimal46 = schema2.getMinimum();
        schema2.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test12500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMultipleOf(bigDecimal26);
        schema23.setDeprecated((java.lang.Boolean) true);
        schema23.setMaxLength((java.lang.Integer) 100);
        schema23.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema35);
    }
}

