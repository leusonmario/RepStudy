import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest14 {

    public static boolean debug = false;

    @Test
    public void test07001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07001");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setTitle("");
        schema26.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test07002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07002");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema2.properties(strMap16);
        schema17.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07003");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema6.getExternalDocs();
        java.lang.String str16 = schema6.getName();
        io.swagger.oas.models.media.Schema schema18 = schema6.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal19 = schema18.getMultipleOf();
        io.swagger.oas.models.media.Schema schema21 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07004");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema schema19 = schema17.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int20 = schema17.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test07005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07005");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        schema29.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema17.not(schema29);
        schema10.setExample((java.lang.Object) schema17);
        java.lang.Integer int38 = schema10.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test07006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07006");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMultipleOf(bigDecimal22);
        schema19.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema19.name("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.externalDocs(externalDocumentation28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07007");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.lang.Integer int36 = schema35.getMinItems();
        schema25.setAdditionalProperties(schema35);
        java.math.BigDecimal bigDecimal38 = null;
        schema35.setMinimum(bigDecimal38);
        java.math.BigDecimal bigDecimal40 = schema35.getMaximum();
        schema22.setNot(schema35);
        schema22.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        schema22.setDiscriminator(discriminator44);
        java.lang.Integer int46 = schema22.getMinItems();
        java.lang.String str47 = schema22.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test07008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07008");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        java.lang.String str27 = schema20.toString();
        io.swagger.oas.models.media.Schema schema29 = schema20.type("");
        io.swagger.oas.models.media.Schema schema31 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean46 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        schema53.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean56 = schema53.getReadOnly();
        io.swagger.oas.models.media.Schema schema58 = schema53.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema59 = schema43.not(schema53);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema62.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema62.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList68 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean69 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean70 = strComparableList68.add((java.lang.Comparable<java.lang.String>) "");
        schema65.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList68);
        schema59.setNot(schema65);
        io.swagger.oas.models.media.Schema schema74 = schema59.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator75 = null;
        schema59.setDiscriminator(discriminator75);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema59.maximum(bigDecimal77);
        schema31.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema59);
        schema31.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema31.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str27, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test07009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07009");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema schema23 = schema12.example((java.lang.Object) serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.not(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema33.type("no description");
        java.lang.Boolean boolean36 = schema33.getDeprecated();
        java.lang.String str37 = schema33.getName();
        boolean boolean38 = serverListOptional26.equals((java.lang.Object) str37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional45 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema41);
        java.lang.Integer int46 = schema41.getMinProperties();
        io.swagger.oas.models.media.Schema schema47 = schema41.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList48 = schema41.getEnum();
        boolean boolean49 = serverListOptional26.equals((java.lang.Object) schema41);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(serverListOptional25);
        org.junit.Assert.assertNotNull(serverListOptional26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNull(strComparableList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test07010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07010");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList21 = schema20.getEnum();
        schema20.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.externalDocs(externalDocumentation24);
        schema20.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema20.maximum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strComparableList21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07011");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema16 = null;
        schema5.setNot(schema16);
        java.lang.Boolean boolean18 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        schema23.setAdditionalProperties(schema33);
        java.lang.String[] strArray39 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.media.Schema schema44 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema5.example((java.lang.Object) schema46);
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema5.maximum(bigDecimal48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema5.setExternalDocs(externalDocumentation50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07012");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        java.lang.Integer int14 = schema11.getMaxLength();
        io.swagger.oas.models.media.Schema schema16 = schema11.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.multipleOf(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07013");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.maxProperties((java.lang.Integer) 10);
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema schema12 = schema9.name("no description");
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema5.not(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = schema5.getExtensions();
        io.swagger.oas.models.media.Schema schema18 = schema5.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema18.description("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        schema31.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema24.not(schema31);
        java.lang.Boolean boolean35 = schema31.getReadOnly();
        java.lang.Boolean boolean36 = schema31.getExclusiveMinimum();
        java.lang.Integer int37 = schema31.getMaxItems();
        io.swagger.oas.models.media.Schema schema38 = schema20.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = schema20.getProperties();
        strComparableSchema0.setProperties(strMap39);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test07014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07014");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        strComparableSchema0.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        io.swagger.oas.models.media.Schema schema15 = schema12.title("no description");
        java.lang.Boolean boolean16 = schema12.getWriteOnly();
        io.swagger.oas.models.media.Schema schema18 = schema12.nullable((java.lang.Boolean) true);
        java.lang.String str19 = schema18.getPattern();
        io.swagger.oas.models.media.Schema schema21 = schema18.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int22 = schema18.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        io.swagger.oas.models.media.Schema schema33 = schema30.title("no description");
        java.lang.Boolean boolean34 = schema30.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = schema30.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema38 = schema36.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator39 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema41 = schema36.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema46.getNot();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: 0\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        schema52.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema52.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional56 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema59.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema62 = schema59.format("no description");
        schema52.setNot(schema62);
        schema52.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema52.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 1);
        strComparableSchema0.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema67);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07015");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        schema23.setNullable((java.lang.Boolean) false);
        schema23.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema23.type("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean52 = schema49.getUniqueItems();
        io.swagger.oas.models.media.Schema schema53 = schema45.not(schema49);
        schema49.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema37.not(schema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.uniqueItems((java.lang.Boolean) true);
        schema37.setDefault((java.lang.Object) schema61);
        schema61.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema29.addProperties("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        io.swagger.oas.models.media.Schema schema67 = schema61.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema61.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema68);
    }

    @Test
    public void test07016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07016");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.List<java.lang.String> strList8 = schema2.getRequired();
        java.lang.String str9 = schema2.toString();
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        schema13.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema17 = schema13.title("no description");
        io.swagger.oas.models.media.Schema schema19 = schema13.minLength((java.lang.Integer) 0);
        schema19.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.type("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema19.description("hi!");
        io.swagger.oas.models.media.Schema schema27 = schema19.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema2.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        schema30.setType("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        schema35.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.discriminator(discriminator48);
        java.lang.Integer int50 = schema45.getMinProperties();
        schema45.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema45.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema30.not(schema54);
        schema30.setTitle("");
        schema30.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema30.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test07017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07017");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.lang.String str28 = schema27.get$ref();
        io.swagger.oas.models.media.Schema schema30 = schema27.name("no description");
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int33 = schema30.getMaxLength();
        io.swagger.oas.models.media.Schema schema35 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = schema30.getMultipleOf();
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema30);
        schema30.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema30.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test07018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07018");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema13.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema13.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = schema13.getExternalDocs();
        schema13.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema13.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema13.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(externalDocumentation20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07019");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.math.BigDecimal bigDecimal17 = schema12.getMaximum();
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema12.setDiscriminator(discriminator18);
        schema12.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test07020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07020");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema2.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = schema19.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.nullable((java.lang.Boolean) true);
        java.lang.Integer int25 = schema24.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test07021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07021");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        java.lang.Integer int62 = schema57.getMaxItems();
        java.lang.Boolean boolean63 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema57.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema57.setMinLength((java.lang.Integer) 100);
        schema57.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07022");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        io.swagger.oas.models.media.Schema schema18 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema20 = schema16.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07023");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.math.BigDecimal bigDecimal17 = schema12.getMaximum();
        java.lang.Boolean boolean18 = schema12.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema12.getExtensions();
        java.lang.Boolean boolean20 = schema12.getDeprecated();
        java.lang.String str21 = schema12.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test07024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07024");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMultipleOf(bigDecimal26);
        schema23.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema23.type("Optional.empty");
        io.swagger.oas.models.media.Schema schema33 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.lang.String str41 = schema40.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema40.name("no description");
        schema43.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.not(schema43);
        schema36.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema36.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema36.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema36.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema55 = schema23.not(schema36);
        java.math.BigDecimal bigDecimal56 = schema36.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
    }

    @Test
    public void test07025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07025");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.XML xML27 = null;
        schema19.setXml(xML27);
        java.lang.String str29 = schema19.getTitle();
        java.lang.String str30 = schema19.toString();
        schema19.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str30, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07026");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema12.title("#/components/schemas/");
        java.util.List<java.lang.String> strList19 = null;
        schema12.setRequired(strList19);
        java.lang.String[] strArray27 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        io.swagger.oas.models.media.Schema schema30 = schema12.required((java.util.List<java.lang.String>) strList28);
        java.util.List<java.lang.String> strList31 = schema12.getRequired();
        java.lang.Integer int32 = schema12.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test07027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07027");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj13 = strComparableSchema12.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.properties(strMap14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean24 = schema21.getReadOnly();
        io.swagger.oas.models.media.Schema schema26 = schema21.minLength((java.lang.Integer) (-1));
        schema15.setExample((java.lang.Object) schema21);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema21.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema21.maxProperties((java.lang.Integer) (-1));
        schema31.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema31.maxItems((java.lang.Integer) 1);
        schema11.setExample((java.lang.Object) schema35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07028");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema33.getMinItems();
        boolean boolean37 = schema27.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema40.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Schema schema46 = schema27.example((java.lang.Object) schema45);
        java.lang.Boolean boolean47 = schema45.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test07029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07029");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.readOnly((java.lang.Boolean) false);
        schema2.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema2.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema11.setDiscriminator(discriminator12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test07030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07030");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        java.lang.String str25 = schema24.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.lang.String str31 = schema30.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema30.name("no description");
        io.swagger.oas.models.media.Schema schema35 = schema30.minLength((java.lang.Integer) 100);
        java.lang.String str36 = schema35.getPattern();
        schema27.setDefault((java.lang.Object) str36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema27.xml(xML38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test07031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07031");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMaximum(bigDecimal16);
        java.lang.Boolean boolean18 = schema15.getNullable();
        schema15.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test07032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07032");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Boolean boolean5 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema7 = schema2.$ref("");
        io.swagger.oas.models.media.Schema schema9 = schema2.name("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.discriminator(discriminator10);
        java.math.BigDecimal bigDecimal12 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test07033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07033");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean15 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema schema21 = schema18.name("no description");
        schema21.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        schema21.setDiscriminator(discriminator24);
        java.lang.Integer int26 = schema21.getMinLength();
        io.swagger.oas.models.media.Schema schema28 = schema21.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinLength();
        io.swagger.oas.models.media.Schema schema36 = schema33.maxItems((java.lang.Integer) 10);
        schema33.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema33.nullable((java.lang.Boolean) false);
        schema21.setAdditionalProperties(schema33);
        java.lang.Boolean boolean42 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema44 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str45 = schema33.getType();
        schema2.setDefault((java.lang.Object) schema33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test07034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07034");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.externalDocs(externalDocumentation8);
        java.lang.String str10 = schema7.getDescription();
        java.lang.Boolean boolean11 = schema7.getWriteOnly();
        schema7.setUniqueItems((java.lang.Boolean) false);
        java.lang.Integer int14 = schema7.getMinProperties();
        schema7.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(int14);
    }

    @Test
    public void test07035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07035");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int19 = schema12.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema12.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema27 = schema12.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.lang.String str31 = schema30.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema30.name("no description");
        io.swagger.oas.models.media.Schema schema35 = schema30.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = schema30.getMultipleOf();
        schema30.setTitle("#/components/schemas/no description");
        schema30.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema12.example((java.lang.Object) (-1));
        java.lang.String str42 = schema41.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test07036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07036");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema12.name("hi!");
        schema12.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = null;
        schema12.setMaximum(bigDecimal26);
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07037");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.lang.Integer int58 = schema57.getMinItems();
        schema47.setAdditionalProperties(schema57);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.maxLength((java.lang.Integer) 100);
        boolean boolean64 = schema44.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema66 = schema44.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) true);
        schema68.setType("Optional.empty");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07038");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema33.getMinItems();
        boolean boolean37 = schema27.equals((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema39 = schema33.title("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        schema44.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema44.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.lang.String str54 = schema53.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema53.name("no description");
        java.math.BigDecimal bigDecimal57 = null;
        schema53.setMaximum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema59 = schema44.not(schema53);
        io.swagger.oas.models.media.Schema schema61 = schema44.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema44.maxItems((java.lang.Integer) 0);
        java.lang.String str64 = schema63.get$ref();
        schema33.setDefault((java.lang.Object) schema63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test07039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07039");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.title("no description");
        java.lang.Boolean boolean45 = schema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = schema41.nullable((java.lang.Boolean) true);
        java.lang.String str48 = schema47.getPattern();
        io.swagger.oas.models.media.Schema schema50 = schema47.maxProperties((java.lang.Integer) 10);
        schema33.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema50);
        schema50.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07040");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.xml(xML12);
        java.lang.Object obj14 = schema13.getExample();
        io.swagger.oas.models.media.Schema schema16 = schema13.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.xml(xML17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(obj14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07041");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema18.title("no description");
        java.lang.Boolean boolean23 = schema18.getNullable();
        schema18.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema27 = schema18.pattern("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        schema33.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean49 = schema46.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema42.not(schema46);
        io.swagger.oas.models.media.Schema schema51 = schema33.additionalProperties(schema46);
        schema51.setNullable((java.lang.Boolean) false);
        schema51.setPattern("Optional.empty");
        io.swagger.oas.models.media.Schema schema56 = schema27.additionalProperties(schema51);
        java.lang.String str57 = schema51.getType();
        io.swagger.oas.models.media.XML xML58 = schema51.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema51.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema51.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema62.getMinProperties();
        boolean boolean64 = schema2.equals((java.lang.Object) int63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(xML58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test07042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07042");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        schema16.setMinLength((java.lang.Integer) 1);
        schema16.setMaxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema16.getUniqueItems();
        schema16.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test07043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07043");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.discriminator(discriminator18);
        io.swagger.oas.models.media.Schema schema21 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test07044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07044");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator8 = schema2.getDiscriminator();
        java.lang.String str9 = schema2.getDescription();
        java.lang.Boolean boolean10 = schema2.getReadOnly();
        schema2.setPattern("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean10);
    }

    @Test
    public void test07045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07045");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        schema42.setPattern("no description");
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.lang.Integer int61 = schema60.getMinItems();
        schema50.setAdditionalProperties(schema60);
        java.lang.String[] strArray66 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = schema60.required((java.util.List<java.lang.String>) strList67);
        java.lang.String str70 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema71 = schema42.not(schema60);
        java.math.BigDecimal bigDecimal72 = schema42.getMinimum();
        schema42.setReadOnly((java.lang.Boolean) false);
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema78 = schema42.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.properties(strMap82);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema83.properties(strMap84);
        io.swagger.oas.models.media.Discriminator discriminator86 = schema85.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema87 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema89 = strComparableSchema87.maxProperties((java.lang.Integer) 10);
        schema89.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean92 = schema89.getUniqueItems();
        io.swagger.oas.models.media.Schema schema93 = schema85.not(schema89);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation94 = schema85.getExternalDocs();
        io.swagger.oas.models.media.Schema schema96 = schema85.deprecated((java.lang.Boolean) false);
        schema85.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema78.setDefault((java.lang.Object) schema85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(discriminator86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(externalDocumentation94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07046");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Integer int7 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema schema8 = schema2.getAdditionalProperties();
        java.math.BigDecimal bigDecimal9 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema8.setMaximum(bigDecimal9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(schema8);
    }

    @Test
    public void test07047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07047");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        schema25.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema25);
        java.math.BigDecimal bigDecimal33 = schema32.getMinimum();
        io.swagger.oas.models.media.Schema schema34 = schema2.example((java.lang.Object) bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 0);
        java.lang.Object obj37 = schema36.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(obj37);
    }

    @Test
    public void test07048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07048");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.String str4 = serverListOptional3.toString();
        io.swagger.oas.models.servers.Server[] serverArray5 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList6 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList6, serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional3.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList6);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema15.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        schema27.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema15.not(schema27);
        io.swagger.oas.models.media.Schema schema36 = schema34.deprecated((java.lang.Boolean) false);
        java.lang.String str37 = schema36.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        boolean boolean40 = serverListOptional3.equals((java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema42 = schema39.title("");
        io.swagger.oas.models.media.Schema schema44 = schema42.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean45 = schema44.getDeprecated();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(serverList8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
    }

    @Test
    public void test07049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07049");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.format("no description");
        schema27.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema40.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = schema36.not(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema27.additionalProperties(schema40);
        java.lang.String[] strArray48 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        schema40.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema52 = schema19.required((java.util.List<java.lang.String>) strList49);
        java.lang.String str53 = schema52.toString();
        io.swagger.oas.models.media.XML xML54 = null;
        schema52.setXml(xML54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.lang.Integer int64 = schema63.getMinItems();
        io.swagger.oas.models.media.Schema schema66 = schema63.title("no description");
        java.lang.Boolean boolean67 = schema63.getWriteOnly();
        schema63.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.lang.Integer int78 = schema77.getMinItems();
        schema77.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema63.addProperties("hi!", schema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema83.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable86 = strComparableSchema83.getDefault();
        java.math.BigDecimal bigDecimal87 = strComparableSchema83.getMinimum();
        schema77.addExtension("hi!", (java.lang.Object) bigDecimal87);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema77.xml(xML89);
        io.swagger.oas.models.media.Discriminator discriminator91 = schema77.getDiscriminator();
        io.swagger.oas.models.media.Schema schema92 = schema52.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        java.math.BigDecimal bigDecimal93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema92.multipleOf(bigDecimal93);
        io.swagger.oas.models.media.Schema schema96 = schema94.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str53, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(strComparable86);
        org.junit.Assert.assertNull(bigDecimal87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(discriminator91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07050");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.lang.Integer int19 = schema15.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional28 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema24.setNot(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("no description");
        schema46.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema39.not(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema39.writeOnly((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema39);
        schema24.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema21.additionalProperties(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema24.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.lang.String str62 = schema61.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema61.name("no description");
        schema64.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema64.setDiscriminator(discriminator67);
        io.swagger.oas.models.media.Schema schema70 = schema64.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema73 = schema58.additionalProperties(schema70);
        io.swagger.oas.models.media.Schema schema75 = schema70.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = schema75.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(externalDocumentation76);
    }

    @Test
    public void test07051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07051");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) (-1));
        schema9.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema9.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test07052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07052");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        schema2.setExtensions(strMap3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        schema7.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema7.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional11 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema7);
        java.lang.Integer int12 = schema7.getMinProperties();
        java.math.BigDecimal bigDecimal13 = schema7.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema7.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema2.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.not(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 10);
        schema15.setAdditionalProperties(schema25);
        schema15.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema15.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema33.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        schema33.setAdditionalProperties(schema43);
        java.lang.String[] strArray49 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema43.required((java.util.List<java.lang.String>) strList50);
        java.lang.Object obj53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.example(obj53);
        io.swagger.oas.models.media.Schema schema56 = schema54.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        schema54.setExternalDocs(externalDocumentation57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        schema54.setExternalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema54.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema64 = schema54.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setDefault((java.lang.Object) schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test07053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07053");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setNot(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        schema59.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema5.setMaxItems((java.lang.Integer) 100);
        java.lang.String str70 = schema5.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        java.lang.String str74 = schema73.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema75.maxProperties((java.lang.Integer) 10);
        java.lang.String str78 = schema77.get$ref();
        io.swagger.oas.models.media.Schema schema80 = schema77.name("no description");
        schema80.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema73.not(schema80);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema73.getExtensions();
        schema73.setMinLength((java.lang.Integer) 10);
        schema73.setName("no description");
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema73.multipleOf(bigDecimal89);
        schema5.setNot(schema73);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = null;
        schema5.setExternalDocs(externalDocumentation92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str70, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07054");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        schema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema33 = schema15.additionalProperties(schema28);
        java.lang.String str34 = schema28.getFormat();
        java.lang.Integer int35 = schema28.getMinProperties();
        schema7.addExtension("hi!", (java.lang.Object) int35);
        io.swagger.oas.models.media.Schema schema38 = schema7.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = null;
        schema7.setMultipleOf(bigDecimal39);
        java.lang.Boolean boolean41 = schema7.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test07055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07055");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.discriminator(discriminator18);
        io.swagger.oas.models.media.Schema schema21 = schema15.exclusiveMaximum((java.lang.Boolean) false);
        schema21.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema21.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.lang.Integer int41 = schema40.getMinItems();
        schema30.setAdditionalProperties(schema40);
        java.math.BigDecimal bigDecimal43 = null;
        schema40.setMaximum(bigDecimal43);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema40.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.lang.String str50 = schema49.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.lang.String str54 = schema53.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema53.name("no description");
        schema56.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema49.not(schema56);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema49.getExtensions();
        io.swagger.oas.models.media.Schema schema62 = schema49.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.exclusiveMinimum((java.lang.Boolean) false);
        schema46.setDefault((java.lang.Object) schema64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema46.properties(strMap66);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.math.BigDecimal bigDecimal75 = null;
        schema72.setMultipleOf(bigDecimal75);
        java.lang.Boolean boolean77 = schema72.getReadOnly();
        java.lang.Boolean boolean78 = schema72.getExclusiveMaximum();
        java.lang.String str79 = schema72.getTitle();
        io.swagger.oas.models.media.Schema schema81 = schema72.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema82 = schema46.additionalProperties(schema81);
        java.lang.Object obj83 = schema82.getExample();
        io.swagger.oas.models.media.Schema schema84 = schema27.additionalProperties(schema82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test07056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07056");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.format("hi!");
        schema2.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        schema2.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema2.minLength((java.lang.Integer) 0);
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str17 = schema14.get$ref();
        schema14.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test07057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07057");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        schema2.setWriteOnly((java.lang.Boolean) true);
        java.lang.Object obj18 = schema2.getExample();
        java.math.BigDecimal bigDecimal19 = schema2.getMultipleOf();
        io.swagger.oas.models.media.Schema schema21 = schema2.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(obj18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07058");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.ofNullable("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test07059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07059");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("no description");
        java.lang.Integer int11 = schema8.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("no description");
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int20 = schema17.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        schema23.setAdditionalProperties(schema33);
        java.math.BigDecimal bigDecimal36 = null;
        schema33.setMinimum(bigDecimal36);
        java.lang.Boolean boolean38 = schema33.getDeprecated();
        schema17.setDefault((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema41 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema8.example((java.lang.Object) schema33);
        io.swagger.oas.models.media.Schema schema44 = schema33.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test07060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07060");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema18.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema27.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.name("#/components/schemas/");
        java.math.BigDecimal bigDecimal32 = null;
        schema29.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema29.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07061");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable20 = strComparableSchema17.getDefault();
        schema14.setNot((io.swagger.oas.models.media.Schema) strComparableSchema17);
        java.math.BigDecimal bigDecimal22 = null;
        strComparableSchema17.setMultipleOf(bigDecimal22);
        strComparableSchema17.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.CharSequence> charSequenceSchema26 = new io.swagger.oas.models.media.Schema<java.lang.CharSequence>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema17.additionalProperties((io.swagger.oas.models.media.Schema) charSequenceSchema26);
        schema27.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.minItems((java.lang.Integer) (-1));
        schema27.setDescription("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strComparable20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07062");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        schema26.setTitle("");
        io.swagger.oas.models.media.Schema schema36 = schema26.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema schema42 = schema39.name("no description");
        java.lang.Boolean boolean43 = schema39.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.lang.String str47 = schema46.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.lang.String str51 = schema50.get$ref();
        io.swagger.oas.models.media.Schema schema53 = schema50.name("no description");
        schema53.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema46.not(schema53);
        io.swagger.oas.models.media.Schema schema57 = schema39.not(schema53);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        schema53.setDiscriminator(discriminator58);
        io.swagger.oas.models.media.Schema schema61 = schema53.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema53.xml(xML62);
        io.swagger.oas.models.media.Schema schema64 = schema26.not(schema53);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList65 = schema64.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strComparableList65);
    }

    @Test
    public void test07063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07063");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Integer int28 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07064");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.xml(xML29);
        io.swagger.oas.models.media.Schema schema32 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema32.readOnly((java.lang.Boolean) false);
        schema34.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema34.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema34.setDiscriminator(discriminator39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07065");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        java.lang.String str4 = strComparableSchema0.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strComparableSchema0.getExtensions();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.maximum(bigDecimal6);
        java.lang.Comparable<java.lang.String> strComparable8 = strComparableSchema0.getDefault();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strComparable8);
    }

    @Test
    public void test07066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07066");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        java.lang.Boolean boolean16 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema18 = schema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        schema24.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        schema37.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean40 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema schema41 = schema33.not(schema37);
        io.swagger.oas.models.media.Schema schema42 = schema24.additionalProperties(schema37);
        java.lang.String str43 = schema37.getFormat();
        java.lang.Integer int44 = schema37.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.lang.Integer int58 = schema57.getMinItems();
        schema47.setAdditionalProperties(schema57);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMaximum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.maxProperties((java.lang.Integer) 0);
        schema37.setAdditionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema63.uniqueItems((java.lang.Boolean) false);
        boolean boolean67 = schema5.equals((java.lang.Object) schema63);
        java.lang.Integer int68 = schema63.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test07067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07067");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        schema16.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean19 = schema16.getNullable();
        java.math.BigDecimal bigDecimal20 = schema16.getMaximum();
        io.swagger.oas.models.media.Schema schema22 = schema16.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxItems((java.lang.Integer) 1);
        schema28.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema16.not(schema28);
        io.swagger.oas.models.media.Schema schema41 = schema16.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema16.maxItems((java.lang.Integer) 0);
        java.lang.Boolean boolean44 = schema43.getExclusiveMinimum();
        schema43.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema43.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test07068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07068");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.readOnly((java.lang.Boolean) false);
        schema2.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema2.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema2.maximum(bigDecimal14);
        java.lang.Integer int16 = schema15.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test07069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07069");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema13.maxItems((java.lang.Integer) 100);
        schema13.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setDescription("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07070");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.deprecated((java.lang.Boolean) false);
        java.lang.Object obj7 = null;
        schema5.addExtension("hi!", obj7);
        java.math.BigDecimal bigDecimal9 = schema5.getMultipleOf();
        io.swagger.oas.models.media.Schema schema11 = schema5.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.lang.Integer int19 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema schema21 = schema18.title("no description");
        io.swagger.oas.models.media.Schema schema23 = schema21.title("hi!");
        schema21.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean49 = schema46.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema42.not(schema46);
        schema46.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema34.not(schema46);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema56.uniqueItems((java.lang.Boolean) true);
        schema34.setDefault((java.lang.Object) schema58);
        schema58.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema58.description("Optional.empty");
        io.swagger.oas.models.media.Schema schema65 = schema58.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        schema68.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema68.title("no description");
        io.swagger.oas.models.media.Schema schema74 = schema68.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema75.maxProperties((java.lang.Integer) 10);
        schema77.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema81 = schema77.title("no description");
        io.swagger.oas.models.media.Schema schema82 = schema68.additionalProperties(schema77);
        java.lang.Object obj83 = schema77.getExample();
        io.swagger.oas.models.media.Schema schema85 = schema77.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema87 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema88 = schema85.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema87);
        io.swagger.oas.models.media.Schema schema90 = schema88.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema92 = schema90.pattern("");
        schema90.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap95 = schema90.getProperties();
        io.swagger.oas.models.media.Schema schema96 = schema65.properties(strMap95);
        schema21.setProperties(strMap95);
        schema11.setProperties(strMap95);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(bigDecimal9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(obj83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07071");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema67.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.addProperties("no description", schema67);
        io.swagger.oas.models.media.Schema schema77 = schema12.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema79 = schema12.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema79.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test07072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07072");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.pattern("#/components/schemas/");
        java.lang.String str14 = schema13.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema13.title("Optional.empty");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.maximum(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema13.maximum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07073");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test07074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07074");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema26.getExternalDocs();
        io.swagger.oas.models.media.Schema schema29 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07075");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.discriminator(discriminator12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07076");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        io.swagger.oas.models.media.Schema schema19 = schema18.getNot();
        schema19.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07077");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema18.properties(strMap38);
        schema18.setFormat("#/components/schemas/no description");
        schema18.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str44 = schema18.getPattern();
        java.math.BigDecimal bigDecimal45 = null;
        schema18.setMaximum(bigDecimal45);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test07078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07078");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema17 = schema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        java.lang.Boolean boolean28 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema24.nullable((java.lang.Boolean) true);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema24.name("Optional[[]]");
        schema5.setAdditionalProperties(schema24);
        java.lang.String str36 = schema5.get$ref();
        java.lang.Boolean boolean37 = schema5.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test07079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07079");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Integer int7 = schema2.getMinProperties();
        java.math.BigDecimal bigDecimal8 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) (-1));
        schema2.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal13 = null;
        schema2.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = schema2.getXml();
        io.swagger.oas.models.media.Schema schema17 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        schema17.setDiscriminator(discriminator18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07080");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.maximum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test07081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07081");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        io.swagger.oas.models.media.Schema schema55 = schema52.title("no description");
        java.lang.Boolean boolean56 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema52.$ref("");
        java.lang.String str61 = schema52.get$ref();
        schema2.setExample((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema52.maximum(bigDecimal63);
        java.lang.Class<?> wildcardClass65 = schema64.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test07082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07082");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.List<io.swagger.oas.models.servers.Server> serverList2 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList3 = serverListOptional1.orElse(serverList2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema schema27 = schema9.additionalProperties(schema22);
        io.swagger.oas.models.media.Schema schema29 = schema22.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean66 = schema63.getNullable();
        java.math.BigDecimal bigDecimal67 = schema63.getMaximum();
        io.swagger.oas.models.media.Schema schema69 = schema63.maxLength((java.lang.Integer) (-1));
        schema46.setNot(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema29.additionalProperties(schema46);
        boolean boolean72 = serverListOptional1.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.lang.Integer int80 = schema79.getMinItems();
        io.swagger.oas.models.media.Schema schema82 = schema79.title("no description");
        io.swagger.oas.models.media.Schema schema84 = schema82.type("no description");
        io.swagger.oas.models.media.Schema schema86 = schema82.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema86.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema86.$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema92 = schema90.description("Optional.empty");
        schema92.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema71.not(schema92);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation96 = schema71.getExternalDocs();
        java.lang.Boolean boolean97 = schema71.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNull(serverList3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(externalDocumentation96);
        org.junit.Assert.assertNull(boolean97);
    }

    @Test
    public void test07083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07083");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema schema14 = schema12.minProperties((java.lang.Integer) 100);
        java.util.List<java.lang.String> strList15 = schema12.getRequired();
        io.swagger.oas.models.media.Schema schema16 = schema12.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07084");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema42 = schema18.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = schema45.getNot();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema45.minimum(bigDecimal49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema45.properties(strMap51);
        schema52.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema52.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        schema61.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema61.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.lang.String str71 = schema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema70.name("no description");
        java.math.BigDecimal bigDecimal74 = null;
        schema70.setMaximum(bigDecimal74);
        io.swagger.oas.models.media.Schema schema76 = schema61.not(schema70);
        java.lang.Integer int77 = schema76.getMinLength();
        schema76.setDescription("no description");
        boolean boolean80 = schema52.equals((java.lang.Object) schema76);
        io.swagger.oas.models.media.Schema schema81 = schema18.example((java.lang.Object) boolean80);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema18.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test07085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07085");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.maximum(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.multipleOf(bigDecimal37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07086");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        boolean boolean12 = serverListOptional7.isPresent();
        boolean boolean13 = serverListOptional7.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray14 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray14);
        io.swagger.oas.models.servers.Server[] serverArray16 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList17 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList17, serverArray16);
        java.util.List<io.swagger.oas.models.servers.Server> serverList19 = serverListOptional15.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList17);
        java.util.List<io.swagger.oas.models.servers.Server> serverList20 = serverListOptional7.orElse(serverList19);
        java.util.List<io.swagger.oas.models.servers.Server> serverList21 = serverListOptional1.orElse(serverList19);
        boolean boolean22 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray23 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray23);
        io.swagger.oas.models.servers.Server[] serverArray25 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList26 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList26, serverArray25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList26);
        boolean boolean29 = serverListOptional24.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray30 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional31 = io.swagger.jaxrs2.OperationParser.getServers(serverArray30);
        io.swagger.oas.models.servers.Server[] serverArray32 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList33 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList33, serverArray32);
        java.util.List<io.swagger.oas.models.servers.Server> serverList35 = serverListOptional31.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList33);
        boolean boolean36 = serverListOptional31.isPresent();
        boolean boolean37 = serverListOptional31.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.lang.Integer int45 = schema44.getMinItems();
        io.swagger.oas.models.media.Schema schema47 = schema44.title("no description");
        java.lang.Boolean boolean48 = schema44.getWriteOnly();
        io.swagger.oas.models.media.Schema schema50 = schema44.nullable((java.lang.Boolean) true);
        java.lang.String str51 = schema50.getPattern();
        io.swagger.oas.models.media.Schema schema53 = schema50.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean54 = serverListOptional31.equals((java.lang.Object) schema53);
        boolean boolean55 = serverListOptional31.isPresent();
        java.lang.String str56 = serverListOptional31.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray57 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional58 = io.swagger.jaxrs2.OperationParser.getServers(serverArray57);
        io.swagger.oas.models.servers.Server[] serverArray59 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList60 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList60, serverArray59);
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional58.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList60);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional63 = java.util.Optional.ofNullable(serverList62);
        java.util.List<io.swagger.oas.models.servers.Server> serverList64 = serverListOptional31.orElse(serverList62);
        java.util.List<io.swagger.oas.models.servers.Server> serverList65 = serverListOptional24.orElse(serverList64);
        java.util.List<io.swagger.oas.models.servers.Server> serverList66 = serverListOptional1.orElse(serverList64);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertNotNull(serverListOptional15);
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(serverList19);
        org.junit.Assert.assertNotNull(serverList20);
        org.junit.Assert.assertNotNull(serverList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(serverArray23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(serverArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(serverList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(serverArray30);
        org.junit.Assert.assertNotNull(serverListOptional31);
        org.junit.Assert.assertNotNull(serverArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(serverList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Optional.empty" + "'", str56, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray57);
        org.junit.Assert.assertNotNull(serverListOptional58);
        org.junit.Assert.assertNotNull(serverArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(serverList62);
        org.junit.Assert.assertNotNull(serverListOptional63);
        org.junit.Assert.assertNotNull(serverList64);
        org.junit.Assert.assertNotNull(serverList65);
        org.junit.Assert.assertNotNull(serverList66);
    }

    @Test
    public void test07087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07087");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema schema8 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema5.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.minimum(bigDecimal11);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.discriminator(discriminator13);
        schema12.addEnumItemObject((java.lang.Comparable<java.lang.String>) "#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test07088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07088");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema2.minimum(bigDecimal14);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        schema20.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.not(schema23);
        io.swagger.oas.models.media.Schema schema26 = schema20.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema29.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        schema37.setAdditionalProperties(schema47);
        java.lang.String[] strArray53 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        io.swagger.oas.models.media.Schema schema56 = schema47.required((java.util.List<java.lang.String>) strList54);
        java.lang.String str57 = schema47.get$ref();
        java.lang.String str58 = schema47.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema47.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema62.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema62.format("no description");
        schema65.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        io.swagger.oas.models.media.Discriminator discriminator75 = schema74.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        schema78.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean81 = schema78.getUniqueItems();
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema78);
        io.swagger.oas.models.media.Schema schema83 = schema65.additionalProperties(schema78);
        java.lang.String[] strArray86 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema78.setRequired((java.util.List<java.lang.String>) strList87);
        schema47.setRequired((java.util.List<java.lang.String>) strList87);
        schema34.setRequired((java.util.List<java.lang.String>) strList87);
        schema26.setRequired((java.util.List<java.lang.String>) strList87);
        java.util.List<java.lang.String> strList93 = schema26.getRequired();
        schema2.setRequired(strList93);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test07089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07089");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema26.getDefault();
        java.math.BigDecimal bigDecimal30 = strComparableSchema26.getMinimum();
        schema20.addExtension("hi!", (java.lang.Object) bigDecimal30);
        schema20.setMinLength((java.lang.Integer) 1);
        schema20.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema20.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML38 = null;
        schema20.setXml(xML38);
        java.lang.Class<?> wildcardClass40 = schema20.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test07090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07090");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.externalDocs(externalDocumentation11);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema12.setExternalDocs(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07091");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema6 = schema2.minProperties((java.lang.Integer) 0);
        schema6.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.xml(xML9);
        io.swagger.oas.models.media.Schema schema12 = schema6.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07092");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.Integer int10 = schema5.getMinLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema5.getExtensions();
        schema5.setMinItems((java.lang.Integer) (-1));
        java.lang.String str14 = schema5.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.lang.Integer int29 = schema28.getMinItems();
        schema18.setAdditionalProperties(schema28);
        java.math.BigDecimal bigDecimal31 = null;
        schema28.setMinimum(bigDecimal31);
        java.lang.Boolean boolean33 = schema28.getDeprecated();
        schema28.setMaxLength((java.lang.Integer) 100);
        schema28.setMinLength((java.lang.Integer) 0);
        schema28.setMinProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMinimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str61 = schema54.get$ref();
        io.swagger.oas.models.media.Schema schema62 = schema28.additionalProperties(schema54);
        schema5.addExtension("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test07093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07093");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.not(schema5);
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        schema16.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema16.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxLength((java.lang.Integer) 100);
        boolean boolean74 = schema54.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema76 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        java.lang.Integer int82 = schema81.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema83.maxProperties((java.lang.Integer) 10);
        java.lang.String str86 = schema85.get$ref();
        io.swagger.oas.models.media.Schema schema88 = schema85.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema85.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        schema90.setExternalDocs(externalDocumentation91);
        java.lang.String str93 = schema90.getFormat();
        io.swagger.oas.models.media.Schema schema94 = schema81.additionalProperties(schema90);
        java.lang.Boolean boolean95 = schema81.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        schema81.setDiscriminator(discriminator96);
        io.swagger.oas.models.media.Schema schema99 = schema81.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test07094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07094");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema25.discriminator(discriminator36);
        java.lang.String str38 = schema37.getFormat();
        io.swagger.oas.models.media.Schema schema40 = schema37.title("Optional[[]]");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema37.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
    }

    @Test
    public void test07095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07095");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        schema15.setProperties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema15.type("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07096");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema8.description("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema8.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema17 = schema16.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema36.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema24.not(schema36);
        io.swagger.oas.models.media.Schema schema45 = schema43.deprecated((java.lang.Boolean) false);
        java.lang.String str46 = schema45.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int54 = schema51.getMinItems();
        boolean boolean55 = schema45.equals((java.lang.Object) schema51);
        java.util.List<java.lang.String> strList56 = schema51.getRequired();
        java.lang.String str57 = schema51.getType();
        io.swagger.oas.models.media.Schema schema58 = schema16.additionalProperties(schema51);
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema51.xml(xML59);
        schema60.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test07097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07097");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMaximum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07098");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server server6 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray7 = new io.swagger.oas.annotations.servers.Server[] { server6 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray7);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional10 = java.util.Optional.of(serverListOptional9);
        java.lang.String str11 = serverListOptional9.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray12 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray12);
        io.swagger.oas.models.servers.Server[] serverArray14 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList15 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList15, serverArray14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional13.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        boolean boolean18 = serverListOptional13.isPresent();
        boolean boolean19 = serverListOptional13.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.lang.Integer int27 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema29 = schema26.title("no description");
        java.lang.Boolean boolean30 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = schema26.nullable((java.lang.Boolean) true);
        java.lang.String str33 = schema32.getPattern();
        io.swagger.oas.models.media.Schema schema35 = schema32.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean36 = serverListOptional13.equals((java.lang.Object) schema35);
        boolean boolean37 = serverListOptional13.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema44.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        schema48.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean51 = schema48.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema44.not(schema48);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema56 = schema55.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("no description");
        schema58.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean61 = schema58.getReadOnly();
        io.swagger.oas.models.media.Schema schema63 = schema58.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema48.not(schema58);
        boolean boolean65 = serverListOptional13.equals((java.lang.Object) schema48);
        io.swagger.oas.annotations.servers.Server[] serverArray66 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional67 = io.swagger.jaxrs2.OperationParser.getServers(serverArray66);
        io.swagger.oas.models.servers.Server[] serverArray68 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList69 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList69, serverArray68);
        java.util.List<io.swagger.oas.models.servers.Server> serverList71 = serverListOptional67.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList69);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional72 = java.util.Optional.ofNullable(serverList71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional13.orElse(serverList71);
        java.util.List<io.swagger.oas.models.servers.Server> serverList74 = serverListOptional9.orElse(serverList73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList75 = serverListOptional5.orElse(serverList74);
        boolean boolean76 = serverListOptional5.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList77 = serverListOptional5.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray7);
        org.junit.Assert.assertNotNull(serverListOptional8);
        org.junit.Assert.assertNotNull(serverListOptional9);
        org.junit.Assert.assertNotNull(serverListOptionalOptional10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Optional.empty" + "'", str11, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(serverArray66);
        org.junit.Assert.assertNotNull(serverListOptional67);
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(serverList71);
        org.junit.Assert.assertNotNull(serverListOptional72);
        org.junit.Assert.assertNotNull(serverList73);
        org.junit.Assert.assertNotNull(serverList74);
        org.junit.Assert.assertNotNull(serverList75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test07099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07099");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        io.swagger.oas.models.media.Schema schema43 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.Schema schema45 = schema42.nullable((java.lang.Boolean) true);
        schema42.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema49.addRequiredItem("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test07100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07100");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema18.minItems((java.lang.Integer) (-1));
        java.lang.String str49 = schema48.getDescription();
        java.lang.Integer int50 = schema48.getMaxItems();
        java.lang.Integer int51 = schema48.getMaxItems();
        io.swagger.oas.models.media.Schema schema52 = schema48.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07101");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema40 = schema18.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema42 = schema18.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema46 = schema44.format("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07102");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Integer int5 = schema2.getMinItems();
        java.lang.Boolean boolean6 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema8 = schema2.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema10 = schema8.format("no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07103");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema26.getDefault();
        java.math.BigDecimal bigDecimal30 = strComparableSchema26.getMinimum();
        schema20.addExtension("hi!", (java.lang.Object) bigDecimal30);
        schema20.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema20.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema35.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        schema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = schema46.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional50 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema46);
        java.lang.Integer int51 = schema46.getMinProperties();
        java.math.BigDecimal bigDecimal52 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema schema54 = schema46.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        schema58.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.not(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema58.minLength((java.lang.Integer) 10);
        schema54.setAdditionalProperties(schema64);
        schema54.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema35.addProperties("", schema54);
        io.swagger.oas.models.media.Schema schema72 = schema35.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML73 = schema35.getXml();
        java.lang.String str74 = schema35.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(xML73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str74, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07104");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        java.lang.String str27 = schema18.getName();
        java.lang.String str28 = schema18.getTitle();
        io.swagger.oas.models.media.Schema schema30 = schema18.pattern("no description");
        java.lang.String str31 = schema30.toString();
        java.lang.String str32 = schema30.getType();
        java.math.BigDecimal bigDecimal33 = schema30.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str31, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(bigDecimal33);
    }

    @Test
    public void test07105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07105");
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(operationParserOptional0);
    }

    @Test
    public void test07106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07106");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = schema7.getAdditionalProperties();
        java.lang.Boolean boolean9 = schema7.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.minimum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMultipleOf(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test07107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07107");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean36 = schema35.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema38 = schema35.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07108");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str1 = strComparableSchema0.getPattern();
        java.lang.Object obj2 = strComparableSchema0.getExample();
        strComparableSchema0.setExclusiveMaximum((java.lang.Boolean) false);
        strComparableSchema0.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(obj2);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test07109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07109");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        schema10.setMaxProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema10.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        schema10.setExtensions(strMap14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema10.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int20 = schema10.getMinLength();
        schema10.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test07110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07110");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.setMinProperties((java.lang.Integer) 1);
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj16 = strComparableSchema15.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema15.properties(strMap17);
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema15.$ref("hi!");
        java.util.List<java.lang.String> strList21 = schema20.getRequired();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        schema8.setAdditionalProperties(schema23);
        java.lang.Boolean boolean27 = schema23.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(obj16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test07111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07111");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema38.setReadOnly((java.lang.Boolean) false);
        java.lang.String str42 = schema38.getPattern();
        schema22.addExtension("", (java.lang.Object) schema38);
        schema38.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema38.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = null;
        schema47.setAdditionalProperties(schema48);
        io.swagger.oas.models.media.Schema schema51 = schema47.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema47.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07112");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.xml(xML17);
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.XML xML20 = schema18.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(xML20);
    }

    @Test
    public void test07113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07113");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema26 = schema18.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema29.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional33 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema36.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema39 = schema36.format("no description");
        schema29.setNot(schema39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema29.minimum(bigDecimal41);
        schema42.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema42.getAdditionalProperties();
        schema26.setAdditionalProperties(schema45);
        // The following exception was thrown during execution in test generation
        try {
            schema45.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema45);
    }

    @Test
    public void test07114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07114");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.externalDocs(externalDocumentation14);
        schema13.setDeprecated((java.lang.Boolean) false);
        schema13.setMinItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal20 = schema13.getMultipleOf();
        java.lang.String str21 = schema13.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test07115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07115");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        schema42.setPattern("no description");
        schema42.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.lang.Integer int61 = schema60.getMinItems();
        schema50.setAdditionalProperties(schema60);
        java.lang.String[] strArray66 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = schema60.required((java.util.List<java.lang.String>) strList67);
        java.lang.String str70 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema71 = schema42.not(schema60);
        java.math.BigDecimal bigDecimal72 = schema42.getMinimum();
        schema42.setReadOnly((java.lang.Boolean) false);
        schema42.setWriteOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema42.getExtensions();
        schema42.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNull(strMap77);
    }

    @Test
    public void test07116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07116");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.lang.Integer int17 = schema16.getMinItems();
        schema6.setAdditionalProperties(schema16);
        java.lang.String[] strArray22 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema27.getDeprecated();
        schema2.setNot(schema27);
        java.util.List<java.lang.String> strList34 = schema2.getRequired();
        java.math.BigDecimal bigDecimal35 = schema2.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(bigDecimal35);
    }

    @Test
    public void test07117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07117");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.externalDocs(externalDocumentation8);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema13 = schema11.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML14 = null;
        schema13.setXml(xML14);
        io.swagger.oas.models.media.Schema schema17 = schema13.minProperties((java.lang.Integer) 1);
        schema13.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07118");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) schema36);
        java.lang.Integer int38 = schema18.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test07119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07119");
        java.lang.Cloneable cloneable0 = null;
        java.util.Optional<java.lang.Cloneable> cloneableOptional1 = java.util.Optional.ofNullable(cloneable0);
        org.junit.Assert.assertNotNull(cloneableOptional1);
    }

    @Test
    public void test07120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07120");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        boolean boolean7 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema23);
        boolean boolean25 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        schema46.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean49 = schema46.getReadOnly();
        io.swagger.oas.models.media.Schema schema51 = schema46.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema36.not(schema46);
        boolean boolean53 = serverListOptional1.equals((java.lang.Object) schema36);
        java.lang.Integer int54 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema36.multipleOf(bigDecimal55);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema56.setDiscriminator(discriminator57);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test07121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07121");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema6.setMinimum(bigDecimal13);
        java.lang.Object obj15 = schema6.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(obj15);
    }

    @Test
    public void test07122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07122");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        boolean boolean6 = serverListOptional5.isPresent();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test07123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07123");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        java.lang.Integer int33 = schema26.getMaxLength();
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test07124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07124");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList1 = strComparableSchema0.getRequired();
        java.lang.String[] strArray3 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList4 = new java.util.ArrayList<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList4, strArray3);
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.required((java.util.List<java.lang.String>) strList4);
        java.lang.String str7 = schema6.getFormat();
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = schema6.getProperties();
        org.junit.Assert.assertNull(strList1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test07125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07125");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML16 = null;
        schema2.setXml(xML16);
        java.lang.String str18 = schema2.getType();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = schema21.title("no description");
        io.swagger.oas.models.media.Schema schema27 = schema21.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema30.title("no description");
        io.swagger.oas.models.media.Schema schema35 = schema21.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema47);
        io.swagger.oas.models.media.Schema schema53 = schema43.minItems((java.lang.Integer) 10);
        schema53.setMinLength((java.lang.Integer) 100);
        schema53.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        schema53.setDiscriminator(discriminator58);
        io.swagger.oas.models.media.Schema schema60 = schema21.addProperties("no description", schema53);
        io.swagger.oas.models.media.Schema schema62 = schema21.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema64 = schema21.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = schema21.getProperties();
        io.swagger.oas.models.media.Schema schema66 = schema2.properties(strMap65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test07126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07126");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Boolean boolean5 = schema2.getExclusiveMinimum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        schema2.setProperties(strMap6);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
    }

    @Test
    public void test07127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07127");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema20.minLength((java.lang.Integer) 100);
        java.lang.String str23 = schema20.getType();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.discriminator(discriminator24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator32 = schema28.getDiscriminator();
        schema28.setType("no description");
        io.swagger.oas.models.media.Schema schema36 = schema28.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema47);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList52 = schema47.getEnum();
        io.swagger.oas.models.media.Schema schema54 = schema47.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema58.uniqueItems((java.lang.Boolean) true);
        schema47.addExtension("", (java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.nullable((java.lang.Boolean) true);
        schema28.setNot(schema60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema60.externalDocs(externalDocumentation65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema70 = schema69.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema72 = schema69.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList75 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean76 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean77 = strComparableList75.add((java.lang.Comparable<java.lang.String>) "");
        schema72.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        schema60.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList75);
        java.math.BigDecimal bigDecimal80 = schema60.getMinimum();
        schema20.setNot(schema60);
        java.lang.Boolean boolean82 = schema60.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal83 = schema60.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strComparableList52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNull(bigDecimal83);
    }

    @Test
    public void test07128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07128");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        schema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema15.getWriteOnly();
        java.math.BigDecimal bigDecimal19 = schema15.getMinimum();
        io.swagger.oas.models.media.Schema schema21 = schema15.maxProperties((java.lang.Integer) 10);
        java.lang.Integer int22 = schema21.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test07129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07129");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema14.type("Optional[[]]");
        java.lang.Class<?> wildcardClass21 = schema14.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test07130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07130");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema schema46 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean47 = schema14.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema14.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNull(externalDocumentation48);
    }

    @Test
    public void test07131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07131");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema18.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema48.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Integer int51 = schema48.getMaxItems();
        java.lang.String str52 = schema48.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test07132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07132");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.maximum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test07133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07133");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        schema45.setMinItems((java.lang.Integer) 100);
        schema45.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal50 = schema45.getMinimum();
        schema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal50);
    }

    @Test
    public void test07134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07134");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.lang.Integer int37 = schema36.getMinItems();
        schema26.setAdditionalProperties(schema36);
        java.math.BigDecimal bigDecimal39 = null;
        schema36.setMaximum(bigDecimal39);
        io.swagger.oas.models.media.Schema schema42 = schema36.maxProperties((java.lang.Integer) 1);
        schema2.setAdditionalProperties(schema42);
        java.lang.String str44 = schema2.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test07135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07135");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        schema25.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema32 = schema13.not(schema25);
        java.lang.Integer int33 = schema32.getMinLength();
        schema32.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int36 = schema32.getMaxItems();
        schema5.setExample((java.lang.Object) int36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        io.swagger.oas.models.media.Discriminator discriminator45 = schema44.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        schema48.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean51 = schema48.getUniqueItems();
        io.swagger.oas.models.media.Schema schema52 = schema44.not(schema48);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList53 = schema48.getEnum();
        io.swagger.oas.models.media.Schema schema55 = schema48.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.uniqueItems((java.lang.Boolean) true);
        schema48.addExtension("", (java.lang.Object) schema61);
        io.swagger.oas.models.media.Schema schema64 = schema61.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema66 = schema61.maxItems((java.lang.Integer) 0);
        java.lang.String str67 = schema61.getFormat();
        schema5.setExample((java.lang.Object) schema61);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = null;
        schema61.setExtensions(strMap69);
        java.lang.Object obj71 = schema61.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strComparableList53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(obj71);
    }

    @Test
    public void test07136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07136");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema22.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator37 = schema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = schema22.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal40 = schema39.getMinimum();
        schema39.setName("Optional.empty");
        java.math.BigDecimal bigDecimal43 = null;
        schema39.setMultipleOf(bigDecimal43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(bigDecimal40);
    }

    @Test
    public void test07137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07137");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema2 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema2.maxProperties((java.lang.Integer) 10);
        java.lang.String str5 = schema4.get$ref();
        io.swagger.oas.models.media.Schema schema7 = schema4.name("no description");
        schema7.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        schema7.setDiscriminator(discriminator10);
        java.lang.String[] strArray13 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        schema7.setRequired((java.util.List<java.lang.String>) strList14);
        strComparableSchema0.setRequired((java.util.List<java.lang.String>) strList14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.name("no description");
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema23.setDiscriminator(discriminator26);
        io.swagger.oas.models.media.Schema schema29 = schema23.addRequiredItem("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        schema23.setExternalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema23.format("Optional.empty");
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema23.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema0.not(schema23);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema0.minimum(bigDecimal37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        schema57.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema64 = schema45.not(schema57);
        io.swagger.oas.models.media.Schema schema66 = schema64.deprecated((java.lang.Boolean) false);
        java.lang.String str67 = schema66.getFormat();
        io.swagger.oas.models.media.Schema schema69 = schema66.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = null;
        schema69.setExtensions(strMap70);
        java.lang.String str72 = schema69.getType();
        schema69.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean75 = schema69.getUniqueItems();
        schema69.setFormat("no description");
        strComparableSchema0.setAdditionalProperties(schema69);
        java.lang.Boolean boolean79 = schema69.getUniqueItems();
        io.swagger.oas.models.media.Schema schema81 = schema69.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test07138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07138");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) true);
        schema2.setNot(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList52 = strComparableSchema51.getRequired();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema51.required((java.util.List<java.lang.String>) strList55);
        schema48.setRequired((java.util.List<java.lang.String>) strList55);
        io.swagger.oas.models.media.Schema schema59 = schema2.required((java.util.List<java.lang.String>) strList55);
        java.lang.String str60 = schema2.getType();
        schema2.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "no description" + "'", str60, "no description");
    }

    @Test
    public void test07139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07139");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        schema9.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean12 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema14 = schema9.minLength((java.lang.Integer) (-1));
        schema3.setExample((java.lang.Object) schema9);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema schema19 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str27 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("no description");
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema22.not(schema29);
        java.lang.Boolean boolean33 = schema29.getReadOnly();
        java.lang.Boolean boolean34 = schema29.getExclusiveMinimum();
        schema29.setReadOnly((java.lang.Boolean) true);
        schema29.setName("");
        schema17.setNot(schema29);
        schema17.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str42 = schema17.getDescription();
        java.lang.Integer int43 = schema17.getMaxLength();
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test07140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07140");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema18.properties(strMap38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.math.BigDecimal bigDecimal47 = null;
        schema44.setMultipleOf(bigDecimal47);
        java.lang.Boolean boolean49 = schema44.getReadOnly();
        java.lang.Boolean boolean50 = schema44.getExclusiveMaximum();
        java.lang.String str51 = schema44.getTitle();
        io.swagger.oas.models.media.Schema schema53 = schema44.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema18.additionalProperties(schema53);
        java.lang.Object obj55 = schema54.getExample();
        java.math.BigDecimal bigDecimal56 = null;
        schema54.setMultipleOf(bigDecimal56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(obj55);
    }

    @Test
    public void test07141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07141");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        java.lang.String str45 = schema6.getName();
        schema6.setUniqueItems((java.lang.Boolean) false);
        java.lang.String str48 = schema6.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test07142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07142");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML14 = null;
        schema11.setXml(xML14);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema11.discriminator(discriminator16);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = schema17.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test07143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07143");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.setName("no description");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema19.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.name("");
        io.swagger.oas.models.media.Schema schema27 = schema25.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 0\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07144");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema6.xml(xML15);
        schema16.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML23 = null;
        schema20.setXml(xML23);
        java.math.BigDecimal bigDecimal25 = schema20.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema20.setDiscriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal25);
    }

    @Test
    public void test07145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07145");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        java.lang.String str27 = schema20.toString();
        schema20.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str27, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07146");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setNot(schema44);
        io.swagger.oas.models.media.Schema schema47 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str48 = schema10.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test07147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07147");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) true);
        java.lang.String str16 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = schema19.name("no description");
        schema22.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        schema22.setDiscriminator(discriminator25);
        java.lang.Integer int27 = schema22.getMinLength();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = schema22.getExtensions();
        schema22.setMinItems((java.lang.Integer) (-1));
        java.lang.String str31 = schema22.getType();
        io.swagger.oas.models.media.Schema schema32 = schema12.example((java.lang.Object) str31);
        io.swagger.oas.models.media.Schema schema34 = schema12.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "no description" + "'", str16, "no description");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07148");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        io.swagger.oas.models.media.Schema schema33 = schema23.minItems((java.lang.Integer) 10);
        schema33.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean36 = schema33.getNullable();
        java.math.BigDecimal bigDecimal37 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema33.maxLength((java.lang.Integer) (-1));
        schema16.setNot(schema39);
        io.swagger.oas.models.media.Schema schema42 = schema39.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal45 = null;
        schema39.setMinimum(bigDecimal45);
        java.lang.Boolean boolean47 = schema39.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test07149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07149");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("no description");
        schema26.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema19.not(schema26);
        java.lang.Boolean boolean30 = schema26.getReadOnly();
        java.lang.Boolean boolean31 = schema26.getExclusiveMinimum();
        java.lang.Integer int32 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional40 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema36);
        java.lang.Integer int41 = schema36.getMinProperties();
        java.math.BigDecimal bigDecimal42 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema schema43 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema36);
        io.swagger.oas.models.media.Schema schema45 = schema36.addRequiredItem("hi!");
        schema45.setName("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML50 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema52 = schema45.format("#/components/schemas/no description");
        java.util.List<java.lang.String> strList53 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema12.required(strList53);
        java.lang.String str55 = schema54.getType();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = schema54.getProperties();
        java.lang.Integer int57 = schema54.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + boolean31 + "' != '" + false + "'", boolean31, false);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test07150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07150");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema43 = schema36.type("hi!");
        schema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema6.example((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema36.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.lang.String str54 = schema53.get$ref();
        io.swagger.oas.models.media.Schema schema56 = schema53.name("no description");
        java.lang.Boolean boolean57 = schema53.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        schema53.setProperties(strMap58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema53.externalDocs(externalDocumentation60);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean75 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema72);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList77 = schema72.getEnum();
        io.swagger.oas.models.media.Schema schema79 = schema72.type("hi!");
        schema72.setType("#/components/schemas/");
        schema53.setAdditionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema84 = schema53.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.maximum(bigDecimal85);
        java.lang.Integer int87 = schema84.getMinItems();
        io.swagger.oas.models.media.Schema schema89 = schema84.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema90 = schema50.example((java.lang.Object) schema89);
        schema89.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(strComparableList77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07151");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        io.swagger.oas.models.media.Schema schema38 = schema36.type("no description");
        io.swagger.oas.models.media.Schema schema40 = schema36.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.maximum(bigDecimal41);
        schema26.setExample((java.lang.Object) bigDecimal41);
        io.swagger.oas.models.media.Schema schema45 = schema26.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07152");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.String[] strArray11 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        schema5.setRequired((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal15 = null;
        schema5.setMinimum(bigDecimal15);
        schema5.setDescription("no description");
        io.swagger.oas.models.media.Schema schema20 = schema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema5.exclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = schema22.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test07153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07153");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.math.BigDecimal bigDecimal7 = null;
        schema4.setMultipleOf(bigDecimal7);
        schema4.set$ref("no description");
        schema4.set$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        schema4.setExternalDocs(externalDocumentation13);
        java.lang.Boolean boolean15 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Schema schema17 = schema4.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema35.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema35.format("no description");
        schema38.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema41 = schema24.not(schema38);
        io.swagger.oas.models.media.Schema schema43 = schema41.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        io.swagger.oas.models.media.Schema schema49 = schema47.maxLength((java.lang.Integer) (-1));
        schema17.setAdditionalProperties(schema49);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07154");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        schema27.setDiscriminator(discriminator29);
        java.lang.Boolean boolean31 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema33 = schema27.deprecated((java.lang.Boolean) false);
        schema33.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.lang.String str39 = schema38.get$ref();
        io.swagger.oas.models.media.Schema schema41 = schema38.name("no description");
        io.swagger.oas.models.media.Schema schema43 = schema38.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal44 = schema38.getMultipleOf();
        java.math.BigDecimal bigDecimal45 = null;
        schema38.setMaximum(bigDecimal45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema49.title("no description");
        io.swagger.oas.models.media.Schema schema55 = schema49.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        schema58.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema62 = schema58.title("no description");
        io.swagger.oas.models.media.Schema schema63 = schema49.additionalProperties(schema58);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.properties(strMap68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        io.swagger.oas.models.media.Discriminator discriminator72 = schema71.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        schema75.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean78 = schema75.getUniqueItems();
        io.swagger.oas.models.media.Schema schema79 = schema71.not(schema75);
        io.swagger.oas.models.media.Schema schema81 = schema71.minItems((java.lang.Integer) 10);
        schema81.setMinLength((java.lang.Integer) 100);
        schema81.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator86 = null;
        schema81.setDiscriminator(discriminator86);
        io.swagger.oas.models.media.Schema schema88 = schema49.addProperties("no description", schema81);
        io.swagger.oas.models.media.Schema schema90 = schema49.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema92 = schema49.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema94 = schema38.properties(strMap93);
        schema33.setProperties(strMap93);
        java.lang.Boolean boolean96 = schema33.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean96);
    }

    @Test
    public void test07155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07155");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema17.title("no description");
        java.lang.Boolean boolean21 = schema17.getWriteOnly();
        schema17.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.lang.Integer int32 = schema31.getMinItems();
        schema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema17.addProperties("hi!", schema31);
        schema4.setDefault((java.lang.Object) schema17);
        schema17.setPattern("hi!");
        java.lang.Boolean boolean39 = schema17.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema45 = schema42.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        schema42.setAdditionalProperties(schema52);
        java.math.BigDecimal bigDecimal55 = null;
        schema52.setMaximum(bigDecimal55);
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema52.discriminator(discriminator57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.lang.String str62 = schema61.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        java.lang.String str66 = schema65.get$ref();
        io.swagger.oas.models.media.Schema schema68 = schema65.name("no description");
        schema68.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema61.not(schema68);
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = schema61.getExtensions();
        io.swagger.oas.models.media.Schema schema74 = schema61.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema74.exclusiveMinimum((java.lang.Boolean) false);
        schema58.setDefault((java.lang.Object) schema76);
        java.lang.Boolean boolean78 = schema58.getNullable();
        java.lang.Boolean boolean79 = schema58.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema80 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema82 = strComparableSchema80.maxProperties((java.lang.Integer) 10);
        schema82.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema82.getNot();
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema82.minimum(bigDecimal86);
        java.util.List<java.lang.String> strList88 = schema82.getRequired();
        schema82.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema91 = schema58.not(schema82);
        schema17.setNot(schema82);
        io.swagger.oas.models.media.Schema schema94 = schema82.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = schema94.getExternalDocs();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema94.externalDocs(externalDocumentation96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(externalDocumentation95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test07156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07156");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema32.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema42.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean45 = schema42.getReadOnly();
        io.swagger.oas.models.media.Schema schema47 = schema42.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = schema32.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema51.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema51.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        schema54.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema48.setNot(schema54);
        io.swagger.oas.models.media.Schema schema63 = schema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        schema48.setDiscriminator(discriminator64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema48.maximum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema20.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema48.externalDocs(externalDocumentation69);
        java.math.BigDecimal bigDecimal71 = schema48.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal71);
    }

    @Test
    public void test07157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07157");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema schema46 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema46.writeOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.properties(strMap49);
        io.swagger.oas.models.media.Schema schema52 = schema46.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str53 = schema46.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test07158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07158");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal20 = schema18.getMinimum();
        java.math.BigDecimal bigDecimal21 = null;
        schema18.setMultipleOf(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07159");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.String str7 = strComparableSchema6.getPattern();
        java.lang.Object obj8 = strComparableSchema6.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        schema11.setAdditionalProperties(schema21);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema11.getExtensions();
        io.swagger.oas.models.media.Schema schema26 = schema11.description("");
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema6.additionalProperties(schema26);
        boolean boolean28 = serverListOptional1.equals((java.lang.Object) strComparableSchema6);
        java.lang.Boolean boolean29 = strComparableSchema6.getDeprecated();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema6.minimum(bigDecimal30);
        io.swagger.oas.models.media.Discriminator discriminator32 = schema31.getDiscriminator();
        io.swagger.oas.models.media.XML xML33 = null;
        schema31.setXml(xML33);
        java.lang.Object obj35 = schema31.getExample();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(obj8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test07160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07160");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema7.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int10 = schema7.getMinLength();
        schema7.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test07161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07161");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema25 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema28.title("no description");
        io.swagger.oas.models.media.Schema schema33 = schema19.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema16.not(schema19);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.multipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.title("Optional[[]]");
        io.swagger.oas.models.media.Schema schema40 = schema34.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07162");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema26.getDefault();
        java.math.BigDecimal bigDecimal30 = strComparableSchema26.getMinimum();
        schema20.addExtension("hi!", (java.lang.Object) bigDecimal30);
        schema20.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema20.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema35.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = null;
        schema41.setExtensions(strMap42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = schema46.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional50 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema46);
        java.lang.Integer int51 = schema46.getMinProperties();
        java.math.BigDecimal bigDecimal52 = schema46.getMaximum();
        io.swagger.oas.models.media.Schema schema54 = schema46.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema41.example((java.lang.Object) schema54);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        schema58.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.not(schema61);
        io.swagger.oas.models.media.Schema schema64 = schema58.minLength((java.lang.Integer) 10);
        schema54.setAdditionalProperties(schema64);
        schema54.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema70 = schema35.addProperties("", schema54);
        io.swagger.oas.models.media.Schema schema72 = schema70.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema70.minLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test07163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07163");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.maximum(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.addRequiredItem("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07164");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        schema23.setMinLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema23.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        java.lang.Boolean boolean33 = schema29.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.lang.String str41 = schema40.get$ref();
        io.swagger.oas.models.media.Schema schema43 = schema40.name("no description");
        schema43.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema36.not(schema43);
        io.swagger.oas.models.media.Schema schema47 = schema29.not(schema43);
        io.swagger.oas.models.media.Schema schema49 = schema29.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList50 = schema29.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema54 = schema53.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema56 = schema53.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        java.lang.Integer int64 = schema63.getMinItems();
        schema53.setAdditionalProperties(schema63);
        java.math.BigDecimal bigDecimal66 = null;
        schema63.setMaximum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema69 = schema63.maxProperties((java.lang.Integer) 1);
        schema29.setAdditionalProperties(schema69);
        io.swagger.oas.models.media.Discriminator discriminator71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema29.discriminator(discriminator71);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.multipleOf(bigDecimal73);
        schema23.setDefault((java.lang.Object) schema72);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strComparableList50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test07165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07165");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.math.BigDecimal bigDecimal22 = schema12.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        schema26.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema26.getNot();
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.minimum(bigDecimal30);
        schema26.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema12.addProperties("Optional.empty", schema26);
        schema12.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = schema12.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test07166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07166");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.discriminator(discriminator18);
        schema19.setUniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean22 = schema19.getDeprecated();
        java.lang.String str23 = schema19.getType();
        schema19.setName("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test07167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07167");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int32 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test07168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07168");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        schema16.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema24 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema16.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07169");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema43 = schema36.type("hi!");
        schema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema6.example((java.lang.Object) schema36);
        java.lang.String str47 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema49 = schema6.minItems((java.lang.Integer) 100);
        java.lang.String str50 = schema49.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema49.setDiscriminator(discriminator51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test07170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07170");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Integer int28 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMaximum(bigDecimal36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test07171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07171");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = schema19.not(schema23);
        io.swagger.oas.models.media.Schema schema28 = schema10.additionalProperties(schema23);
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema28);
        java.math.BigDecimal bigDecimal31 = null;
        schema28.setMinimum(bigDecimal31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test07172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07172");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList46 = null;
        schema45.setRequired(strList46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.discriminator(discriminator48);
        schema45.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        schema55.setMinLength((java.lang.Integer) 100);
        java.lang.Integer int60 = schema55.getMaxItems();
        java.lang.Boolean boolean61 = schema55.getDeprecated();
        schema45.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}", (java.lang.Object) schema55);
        schema45.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test07173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07173");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema28 = schema9.addRequiredItem("");
        java.lang.Integer int29 = schema9.getMinProperties();
        schema9.setPattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema9.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07174");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        io.swagger.oas.models.media.Schema schema34 = schema21.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema21.properties(strMap35);
        schema18.setAdditionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema36.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test07175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07175");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        io.swagger.oas.models.media.Schema schema33 = schema23.minItems((java.lang.Integer) 10);
        schema33.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean36 = schema33.getNullable();
        java.math.BigDecimal bigDecimal37 = schema33.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema33.maxLength((java.lang.Integer) (-1));
        schema16.setNot(schema39);
        io.swagger.oas.models.media.Schema schema42 = schema39.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema44 = schema39.maxLength((java.lang.Integer) 0);
        java.lang.String str45 = schema44.getFormat();
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.xml(xML46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07176");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test07177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07177");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        schema40.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.minimum(bigDecimal43);
        java.math.BigDecimal bigDecimal45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.maximum(bigDecimal45);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07178");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean19 = schema18.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal20 = schema18.getMinimum();
        java.lang.Boolean boolean21 = schema18.getDeprecated();
        java.lang.Boolean boolean22 = schema18.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test07179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07179");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        java.lang.String str25 = schema24.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        io.swagger.oas.models.media.Schema schema29 = schema27.format("Optional.empty");
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.xml(xML30);
        schema29.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07180");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema43 = schema36.type("hi!");
        schema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema6.example((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema36.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.not(schema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.lang.Integer int58 = schema57.getMinItems();
        io.swagger.oas.models.media.Schema schema60 = schema57.title("no description");
        io.swagger.oas.models.media.Schema schema62 = schema60.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList64 = strComparableSchema63.getRequired();
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema63.required((java.util.List<java.lang.String>) strList67);
        schema60.setRequired((java.util.List<java.lang.String>) strList67);
        schema60.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema73 = schema48.example((java.lang.Object) (-1));
        schema48.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = schema48.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(externalDocumentation76);
    }

    @Test
    public void test07181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07181");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        java.lang.Object obj8 = null;
        boolean boolean9 = serverListOptional1.equals(obj8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        io.swagger.oas.models.media.Discriminator discriminator17 = schema16.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        schema20.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean23 = schema20.getUniqueItems();
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema20);
        io.swagger.oas.models.media.Schema schema26 = schema16.minItems((java.lang.Integer) 10);
        schema26.setMinLength((java.lang.Integer) 100);
        schema26.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema26.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema36.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.not(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema44.type("no description");
        io.swagger.oas.models.media.Schema schema48 = schema44.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.lang.String str53 = schema52.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.lang.String str57 = schema56.get$ref();
        io.swagger.oas.models.media.Schema schema59 = schema56.name("no description");
        schema59.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema52.not(schema59);
        java.lang.Boolean boolean63 = schema59.getReadOnly();
        java.lang.Boolean boolean64 = schema59.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal65 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema67 = schema59.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.lang.Integer int75 = schema74.getMinItems();
        io.swagger.oas.models.media.Schema schema77 = schema74.title("no description");
        io.swagger.oas.models.media.Schema schema79 = schema77.type("no description");
        io.swagger.oas.models.media.Schema schema81 = schema77.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = schema77.description("no description");
        java.math.BigDecimal bigDecimal84 = null;
        schema83.setMaximum(bigDecimal84);
        java.lang.Boolean boolean86 = schema83.getNullable();
        io.swagger.oas.models.media.Schema schema88 = schema83.exclusiveMaximum((java.lang.Boolean) true);
        schema67.setAdditionalProperties(schema88);
        io.swagger.oas.models.media.Schema schema91 = schema67.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema92 = schema44.addProperties("no description", schema67);
        io.swagger.oas.models.media.Schema schema94 = schema92.writeOnly((java.lang.Boolean) false);
        java.lang.String str95 = schema92.getName();
        io.swagger.oas.models.media.Schema schema96 = schema36.additionalProperties(schema92);
        java.math.BigDecimal bigDecimal97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema36.multipleOf(bigDecimal97);
        boolean boolean99 = serverListOptional1.equals((java.lang.Object) schema98);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertEquals("'" + boolean64 + "' != '" + false + "'", boolean64, false);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test07182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07182");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        boolean boolean7 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        schema30.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean46 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        io.swagger.oas.models.media.Discriminator discriminator63 = schema62.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        schema66.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean69 = schema66.getUniqueItems();
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema66);
        schema66.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema73 = schema54.not(schema66);
        io.swagger.oas.models.media.Schema schema75 = schema73.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema73.exclusiveMinimum((java.lang.Boolean) false);
        schema43.setNot(schema77);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema82 = schema81.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema84 = schema81.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList87 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean88 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean89 = strComparableList87.add((java.lang.Comparable<java.lang.String>) "");
        schema84.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema77.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema30.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList87);
        schema30.setMaxItems((java.lang.Integer) 100);
        java.lang.String str95 = schema30.toString();
        io.swagger.oas.models.media.Schema schema96 = schema23.additionalProperties(schema30);
        java.math.BigDecimal bigDecimal97 = null;
        schema30.setMultipleOf(bigDecimal97);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(discriminator63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str95, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07183");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String[] strArray26 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema18.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = schema18.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema18.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema18.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema18.externalDocs(externalDocumentation35);
        schema36.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema36.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07184");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        schema16.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.not(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema16.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema16.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema16.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setExample((java.lang.Object) schema26);
        java.lang.Boolean boolean28 = schema11.getReadOnly();
        java.lang.Object obj29 = schema11.getExample();
        java.lang.String str30 = schema11.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(obj29);
        org.junit.Assert.assertEquals(obj29.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj29), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj29), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test07185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07185");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML36 = schema31.getXml();
        java.lang.Class<?> wildcardClass37 = schema31.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test07186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07186");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema21.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema35 = schema21.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.multipleOf(bigDecimal36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test07187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07187");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema16.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.not(schema28);
        schema22.setAdditionalProperties(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema33.getNot();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema33.minimum(bigDecimal37);
        schema29.setNot(schema33);
        io.swagger.oas.models.media.XML xML40 = schema29.getXml();
        io.swagger.oas.annotations.Parameter[] parameterArray41 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray41, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray41, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray41, components46);
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional49 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray41, components48);
        io.swagger.oas.models.Components components50 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional51 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray41, components50);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional52 = java.util.Optional.ofNullable(parameterArray41);
        java.util.Optional<io.swagger.oas.annotations.Parameter[]> parameterArrayOptional53 = java.util.Optional.ofNullable(parameterArray41);
        io.swagger.oas.models.media.Schema schema54 = schema29.example((java.lang.Object) parameterArray41);
        java.lang.Class<?> wildcardClass55 = schema54.getClass();
        java.util.Optional<java.lang.reflect.GenericDeclaration> genericDeclarationOptional56 = java.util.Optional.of((java.lang.reflect.GenericDeclaration) wildcardClass55);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(xML40);
        org.junit.Assert.assertNotNull(parameterArray41);
        org.junit.Assert.assertNotNull(parameterListOptional43);
        org.junit.Assert.assertNotNull(parameterListOptional45);
        org.junit.Assert.assertNotNull(parameterListOptional47);
        org.junit.Assert.assertNotNull(parameterListOptional49);
        org.junit.Assert.assertNotNull(parameterListOptional51);
        org.junit.Assert.assertNotNull(parameterArrayOptional52);
        org.junit.Assert.assertNotNull(parameterArrayOptional53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(genericDeclarationOptional56);
    }

    @Test
    public void test07188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07188");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.xml(xML8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Schema schema20 = schema11.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema19.minProperties((java.lang.Integer) 100);
        schema19.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07189");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        boolean boolean17 = schema9.equals((java.lang.Object) 100L);
        io.swagger.oas.models.media.Schema schema19 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setFormat("");
        java.lang.Boolean boolean22 = schema9.getUniqueItems();
        schema9.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.lang.Integer int38 = schema37.getMinItems();
        schema27.setAdditionalProperties(schema37);
        java.lang.String[] strArray43 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = schema37.required((java.util.List<java.lang.String>) strList44);
        java.lang.Object obj47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.example(obj47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList53 = strComparableSchema52.getRequired();
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema52.required((java.util.List<java.lang.String>) strList56);
        schema50.addExtension("#/components/schemas/", (java.lang.Object) strList56);
        io.swagger.oas.models.media.Schema schema61 = schema50.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int62 = schema50.getMinLength();
        schema9.setAdditionalProperties(schema50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
    }

    @Test
    public void test07190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07190");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setNot(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        schema48.setAdditionalProperties(schema58);
        java.lang.String[] strArray64 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema58.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = schema58.name("hi!");
        schema69.setName("no description");
        schema10.setNot(schema69);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema69.multipleOf(bigDecimal73);
        java.lang.Object obj75 = schema74.getExample();
        schema74.setMinLength((java.lang.Integer) 0);
        schema74.setType("");
        java.util.List<java.lang.String> strList80 = null;
        schema74.setRequired(strList80);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(obj75);
    }

    @Test
    public void test07191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07191");
        io.swagger.oas.models.media.Schema<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListSchema0 = new io.swagger.oas.models.media.Schema<java.util.AbstractList<io.swagger.oas.models.servers.Server>>();
        java.lang.Class<?> wildcardClass1 = serverListSchema0.getClass();
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional2 = java.util.Optional.ofNullable(wildcardClass1);
        java.util.Optional<java.lang.Class<?>> wildcardClassOptional3 = java.util.Optional.ofNullable(wildcardClass1);
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional4 = java.util.Optional.ofNullable((java.lang.reflect.AnnotatedElement) wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClassOptional2);
        org.junit.Assert.assertNotNull(wildcardClassOptional3);
        org.junit.Assert.assertNotNull(annotatedElementOptional4);
    }

    @Test
    public void test07192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07192");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) true);
        schema6.setDefault((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        io.swagger.oas.models.media.Schema schema41 = schema38.title("no description");
        java.lang.Boolean boolean42 = schema38.getWriteOnly();
        io.swagger.oas.models.media.Schema schema44 = schema38.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema44.$ref("");
        boolean boolean47 = schema6.equals((java.lang.Object) "");
        io.swagger.oas.models.media.Schema schema49 = schema6.nullable((java.lang.Boolean) false);
        schema6.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test07193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07193");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        java.lang.String str33 = schema30.getType();
        schema30.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema30.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str40 = schema39.getPattern();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxItems((java.lang.Integer) 10);
        schema42.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test07194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07194");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Integer int28 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema30.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07195");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema0.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList10 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean11 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean12 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean13 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean14 = strComparableList10.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema0.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema18.minimum(bigDecimal22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema18.properties(strMap24);
        java.lang.Boolean boolean26 = schema18.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema33.$ref("");
        schema18.setAdditionalProperties(schema41);
        java.lang.String str43 = schema41.getName();
        java.lang.Object obj44 = schema41.getExample();
        io.swagger.oas.models.media.XML xML45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema41.xml(xML45);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.lang.Integer int60 = schema59.getMinItems();
        schema49.setAdditionalProperties(schema59);
        io.swagger.oas.models.media.Schema schema62 = schema46.not(schema59);
        io.swagger.oas.models.media.XML xML63 = null;
        schema46.setXml(xML63);
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema0.not(schema46);
        java.lang.Integer int66 = strComparableSchema0.getMaxProperties();
        java.lang.Boolean boolean67 = strComparableSchema0.getWriteOnly();
        strComparableSchema0.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(boolean67);
    }

    @Test
    public void test07196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07196");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Schema schema34 = schema5.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.lang.Integer int49 = schema48.getMinItems();
        schema38.setAdditionalProperties(schema48);
        java.math.BigDecimal bigDecimal51 = null;
        schema48.setMaximum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema56 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema5.addProperties("no description", schema48);
        java.lang.String str58 = schema57.get$ref();
        io.swagger.oas.models.media.Schema schema60 = schema57.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal61 = schema57.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(bigDecimal61);
    }

    @Test
    public void test07197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07197");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        boolean boolean7 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.lang.Integer int15 = schema14.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema14.title("no description");
        java.lang.Boolean boolean18 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema14.nullable((java.lang.Boolean) true);
        java.lang.String str21 = schema20.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) schema23);
        boolean boolean25 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        schema46.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean49 = schema46.getReadOnly();
        io.swagger.oas.models.media.Schema schema51 = schema46.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema52 = schema36.not(schema46);
        boolean boolean53 = serverListOptional1.equals((java.lang.Object) schema36);
        java.lang.String str54 = serverListOptional1.toString();
        boolean boolean55 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Optional.empty" + "'", str54, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test07198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07198");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Integer int28 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema32.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema43 = schema39.title("no description");
        io.swagger.oas.models.media.Schema schema45 = schema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str46 = schema45.getTitle();
        java.lang.String str47 = schema45.getType();
        schema36.setNot(schema45);
        io.swagger.oas.models.media.Schema schema50 = schema36.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "no description" + "'", str46, "no description");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07199");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.xml(xML7);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test07200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07200");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema5.discriminator(discriminator8);
        io.swagger.oas.models.media.Schema schema11 = schema5.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema11.getEnum();
        java.lang.Boolean boolean13 = schema11.getNullable();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList14 = schema11.getEnum();
        io.swagger.oas.models.media.Schema schema16 = schema11.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema17.pattern("no description");
        strComparableSchema17.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema17.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema27 = schema16.additionalProperties(schema25);
        java.lang.Boolean boolean28 = schema16.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNull(strComparableList14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test07201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07201");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema14.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str17 = schema14.getTitle();
        io.swagger.oas.models.media.Schema schema19 = schema14.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema14.getNot();
        schema20.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema20.$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema20.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema20.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07202");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.maximum(bigDecimal40);
        java.math.BigDecimal bigDecimal42 = null;
        schema41.setMaximum(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema41.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema47 = schema45.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema47.description("#/components/schemas/hi!");
        io.swagger.oas.models.media.Schema schema51 = schema47.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test07203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07203");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        strComparableSchema8.setDiscriminator(discriminator18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07204");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema10.name("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int17 = schema10.getMaxItems();
        java.lang.Class<?> wildcardClass18 = schema10.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test07205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07205");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema31 = schema25.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 1);
        java.lang.String str34 = schema33.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test07206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07206");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema24.minItems((java.lang.Integer) 10);
        schema34.setMinLength((java.lang.Integer) 100);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema34.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = schema2.addProperties("no description", schema34);
        io.swagger.oas.models.media.Schema schema43 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test07207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07207");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        java.lang.String str14 = schema12.get$ref();
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.xml(xML15);
        io.swagger.oas.models.media.XML xML17 = null;
        schema12.setXml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema12.minLength((java.lang.Integer) 10);
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj24 = strComparableSchema23.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema23.properties(strMap25);
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema23.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList33 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean34 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean35 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean36 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean37 = strComparableList33.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema23.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        schema12.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList33);
        io.swagger.oas.models.media.Schema schema41 = schema12.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test07208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07208");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        java.lang.String str9 = schema2.toString();
        java.lang.Integer int10 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema14 = schema13.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema16 = schema13.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.lang.Integer int24 = schema23.getMinItems();
        schema13.setAdditionalProperties(schema23);
        java.lang.String[] strArray29 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        io.swagger.oas.models.media.Schema schema32 = schema23.required((java.util.List<java.lang.String>) strList30);
        java.lang.Object obj33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.example(obj33);
        io.swagger.oas.models.media.Schema schema36 = schema32.$ref("no description");
        io.swagger.oas.models.media.Schema schema38 = schema36.deprecated((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema36);
        java.lang.String str40 = schema36.toString();
        schema36.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str40, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
    }

    @Test
    public void test07209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07209");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        java.lang.Object obj13 = schema6.getExample();
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        schema6.setDiscriminator(discriminator14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNull(obj13);
    }

    @Test
    public void test07210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07210");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.lang.String str11 = schema10.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema schema17 = schema14.name("no description");
        schema17.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema10.not(schema17);
        java.lang.Boolean boolean21 = schema17.getReadOnly();
        java.lang.Boolean boolean22 = schema17.getExclusiveMinimum();
        java.lang.Integer int23 = schema17.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema27.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional31 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema27);
        java.lang.Integer int32 = schema27.getMinProperties();
        java.math.BigDecimal bigDecimal33 = schema27.getMaximum();
        io.swagger.oas.models.media.Schema schema34 = schema17.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList39 = schema37.getEnum();
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        io.swagger.oas.models.media.Schema schema49 = schema47.pattern("");
        java.lang.Integer int50 = schema49.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema55 = schema54.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema57 = schema54.format("no description");
        schema57.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema66.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        schema70.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean73 = schema70.getUniqueItems();
        io.swagger.oas.models.media.Schema schema74 = schema66.not(schema70);
        io.swagger.oas.models.media.Schema schema75 = schema57.additionalProperties(schema70);
        java.lang.String str76 = schema70.getFormat();
        java.lang.Integer int77 = schema70.getMinProperties();
        schema49.addExtension("hi!", (java.lang.Object) int77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema49.getExtensions();
        schema41.setExtensions(strMap79);
        schema27.setExtensions(strMap79);
        schema2.setExtensions(strMap79);
        io.swagger.oas.models.media.Schema schema84 = schema2.format("Optional.empty");
        schema84.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema88 = schema84.maxItems((java.lang.Integer) 10);
        java.lang.Boolean boolean89 = schema84.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema84.discriminator(discriminator90);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertEquals("'" + boolean22 + "' != '" + false + "'", boolean22, false);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(bigDecimal33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNull(strComparableList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test07211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07211");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) 10);
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = null;
        schema20.setMultipleOf(bigDecimal23);
        java.math.BigDecimal bigDecimal25 = null;
        schema20.setMaximum(bigDecimal25);
        schema20.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07212");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int5 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
    }

    @Test
    public void test07213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07213");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        io.swagger.oas.models.media.Schema schema55 = schema52.title("no description");
        java.lang.Boolean boolean56 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema52.$ref("");
        java.lang.String str61 = schema52.get$ref();
        schema2.setExample((java.lang.Object) schema52);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema52.maximum(bigDecimal63);
        java.lang.Integer int65 = schema52.getMinProperties();
        java.math.BigDecimal bigDecimal66 = schema52.getMultipleOf();
        io.swagger.oas.models.media.Schema schema68 = schema52.name("");
        java.lang.Integer int69 = schema68.getMinItems();
        schema68.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
    }

    @Test
    public void test07214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07214");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema28 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.lang.Boolean boolean35 = schema31.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        schema31.setProperties(strMap36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema31.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList55 = schema50.getEnum();
        io.swagger.oas.models.media.Schema schema57 = schema50.type("hi!");
        schema50.setType("#/components/schemas/");
        schema31.setAdditionalProperties(schema50);
        io.swagger.oas.models.media.Schema schema62 = schema31.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.maximum(bigDecimal63);
        java.lang.Integer int65 = schema62.getMinItems();
        java.math.BigDecimal bigDecimal66 = schema62.getMultipleOf();
        io.swagger.oas.models.media.Schema schema67 = schema9.example((java.lang.Object) bigDecimal66);
        schema67.setTitle("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema67.setWriteOnly((java.lang.Boolean) false);
        schema67.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strComparableList55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07215");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        schema25.setExternalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        schema33.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        io.swagger.oas.models.media.Discriminator discriminator43 = schema42.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        schema46.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean49 = schema46.getUniqueItems();
        io.swagger.oas.models.media.Schema schema50 = schema42.not(schema46);
        io.swagger.oas.models.media.Schema schema51 = schema33.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema53 = schema46.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.lang.Integer int67 = schema66.getMinItems();
        schema56.setAdditionalProperties(schema66);
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.discriminator(discriminator69);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.properties(strMap74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        io.swagger.oas.models.media.Discriminator discriminator78 = schema77.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        schema81.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean84 = schema81.getUniqueItems();
        io.swagger.oas.models.media.Schema schema85 = schema77.not(schema81);
        io.swagger.oas.models.media.Schema schema87 = schema77.minItems((java.lang.Integer) 10);
        schema87.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean90 = schema87.getNullable();
        java.math.BigDecimal bigDecimal91 = schema87.getMaximum();
        io.swagger.oas.models.media.Schema schema93 = schema87.maxLength((java.lang.Integer) (-1));
        schema70.setNot(schema93);
        io.swagger.oas.models.media.Schema schema95 = schema53.additionalProperties(schema70);
        io.swagger.oas.models.media.XML xML96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema53.xml(xML96);
        io.swagger.oas.models.media.Schema schema98 = schema25.not(schema97);
        io.swagger.oas.models.media.Discriminator discriminator99 = schema25.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(discriminator78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(boolean90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(discriminator99);
    }

    @Test
    public void test07216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07216");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.String[] strArray11 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        schema5.setRequired((java.util.List<java.lang.String>) strList12);
        java.math.BigDecimal bigDecimal15 = null;
        schema5.setMinimum(bigDecimal15);
        schema5.setDescription("no description");
        io.swagger.oas.models.media.Schema schema20 = schema5.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("#/components/schemas/hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema22.setExternalDocs(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07217");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML31 = schema28.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.lang.Integer int45 = schema44.getMinItems();
        schema34.setAdditionalProperties(schema44);
        java.lang.String[] strArray50 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        io.swagger.oas.models.media.Schema schema53 = schema44.required((java.util.List<java.lang.String>) strList51);
        schema44.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema44.addRequiredItem("no description");
        schema57.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema57.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema62 = schema28.additionalProperties(schema57);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        schema57.setExternalDocs(externalDocumentation63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(xML31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test07218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07218");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str46 = schema45.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test07219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07219");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema schema16 = schema2.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int17 = schema16.getMaxLength();
        schema16.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal20 = null;
        schema16.setMinimum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test07220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07220");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList28 = strComparableSchema27.getRequired();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema27.required((java.util.List<java.lang.String>) strList31);
        schema25.addExtension("#/components/schemas/", (java.lang.Object) strList31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        schema37.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema37.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional41 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        schema37.setNot(schema47);
        io.swagger.oas.models.media.Schema schema50 = schema37.description("hi!");
        schema37.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema55 = schema25.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema25.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = schema25.minProperties((java.lang.Integer) 100);
        schema25.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test07221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07221");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Boolean boolean5 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema7 = schema2.$ref("");
        io.swagger.oas.models.media.Schema schema9 = schema2.name("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.discriminator(discriminator10);
        schema2.setPattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        schema16.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema16.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional20 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema16);
        java.lang.Boolean boolean21 = schema16.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema16.xml(xML22);
        schema16.setDescription("");
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema16.multipleOf(bigDecimal26);
        io.swagger.oas.annotations.media.Content[] contentArray28 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray28, components35);
        io.swagger.oas.models.media.Schema schema37 = schema27.example((java.lang.Object) contentArray28);
        io.swagger.oas.models.media.Schema schema39 = schema27.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema2.example((java.lang.Object) schema27);
        schema2.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int43 = schema2.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(contentArray28);
        org.junit.Assert.assertNotNull(contentOptional30);
        org.junit.Assert.assertNotNull(contentOptional32);
        org.junit.Assert.assertNotNull(contentOptional34);
        org.junit.Assert.assertNotNull(contentOptional36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test07222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07222");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        java.lang.String str27 = schema18.getName();
        io.swagger.oas.models.media.Schema schema29 = schema18.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        java.lang.Integer int47 = schema42.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.lang.Integer int61 = schema60.getMinItems();
        schema50.setAdditionalProperties(schema60);
        java.lang.String[] strArray66 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        io.swagger.oas.models.media.Schema schema69 = schema60.required((java.util.List<java.lang.String>) strList67);
        schema42.setRequired((java.util.List<java.lang.String>) strList67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema74 = schema73.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema76 = schema73.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema77 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema79 = strComparableSchema77.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.properties(strMap80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.properties(strMap82);
        java.lang.Integer int84 = schema83.getMinItems();
        schema73.setAdditionalProperties(schema83);
        java.math.BigDecimal bigDecimal86 = null;
        schema83.setMaximum(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = schema83.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema90 = schema42.example((java.lang.Object) schema83);
        io.swagger.oas.models.media.Discriminator discriminator91 = null;
        schema90.setDiscriminator(discriminator91);
        io.swagger.oas.models.media.Schema schema93 = schema18.not(schema90);
        io.swagger.oas.models.media.Schema schema95 = schema93.writeOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean96 = schema93.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(boolean96);
    }

    @Test
    public void test07223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07223");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = schema4.not(schema13);
        java.lang.Integer int20 = schema19.getMinLength();
        schema19.setDescription("no description");
        java.lang.Boolean boolean23 = schema19.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.maximum(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema25.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema25.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07224");
        java.util.Optional<java.lang.String> strOptional1 = java.util.Optional.ofNullable("hi!");
        org.junit.Assert.assertNotNull(strOptional1);
    }

    @Test
    public void test07225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07225");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema schema19 = schema12.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema19.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema19.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema25 = schema23.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test07226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07226");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema25.setDiscriminator(discriminator36);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema41.title("no description");
        io.swagger.oas.models.media.Schema schema47 = schema41.minLength((java.lang.Integer) 0);
        schema47.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema47.type("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema47.description("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.lang.String str57 = schema56.get$ref();
        io.swagger.oas.models.media.Schema schema59 = schema56.name("no description");
        java.math.BigDecimal bigDecimal60 = null;
        schema56.setMaximum(bigDecimal60);
        schema56.setExample((java.lang.Object) 1L);
        schema47.setNot(schema56);
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema25.getProperties();
        schema25.setFormat("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema25.maxLength((java.lang.Integer) 0);
        schema70.setType("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str73 = schema70.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str73, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07227");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        schema2.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema18 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07228");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.format("");
        schema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema2.getWriteOnly();
        java.lang.String str15 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema17 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema2.setExternalDocs(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07229");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        java.lang.Boolean boolean46 = schema18.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema18.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema18.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test07230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07230");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        schema38.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema26.not(schema38);
        java.lang.String str46 = schema38.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.lang.String str50 = schema49.get$ref();
        io.swagger.oas.models.media.Schema schema52 = schema49.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator53 = schema49.getDiscriminator();
        boolean boolean54 = schema38.equals((java.lang.Object) discriminator53);
        schema38.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema38.minimum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema38.addRequiredItem("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.lang.String str65 = schema64.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema66.maxProperties((java.lang.Integer) 10);
        java.lang.String str69 = schema68.get$ref();
        io.swagger.oas.models.media.Schema schema71 = schema68.name("no description");
        schema71.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema64.not(schema71);
        java.lang.Boolean boolean75 = schema71.getReadOnly();
        java.lang.Boolean boolean76 = schema71.getExclusiveMinimum();
        java.lang.Integer int77 = schema71.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema79 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema81 = strComparableSchema79.maxProperties((java.lang.Integer) 10);
        schema81.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema84 = schema81.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional85 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema81);
        java.lang.Integer int86 = schema81.getMinProperties();
        java.math.BigDecimal bigDecimal87 = schema81.getMaximum();
        io.swagger.oas.models.media.Schema schema88 = schema71.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema81);
        io.swagger.oas.models.media.Schema schema90 = schema88.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema92 = schema90.exclusiveMinimum((java.lang.Boolean) true);
        schema60.addExtension("", (java.lang.Object) schema90);
        io.swagger.oas.models.media.Schema schema95 = schema60.pattern("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema96 = schema18.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema95);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList97 = schema95.getEnum();
        io.swagger.oas.models.media.Schema schema99 = schema95.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertEquals("'" + boolean76 + "' != '" + false + "'", boolean76, false);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(schema84);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNull(bigDecimal87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(strComparableList97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test07231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07231");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        java.lang.Boolean boolean10 = schema2.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema17.title("no description");
        java.lang.Boolean boolean21 = schema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema17.$ref("");
        schema2.setAdditionalProperties(schema25);
        java.lang.String str27 = schema25.getName();
        java.lang.Object obj28 = schema25.getExample();
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.xml(xML29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema33.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        schema33.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Schema schema46 = schema30.not(schema43);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema30.xml(xML47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07232");
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(linkArrayOptional0);
    }

    @Test
    public void test07233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07233");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList17 = schema2.getEnum();
        schema2.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema2.format("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema21.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strComparableList17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07234");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema8.description("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema8.type("no description");
        schema8.setName("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema23.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional27 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        schema23.setNot(schema33);
        schema23.setNullable((java.lang.Boolean) false);
        schema20.setAdditionalProperties(schema23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema23.getProperties();
        io.swagger.oas.models.media.Schema schema40 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal41 = schema23.getMaximum();
        java.lang.Integer int42 = schema23.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test07235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07235");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        schema16.setMinLength((java.lang.Integer) 1);
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07236");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Boolean boolean30 = schema29.getUniqueItems();
        java.lang.Boolean boolean31 = schema29.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(boolean31);
    }

    @Test
    public void test07237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07237");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.XML xML7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.xml(xML7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        schema14.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema27.getUniqueItems();
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema27);
        io.swagger.oas.models.media.Schema schema32 = schema14.additionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema34 = schema27.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema37.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema40 = schema37.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.lang.Integer int48 = schema47.getMinItems();
        schema37.setAdditionalProperties(schema47);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.discriminator(discriminator50);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        schema62.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean65 = schema62.getUniqueItems();
        io.swagger.oas.models.media.Schema schema66 = schema58.not(schema62);
        io.swagger.oas.models.media.Schema schema68 = schema58.minItems((java.lang.Integer) 10);
        schema68.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean71 = schema68.getNullable();
        java.math.BigDecimal bigDecimal72 = schema68.getMaximum();
        io.swagger.oas.models.media.Schema schema74 = schema68.maxLength((java.lang.Integer) (-1));
        schema51.setNot(schema74);
        io.swagger.oas.models.media.Schema schema76 = schema34.additionalProperties(schema51);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.xml(xML77);
        schema76.set$ref("#/components/schemas/no description");
        java.lang.Integer int81 = schema76.getMinItems();
        io.swagger.oas.models.media.Schema schema83 = schema76.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema84 = schema8.example((java.lang.Object) schema76);
        java.lang.Boolean boolean85 = schema76.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema87 = schema76.minLength((java.lang.Integer) (-1));
        java.lang.String str88 = schema76.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(bigDecimal72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test07238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07238");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema25.getAdditionalProperties();
        java.lang.Integer int30 = schema25.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNull(int30);
    }

    @Test
    public void test07239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07239");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        schema23.setNullable((java.lang.Boolean) false);
        schema23.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema29 = schema23.type("Optional.empty");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean52 = schema49.getUniqueItems();
        io.swagger.oas.models.media.Schema schema53 = schema45.not(schema49);
        schema49.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema37.not(schema49);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.uniqueItems((java.lang.Boolean) true);
        schema37.setDefault((java.lang.Object) schema61);
        schema61.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema29.addProperties("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        io.swagger.oas.models.media.XML xML66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.xml(xML66);
        schema65.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test07240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07240");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        java.lang.Integer int15 = schema6.getMinItems();
        io.swagger.oas.models.media.XML xML16 = schema6.getXml();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        schema19.setAdditionalProperties(schema29);
        java.lang.String[] strArray35 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        io.swagger.oas.models.media.Schema schema38 = schema29.required((java.util.List<java.lang.String>) strList36);
        java.lang.String str39 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema41 = schema29.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema6.additionalProperties(schema41);
        java.lang.Integer int43 = schema41.getMinItems();
        schema41.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(xML16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test07241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07241");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema4.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema4.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        java.math.BigDecimal bigDecimal17 = null;
        schema13.setMaximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema19 = schema4.not(schema13);
        io.swagger.oas.models.media.Schema schema21 = schema13.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema13.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema27 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema29 = schema26.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        io.swagger.oas.models.media.Schema schema33 = schema29.readOnly((java.lang.Boolean) true);
        schema29.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema36 = schema13.example((java.lang.Object) schema29);
        java.lang.Boolean boolean37 = schema29.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test07242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07242");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        java.lang.String str38 = schema6.getName();
        io.swagger.oas.models.media.Schema schema40 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema6.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema6.discriminator(discriminator42);
        java.lang.Integer int44 = schema6.getMaxLength();
        java.lang.Boolean boolean45 = schema6.getDeprecated();
        java.math.BigDecimal bigDecimal46 = schema6.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test07243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07243");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        io.swagger.oas.models.media.Schema schema19 = schema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.not(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema26.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        schema31.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.properties(strMap47);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        io.swagger.oas.models.media.Discriminator discriminator51 = schema50.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        schema62.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean65 = schema62.getUniqueItems();
        io.swagger.oas.models.media.Schema schema66 = schema58.not(schema62);
        schema62.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema69 = schema50.not(schema62);
        io.swagger.oas.models.media.Schema schema71 = schema69.deprecated((java.lang.Boolean) false);
        schema31.setAdditionalProperties(schema69);
        io.swagger.oas.models.media.Schema schema74 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema75.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.properties(strMap80);
        java.lang.Integer int82 = schema81.getMinItems();
        io.swagger.oas.models.media.Schema schema84 = schema81.title("no description");
        java.lang.Boolean boolean85 = schema81.getWriteOnly();
        io.swagger.oas.models.media.Schema schema87 = schema81.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema89 = schema81.$ref("");
        java.lang.String str90 = schema81.get$ref();
        schema31.setExample((java.lang.Object) schema81);
        schema28.setExample((java.lang.Object) schema81);
        java.lang.Integer int93 = schema81.getMaxLength();
        io.swagger.oas.models.media.Schema schema94 = schema19.additionalProperties(schema81);
        java.math.BigDecimal bigDecimal95 = schema81.getMultipleOf();
        schema81.setExclusiveMaximum((java.lang.Boolean) true);
        schema81.set$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "#/components/schemas/" + "'", str90, "#/components/schemas/");
        org.junit.Assert.assertNull(int93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(bigDecimal95);
    }

    @Test
    public void test07244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07244");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = null;
        schema15.setAdditionalProperties(schema20);
        java.lang.Integer int22 = schema15.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int22);
    }

    @Test
    public void test07245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07245");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("hi!");
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        java.lang.Boolean boolean28 = schema26.getReadOnly();
        io.swagger.oas.models.media.Schema schema30 = schema26.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema33.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        schema33.setAdditionalProperties(schema43);
        java.lang.String[] strArray49 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema43.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema schema54 = schema43.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean55 = schema54.getReadOnly();
        boolean boolean56 = schema30.equals((java.lang.Object) schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test07246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07246");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        java.lang.String str80 = schema79.getTitle();
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema79.multipleOf(bigDecimal81);
        java.math.BigDecimal bigDecimal83 = null;
        schema82.setMinimum(bigDecimal83);
        schema82.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test07247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07247");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional1 = java.util.Optional.of(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        boolean boolean3 = serverListOptional2.isPresent();
        java.lang.String str4 = serverListOptional2.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.properties(strMap8);
        java.lang.Integer int10 = schema9.getMinLength();
        io.swagger.oas.models.media.Schema schema12 = schema9.maxItems((java.lang.Integer) 10);
        boolean boolean13 = serverListOptional2.equals((java.lang.Object) schema12);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverArrayOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test07248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07248");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        schema18.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.name("no description");
        io.swagger.oas.models.media.Schema schema33 = schema28.minLength((java.lang.Integer) 100);
        java.lang.String str34 = schema33.getPattern();
        io.swagger.oas.models.media.Schema schema35 = schema18.additionalProperties(schema33);
        java.math.BigDecimal bigDecimal36 = null;
        schema33.setMaximum(bigDecimal36);
        java.math.BigDecimal bigDecimal38 = null;
        schema33.setMinimum(bigDecimal38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema33.properties(strMap40);
        schema41.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test07249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07249");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema6.xml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema6.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema6.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema6.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07250");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema24.minItems((java.lang.Integer) 10);
        schema34.setMinLength((java.lang.Integer) 100);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema34.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = schema2.addProperties("no description", schema34);
        io.swagger.oas.models.media.Schema schema43 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str46 = schema45.getType();
        schema45.setType("no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test07251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07251");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema28 = schema2.minItems((java.lang.Integer) 0);
        java.lang.String str29 = schema2.getTitle();
        io.swagger.oas.models.media.Schema schema31 = schema2.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07252");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setTitle("");
        io.swagger.oas.models.media.Schema schema21 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema23 = schema12.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema12.getDiscriminator();
        java.lang.String str25 = schema12.get$ref();
        java.math.BigDecimal bigDecimal26 = null;
        schema12.setMultipleOf(bigDecimal26);
        java.lang.Boolean boolean28 = schema12.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test07253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07253");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        schema30.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean33 = schema30.getUniqueItems();
        io.swagger.oas.models.media.Schema schema34 = schema26.not(schema30);
        schema30.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema37 = schema18.not(schema30);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.lang.Integer int46 = schema45.getMinItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("no description");
        io.swagger.oas.models.media.Schema schema50 = schema48.type("no description");
        io.swagger.oas.models.media.Schema schema52 = schema48.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema54 = schema48.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        io.swagger.oas.models.media.Discriminator discriminator62 = schema61.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean68 = schema65.getUniqueItems();
        io.swagger.oas.models.media.Schema schema69 = schema61.not(schema65);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema73 = schema72.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema75 = schema72.format("no description");
        schema75.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema78 = schema61.not(schema75);
        io.swagger.oas.models.media.Schema schema80 = schema61.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray85 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        schema80.setRequired((java.util.List<java.lang.String>) strList86);
        schema48.setRequired((java.util.List<java.lang.String>) strList86);
        schema37.setRequired((java.util.List<java.lang.String>) strList86);
        io.swagger.oas.models.media.Schema schema91 = schema11.additionalProperties(schema37);
        java.lang.Boolean boolean92 = schema11.getExclusiveMaximum();
        java.lang.Object obj93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema11.example(obj93);
        java.lang.String str95 = schema11.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(discriminator62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(str95);
    }

    @Test
    public void test07254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07254");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema22.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal37 = null;
        schema22.setMinimum(bigDecimal37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        schema22.setProperties(strMap39);
        io.swagger.oas.models.media.Schema schema42 = schema22.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema22.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema46.readOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.minimum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema50.maxItems((java.lang.Integer) 10);
        java.lang.Integer int53 = schema52.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test07255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07255");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setNot(schema44);
        io.swagger.oas.models.media.Schema schema47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema51.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema51.format("no description");
        schema54.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.properties(strMap60);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.properties(strMap62);
        io.swagger.oas.models.media.Discriminator discriminator64 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        schema67.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean70 = schema67.getUniqueItems();
        io.swagger.oas.models.media.Schema schema71 = schema63.not(schema67);
        io.swagger.oas.models.media.Schema schema72 = schema54.additionalProperties(schema67);
        java.lang.String[] strArray75 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        schema67.setRequired((java.util.List<java.lang.String>) strList76);
        io.swagger.oas.models.media.Schema schema79 = schema48.required((java.util.List<java.lang.String>) strList76);
        java.util.Optional<java.lang.Cloneable> cloneableOptional80 = java.util.Optional.ofNullable((java.lang.Cloneable) strList76);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(cloneableOptional80);
    }

    @Test
    public void test07256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07256");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema18.not(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema2.example((java.lang.Object) schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema31.getProperties();
        java.lang.Boolean boolean33 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.name("no description");
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int42 = schema39.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMinItems();
        schema45.setAdditionalProperties(schema55);
        java.math.BigDecimal bigDecimal58 = null;
        schema55.setMinimum(bigDecimal58);
        java.lang.Boolean boolean60 = schema55.getDeprecated();
        schema39.setDefault((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema63 = schema55.minItems((java.lang.Integer) 100);
        schema55.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = schema69.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = schema74.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema77 = schema74.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema78.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.properties(strMap81);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.properties(strMap83);
        java.lang.Integer int85 = schema84.getMinItems();
        schema74.setAdditionalProperties(schema84);
        java.math.BigDecimal bigDecimal87 = null;
        schema84.setMaximum(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = schema84.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int91 = schema84.getMaxLength();
        io.swagger.oas.models.media.Schema schema92 = schema71.not(schema84);
        io.swagger.oas.models.media.Schema schema93 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema71);
        io.swagger.oas.models.media.Schema schema94 = schema31.example((java.lang.Object) schema71);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test07257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07257");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int8 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean13 = schema10.getWriteOnly();
        schema10.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test07258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07258");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        schema30.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("no description");
        strComparableSchema37.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema37.minItems((java.lang.Integer) 0);
        java.lang.Integer int46 = strComparableSchema37.getMinProperties();
        schema36.setExample((java.lang.Object) int46);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema36.xml(xML48);
        io.swagger.oas.models.media.XML xML50 = schema49.getXml();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.discriminator(discriminator51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema49.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(strMap53);
    }

    @Test
    public void test07259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07259");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        schema29.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema17.not(schema29);
        schema10.setExample((java.lang.Object) schema17);
        java.lang.Integer int38 = schema17.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.math.BigDecimal bigDecimal46 = null;
        schema43.setMultipleOf(bigDecimal46);
        java.lang.Boolean boolean48 = schema43.getReadOnly();
        java.lang.Boolean boolean49 = schema43.getExclusiveMaximum();
        schema17.setNot(schema43);
        java.math.BigDecimal bigDecimal51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema17.minimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.addProperties("Optional.empty", schema54);
        io.swagger.oas.models.media.Schema schema57 = schema52.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema59 = schema52.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema59.xml(xML60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test07260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07260");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        schema27.setName("");
        schema27.setMinProperties((java.lang.Integer) 1);
        java.lang.Integer int33 = schema27.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test07261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07261");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str3 = serverListOptional2.toString();
        java.lang.String str4 = serverListOptional2.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Optional.empty" + "'", str3, "Optional.empty");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Optional.empty" + "'", str4, "Optional.empty");
    }

    @Test
    public void test07262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07262");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.not(schema5);
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str12 = schema11.getFormat();
        java.lang.Boolean boolean13 = schema11.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test07263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07263");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        java.lang.String str26 = schema23.getDescription();
        schema23.setMaxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.minimum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema23.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.properties(strMap33);
        io.swagger.oas.models.media.Schema schema36 = schema23.type("hi!");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 10);
        schema36.setMinItems((java.lang.Integer) 0);
        schema36.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07264");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        java.lang.Integer int62 = schema57.getMaxItems();
        java.lang.Boolean boolean63 = schema57.getUniqueItems();
        java.math.BigDecimal bigDecimal64 = schema57.getMaximum();
        io.swagger.oas.annotations.links.LinkParameters linkParameters66 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap67 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameters66);
        java.util.Optional<java.util.Map<java.lang.String, java.lang.String>> strMapOptional68 = java.util.Optional.of(strMap67);
        schema57.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap67);
        java.util.Optional<java.util.Map<java.lang.String, java.lang.String>> strMapOptional70 = java.util.Optional.of(strMap67);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMapOptional68);
        org.junit.Assert.assertNotNull(strMapOptional70);
    }

    @Test
    public void test07265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07265");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema10.setNot(schema44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        schema48.setAdditionalProperties(schema58);
        java.lang.String[] strArray64 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema58.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema69 = schema58.name("hi!");
        schema69.setName("no description");
        schema10.setNot(schema69);
        java.math.BigDecimal bigDecimal73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema69.multipleOf(bigDecimal73);
        java.lang.Object obj75 = schema74.getExample();
        schema74.setMinLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema74.minimum(bigDecimal78);
        java.lang.Boolean boolean80 = schema79.getReadOnly();
        schema79.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str83 = schema79.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(obj75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "no description" + "'", str83, "no description");
    }

    @Test
    public void test07266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07266");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.maximum(bigDecimal34);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.xml(xML36);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.discriminator(discriminator38);
        schema39.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema43 = schema39.format("no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07267");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema schema27 = schema23.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema23.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07268");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        schema38.setNullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema38.getProperties();
        io.swagger.oas.models.media.Schema schema43 = schema38.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        java.math.BigDecimal bigDecimal59 = null;
        schema56.setMaximum(bigDecimal59);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema56.discriminator(discriminator61);
        java.lang.Integer int63 = schema56.getMaxLength();
        io.swagger.oas.models.media.Schema schema65 = schema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema56.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema schema69 = schema56.$ref("");
        java.lang.Boolean boolean70 = schema56.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema56.maximum(bigDecimal71);
        io.swagger.oas.models.media.Schema schema73 = schema43.example((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema schema75 = schema43.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test07269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07269");
        java.lang.String[] strArray1 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.lang.String[]> strArrayOptional5 = java.util.Optional.ofNullable(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertNotNull(tagSetOptional2);
        org.junit.Assert.assertNotNull(tagSetOptional3);
        org.junit.Assert.assertNotNull(tagSetOptional4);
        org.junit.Assert.assertNotNull(strArrayOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
    }

    @Test
    public void test07270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07270");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema21.$ref("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        schema30.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema30.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema25.example((java.lang.Object) 0);
        io.swagger.oas.models.media.Schema schema39 = schema25.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema40 = schema25.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
    }

    @Test
    public void test07271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07271");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional4 = java.util.Optional.of(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        boolean boolean12 = serverListOptional7.isPresent();
        java.lang.String str13 = serverListOptional7.toString();
        boolean boolean14 = serverListOptional7.isPresent();
        io.swagger.oas.annotations.servers.Server server15 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray16 = new io.swagger.oas.annotations.servers.Server[] { server15 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray16);
        io.swagger.oas.annotations.servers.Server[] serverArray19 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray19);
        io.swagger.oas.models.servers.Server[] serverArray21 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList22 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList22, serverArray21);
        java.util.List<io.swagger.oas.models.servers.Server> serverList24 = serverListOptional20.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList22);
        boolean boolean25 = serverListOptional20.isPresent();
        boolean boolean26 = serverListOptional20.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        java.lang.String str40 = schema39.getPattern();
        io.swagger.oas.models.media.Schema schema42 = schema39.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean43 = serverListOptional20.equals((java.lang.Object) schema42);
        boolean boolean44 = serverListOptional20.isPresent();
        java.lang.String str45 = serverListOptional20.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray46 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional47 = io.swagger.jaxrs2.OperationParser.getServers(serverArray46);
        io.swagger.oas.models.servers.Server[] serverArray48 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList49 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList49, serverArray48);
        java.util.List<io.swagger.oas.models.servers.Server> serverList51 = serverListOptional47.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList49);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional52 = java.util.Optional.ofNullable(serverList51);
        java.util.List<io.swagger.oas.models.servers.Server> serverList53 = serverListOptional20.orElse(serverList51);
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional18.orElse(serverList51);
        java.util.List<io.swagger.oas.models.servers.Server> serverList55 = serverListOptional7.orElse(serverList51);
        boolean boolean56 = serverListOptional5.equals((java.lang.Object) serverList55);
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverArrayOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional.empty" + "'", str13, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serverArray16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertNotNull(serverListOptional18);
        org.junit.Assert.assertNotNull(serverArray19);
        org.junit.Assert.assertNotNull(serverListOptional20);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(serverList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Optional.empty" + "'", str45, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray46);
        org.junit.Assert.assertNotNull(serverListOptional47);
        org.junit.Assert.assertNotNull(serverArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(serverList51);
        org.junit.Assert.assertNotNull(serverListOptional52);
        org.junit.Assert.assertNotNull(serverList53);
        org.junit.Assert.assertNotNull(serverList54);
        org.junit.Assert.assertNotNull(serverList55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test07272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07272");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.Integer int10 = schema5.getMinLength();
        io.swagger.oas.models.media.Schema schema12 = schema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema14 = schema12.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.nullable((java.lang.Boolean) false);
        java.lang.Object obj17 = schema14.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
    }

    @Test
    public void test07273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07273");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        schema2.setExtensions(strMap3);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        schema7.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema7.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional11 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema7);
        java.lang.Integer int12 = schema7.getMinProperties();
        java.math.BigDecimal bigDecimal13 = schema7.getMaximum();
        io.swagger.oas.models.media.Schema schema15 = schema7.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema16 = schema2.example((java.lang.Object) schema15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        schema19.setAdditionalProperties(schema29);
        java.math.BigDecimal bigDecimal32 = null;
        schema29.setMaximum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema29.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema41 = schema38.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional42 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        schema38.setNot(schema48);
        java.lang.String str50 = schema48.get$ref();
        schema35.setExample((java.lang.Object) schema48);
        schema15.setExample((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema54 = schema48.format("");
        io.swagger.oas.models.media.Schema schema56 = schema54.deprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMultipleOf(bigDecimal57);
        java.lang.Integer int59 = schema54.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int59);
    }

    @Test
    public void test07274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07274");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.Integer int10 = schema5.getMinLength();
        java.lang.Integer int11 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj13 = strComparableSchema12.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema12.properties(strMap14);
        java.lang.Object obj16 = null;
        schema15.setDefault(obj16);
        java.lang.Integer int18 = schema15.getMinLength();
        java.lang.Integer int19 = schema15.getMinItems();
        schema5.setNot(schema15);
        java.lang.Class<?> wildcardClass21 = schema5.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(obj13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test07275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07275");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema6.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema14.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema17 = schema14.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        schema14.setAdditionalProperties(schema24);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.discriminator(discriminator27);
        io.swagger.oas.models.media.Schema schema30 = schema24.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema30.setProperties(strMap31);
        io.swagger.oas.models.media.Schema schema34 = schema30.minLength((java.lang.Integer) 0);
        schema30.set$ref("no description");
        io.swagger.oas.models.media.Schema schema37 = schema6.not(schema30);
        io.swagger.oas.models.media.Schema schema39 = schema37.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.maximum(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema37.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema37.exclusiveMinimum((java.lang.Boolean) true);
        schema37.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07276");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema schema8 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema8.type("Optional.empty");
        java.math.BigDecimal bigDecimal11 = null;
        schema8.setMinimum(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema8.minimum(bigDecimal13);
        java.lang.Boolean boolean15 = schema14.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test07277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07277");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        java.lang.String str33 = schema30.getType();
        schema30.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema30.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema30.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str40 = schema39.getPattern();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.multipleOf(bigDecimal41);
        java.lang.Integer int43 = schema42.getMinItems();
        java.lang.String str44 = schema42.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "no description" + "'", str44, "no description");
    }

    @Test
    public void test07278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07278");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator10 = schema6.getDiscriminator();
        java.lang.Integer int11 = schema6.getMinItems();
        java.lang.Boolean boolean12 = schema6.getWriteOnly();
        java.lang.Integer int13 = schema6.getMinProperties();
        boolean boolean14 = serverListOptional3.equals((java.lang.Object) schema6);
        boolean boolean15 = serverListOptional3.isPresent();
        java.lang.String str16 = serverListOptional3.toString();
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Optional.empty" + "'", str16, "Optional.empty");
    }

    @Test
    public void test07279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07279");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        boolean boolean8 = serverListOptional1.isPresent();
        boolean boolean9 = serverListOptional1.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        io.swagger.oas.models.servers.Server[] serverArray12 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList13 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList13, serverArray12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList13);
        java.util.List<io.swagger.oas.models.servers.Server> serverList16 = serverListOptional1.orElse(serverList15);
        boolean boolean17 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList24 = schema23.getEnum();
        boolean boolean25 = serverListOptional1.equals((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj27 = strComparableSchema26.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema26.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema26.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList36 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean37 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean38 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean39 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean40 = strComparableList36.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema26.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList36);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema26.minimum(bigDecimal42);
        java.lang.Integer int44 = schema43.getMaxProperties();
        boolean boolean45 = serverListOptional1.equals((java.lang.Object) int44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertNotNull(serverList16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strComparableList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(obj27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test07280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07280");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        java.lang.Integer int28 = schema27.getMinProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema30.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.minimum(bigDecimal33);
        schema32.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test07281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07281");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema2.equals(obj15);
        io.swagger.oas.models.media.Schema schema18 = schema2.exclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList19 = schema2.getRequired();
        schema2.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test07282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07282");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.lang.Integer int19 = schema15.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.maximum(bigDecimal20);
        java.lang.Object obj22 = schema15.getExample();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema15.minimum(bigDecimal23);
        schema24.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07283");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        schema79.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema79.multipleOf(bigDecimal82);
        io.swagger.oas.models.media.Schema schema85 = schema79.writeOnly((java.lang.Boolean) false);
        schema85.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test07284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07284");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema25.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean30 = schema29.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test07285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07285");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        schema2.setMinLength((java.lang.Integer) 10);
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int18 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj21 = strComparableSchema20.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema20.properties(strMap22);
        java.lang.Object obj24 = null;
        schema23.setDefault(obj24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.properties(strMap26);
        io.swagger.oas.models.media.Schema schema28 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema27);
        java.lang.Boolean boolean29 = schema2.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test07286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07286");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "", "#/components/schemas/", "no description" };
        java.util.Optional<java.lang.String[]> strArrayOptional5 = java.util.Optional.ofNullable(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.lang.String[]> strArrayOptional11 = java.util.Optional.ofNullable(strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArrayOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(strArrayOptional11);
    }

    @Test
    public void test07287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07287");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        schema18.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.maximum(bigDecimal21);
        schema22.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07288");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Boolean boolean7 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.XML xML8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.xml(xML8);
        java.lang.Integer int10 = schema9.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test07289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07289");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = schema9.getExtensions();
        java.lang.Object obj21 = schema9.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        schema9.setProperties(strMap22);
        boolean boolean24 = serverListOptional1.equals((java.lang.Object) strMap22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.lang.Integer int32 = schema31.getMinItems();
        io.swagger.oas.models.media.Schema schema34 = schema31.title("no description");
        java.lang.Boolean boolean35 = schema31.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema31.$ref("");
        java.lang.Integer int40 = schema31.getMinItems();
        java.lang.String str41 = schema31.getDescription();
        io.swagger.oas.models.media.Schema schema43 = schema31.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean44 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema schema46 = schema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean47 = serverListOptional1.equals((java.lang.Object) schema31);
        boolean boolean48 = serverListOptional1.isPresent();
        boolean boolean49 = serverListOptional1.isPresent();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test07290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07290");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema31.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema schema67 = schema65.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = schema67.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema70 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema72 = schema67.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test07291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07291");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int16 = schema12.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        java.lang.Boolean boolean28 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = schema30.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema12.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema30);
        schema36.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema40 = schema36.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07292");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.setType("hi!");
        schema16.setNullable((java.lang.Boolean) false);
        schema16.setName("");
        schema16.setTitle("");
        io.swagger.oas.models.media.Schema schema26 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str29 = schema16.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test07293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07293");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.xml(xML13);
        io.swagger.oas.models.media.Schema schema15 = schema14.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test07294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07294");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int8 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.annotations.servers.Server[] serverArray13 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray13);
        io.swagger.oas.models.servers.Server[] serverArray15 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList16 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList16, serverArray15);
        java.util.List<io.swagger.oas.models.servers.Server> serverList18 = serverListOptional14.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList16);
        boolean boolean19 = serverListOptional14.isPresent();
        java.lang.String str20 = serverListOptional14.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.format("no description");
        schema26.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean42 = schema39.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema26.additionalProperties(schema39);
        java.lang.String[] strArray47 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        schema39.setRequired((java.util.List<java.lang.String>) strList48);
        boolean boolean51 = serverListOptional14.equals((java.lang.Object) strList48);
        schema10.setExample((java.lang.Object) serverListOptional14);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional53 = java.util.Optional.ofNullable(serverListOptional14);
        boolean boolean54 = serverListOptional14.isPresent();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(serverArray13);
        org.junit.Assert.assertNotNull(serverListOptional14);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(serverList18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Optional.empty" + "'", str20, "Optional.empty");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(serverListOptionalOptional53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test07295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07295");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMinimum(bigDecimal15);
        java.lang.Boolean boolean17 = schema12.getDeprecated();
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.annotations.servers.Server server20 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray21 = new io.swagger.oas.annotations.servers.Server[] { server20 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema schema23 = schema12.example((java.lang.Object) serverArray21);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        schema30.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean46 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema43);
        io.swagger.oas.models.media.Schema schema48 = schema30.additionalProperties(schema43);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema43.maximum(bigDecimal49);
        schema43.setReadOnly((java.lang.Boolean) true);
        boolean boolean53 = serverListOptional24.equals((java.lang.Object) schema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.lang.Integer int67 = schema66.getMinItems();
        schema56.setAdditionalProperties(schema66);
        java.math.BigDecimal bigDecimal69 = null;
        schema66.setMaximum(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema66.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.servers.Server[] serverArray73 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList74 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList74, serverArray73);
        java.util.Optional<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListOptional76 = java.util.Optional.of((java.util.AbstractList<io.swagger.oas.models.servers.Server>) serverList74);
        schema66.setExample((java.lang.Object) serverList74);
        java.util.List<io.swagger.oas.models.servers.Server> serverList78 = serverListOptional24.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList74);
        java.util.Optional<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListOptional79 = java.util.Optional.of((java.util.AbstractList<io.swagger.oas.models.servers.Server>) serverList74);
        java.util.Optional<java.util.ArrayList<io.swagger.oas.models.servers.Server>> serverListOptional80 = java.util.Optional.ofNullable(serverList74);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(serverArray21);
        org.junit.Assert.assertNotNull(serverListOptional22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(serverListOptional24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(serverArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(serverListOptional76);
        org.junit.Assert.assertNotNull(serverList78);
        org.junit.Assert.assertNotNull(serverListOptional79);
        org.junit.Assert.assertNotNull(serverListOptional80);
    }

    @Test
    public void test07296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07296");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.discriminator(discriminator6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        schema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema33 = schema15.additionalProperties(schema28);
        java.lang.String[] strArray36 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        schema28.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema schema40 = schema28.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        schema28.setProperties(strMap41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMinItems();
        schema45.setAdditionalProperties(schema55);
        java.lang.String[] strArray61 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        io.swagger.oas.models.media.Schema schema64 = schema55.required((java.util.List<java.lang.String>) strList62);
        java.lang.Object obj65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.example(obj65);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.multipleOf(bigDecimal67);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList71 = strComparableSchema70.getRequired();
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema70.required((java.util.List<java.lang.String>) strList74);
        schema68.addExtension("#/components/schemas/", (java.lang.Object) strList74);
        schema28.setRequired((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.media.Schema schema79 = schema9.required((java.util.List<java.lang.String>) strList74);
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema9.multipleOf(bigDecimal80);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.multipleOf(bigDecimal82);
        schema83.setMaxProperties((java.lang.Integer) 0);
        java.lang.String str86 = schema83.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str86);
    }

    @Test
    public void test07297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07297");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema2.equals(obj15);
        java.math.BigDecimal bigDecimal17 = schema2.getMultipleOf();
        java.lang.Boolean boolean18 = schema2.getNullable();
        schema2.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int21 = schema2.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test07298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07298");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema schema16 = schema2.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        io.swagger.oas.models.media.Schema schema28 = schema25.title("no description");
        java.lang.Object obj29 = schema28.getExample();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.lang.String str33 = schema32.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.name("no description");
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema32.not(schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema45 = schema32.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.description("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.lang.String str52 = schema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.lang.String str56 = schema55.get$ref();
        io.swagger.oas.models.media.Schema schema58 = schema55.name("no description");
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema51.not(schema58);
        java.lang.Boolean boolean62 = schema58.getReadOnly();
        java.lang.Boolean boolean63 = schema58.getExclusiveMinimum();
        java.lang.Integer int64 = schema58.getMaxItems();
        io.swagger.oas.models.media.Schema schema65 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema58);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema47.getProperties();
        schema28.setProperties(strMap66);
        io.swagger.oas.models.media.Schema schema68 = schema16.properties(strMap66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + false + "'", boolean63, false);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07299");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        schema2.setNullable((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema2.getNullable();
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.minimum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema2.description("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.format("no description");
        schema26.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean42 = schema39.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema26.additionalProperties(schema39);
        java.lang.String str45 = schema39.getFormat();
        java.lang.Integer int46 = schema39.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.lang.Integer int60 = schema59.getMinItems();
        schema49.setAdditionalProperties(schema59);
        java.math.BigDecimal bigDecimal62 = null;
        schema59.setMaximum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema59.maxProperties((java.lang.Integer) 0);
        schema39.setAdditionalProperties(schema65);
        java.lang.String str67 = schema65.getName();
        io.swagger.oas.models.media.Schema schema68 = schema20.example((java.lang.Object) str67);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        schema20.setExternalDocs(externalDocumentation69);
        java.math.BigDecimal bigDecimal71 = schema20.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + false + "'", boolean16, false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal71);
    }

    @Test
    public void test07300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07300");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema2.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema2.deprecated((java.lang.Boolean) true);
        schema2.setName("no description");
        schema2.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj31 = schema2.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test07301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07301");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema9.description("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema18.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional22 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        schema18.setNot(schema28);
        io.swagger.oas.models.media.Schema schema31 = schema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema9.additionalProperties(schema31);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.lang.String str36 = schema35.get$ref();
        io.swagger.oas.models.media.Schema schema38 = schema35.name("no description");
        java.lang.Boolean boolean39 = schema35.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        schema35.setProperties(strMap40);
        io.swagger.oas.models.media.Schema schema43 = schema35.name("");
        io.swagger.oas.models.media.Schema schema44 = schema9.additionalProperties(schema43);
        schema44.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test07302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07302");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema7.maximum(bigDecimal8);
        io.swagger.oas.models.media.Schema schema11 = schema9.minLength((java.lang.Integer) 1);
        schema11.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test07303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07303");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.multipleOf(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test07304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07304");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema6.$ref("");
        java.lang.String str15 = schema6.get$ref();
        java.lang.String str16 = schema6.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.lang.Integer int24 = schema23.getMinItems();
        io.swagger.oas.models.media.Schema schema26 = schema23.title("no description");
        java.lang.Boolean boolean27 = schema23.getWriteOnly();
        io.swagger.oas.models.media.Schema schema29 = schema23.nullable((java.lang.Boolean) true);
        java.lang.String str30 = schema29.getPattern();
        io.swagger.oas.models.media.Schema schema32 = schema29.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int33 = schema29.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.title("no description");
        java.lang.Boolean boolean45 = schema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema47 = schema41.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema49 = schema47.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator50 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = schema47.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.minimum(bigDecimal56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema59 = schema6.properties(strMap58);
        io.swagger.oas.models.media.Schema schema61 = schema59.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema59.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema59.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "#/components/schemas/" + "'", str15, "#/components/schemas/");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/" + "'", str16, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test07305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07305");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        java.lang.String str80 = schema79.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = schema79.getProperties();
        io.swagger.oas.models.media.XML xML82 = null;
        schema79.setXml(xML82);
        io.swagger.oas.models.media.Schema schema85 = schema79.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation86 = null;
        schema79.setExternalDocs(externalDocumentation86);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema79.maximum(bigDecimal88);
        schema79.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test07306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07306");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.discriminator(discriminator31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema32.getExternalDocs();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean48 = schema45.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema45);
        io.swagger.oas.models.media.Schema schema51 = schema41.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        schema57.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema57.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        java.lang.String str67 = schema66.get$ref();
        io.swagger.oas.models.media.Schema schema69 = schema66.name("no description");
        java.math.BigDecimal bigDecimal70 = null;
        schema66.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema72 = schema57.not(schema66);
        io.swagger.oas.models.media.Schema schema73 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        schema72.setPattern("hi!");
        schema72.setPattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = schema72.getExtensions();
        schema72.setFormat("no description");
        io.swagger.oas.models.media.Schema schema81 = schema32.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.XML xML82 = schema32.getXml();
        java.lang.Boolean boolean83 = schema32.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(xML82);
        org.junit.Assert.assertNull(boolean83);
    }

    @Test
    public void test07307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07307");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList13 = strComparableSchema12.getRequired();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema12.required((java.util.List<java.lang.String>) strList16);
        schema9.setRequired((java.util.List<java.lang.String>) strList16);
        java.lang.Object obj20 = schema9.getExample();
        java.lang.String str21 = schema9.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07308");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema2.minItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal20 = schema19.getMaximum();
        schema19.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema24 = schema19.type("");
        java.lang.String str25 = schema24.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test07309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07309");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Integer int7 = schema2.getMinProperties();
        java.math.BigDecimal bigDecimal8 = schema2.getMaximum();
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.maximum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.lang.Integer int20 = schema19.getMinItems();
        io.swagger.oas.models.media.Schema schema22 = schema19.title("no description");
        io.swagger.oas.models.media.Schema schema24 = schema22.type("no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.type("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        schema28.setProperties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.discriminator(discriminator31);
        schema28.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean35 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = schema12.example((java.lang.Object) boolean35);
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: 100\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: no description\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07310");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.discriminator(discriminator22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07311");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        java.lang.String str27 = schema18.getName();
        java.util.List<java.lang.String> strList28 = schema18.getRequired();
        java.lang.String str29 = schema18.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test07312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07312");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Schema schema7 = schema2.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal8 = schema2.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema2.getNot();
        java.math.BigDecimal bigDecimal10 = null;
        // The following exception was thrown during execution in test generation
        try {
            schema9.setMultipleOf(bigDecimal10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test07313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07313");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Integer int7 = schema2.getMinProperties();
        java.math.BigDecimal bigDecimal8 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) (-1));
        schema2.setMaxItems((java.lang.Integer) 100);
        java.lang.String str13 = schema2.getType();
        java.lang.String str14 = schema2.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.externalDocs(externalDocumentation15);
        java.lang.String str17 = schema2.getTitle();
        schema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: Optional.empty\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test07314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07314");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        java.math.BigDecimal bigDecimal12 = null;
        schema9.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = schema20.not(schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema34.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema20.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema20.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray44 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema39.setRequired((java.util.List<java.lang.String>) strList45);
        schema9.setRequired((java.util.List<java.lang.String>) strList45);
        java.lang.Integer int49 = schema9.getMinLength();
        schema9.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test07315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07315");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        schema18.setMaxProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal26 = null;
        schema18.setMultipleOf(bigDecimal26);
        java.lang.String str28 = schema18.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema31.title("no description");
        io.swagger.oas.models.media.Schema schema37 = schema31.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema40.title("no description");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema53.minItems((java.lang.Integer) 10);
        schema63.setMinLength((java.lang.Integer) 100);
        schema63.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        schema63.setDiscriminator(discriminator68);
        io.swagger.oas.models.media.Schema schema70 = schema31.addProperties("no description", schema63);
        schema70.setTitle("#/components/schemas/");
        java.lang.Integer int73 = schema70.getMinItems();
        schema18.setAdditionalProperties(schema70);
        java.util.List<java.lang.String> strList75 = schema70.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNull(strList75);
    }

    @Test
    public void test07316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07316");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        schema2.setFormat("");
        java.lang.Integer int46 = schema2.getMinItems();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema2.maximum(bigDecimal47);
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal53 = schema52.getMultipleOf();
        schema52.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema57 = schema52.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test07317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07317");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str35 = schema22.get$ref();
        java.util.List<java.lang.String> strList36 = schema22.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test07318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07318");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema20 = schema12.minProperties((java.lang.Integer) 10);
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema20.minProperties((java.lang.Integer) 0);
        schema20.setFormat("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        schema33.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema39 = schema38.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema41 = schema38.format("no description");
        java.lang.String str42 = schema41.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        schema48.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        io.swagger.oas.models.media.Discriminator discriminator58 = schema57.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        schema61.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean64 = schema61.getUniqueItems();
        io.swagger.oas.models.media.Schema schema65 = schema57.not(schema61);
        io.swagger.oas.models.media.Schema schema66 = schema48.additionalProperties(schema61);
        schema66.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema41.not(schema66);
        io.swagger.oas.models.media.Schema schema70 = schema41.getNot();
        io.swagger.oas.models.media.Schema schema71 = schema33.example((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema75 = schema74.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema77 = schema74.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema78 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema78.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema80.properties(strMap81);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.properties(strMap83);
        java.lang.Integer int85 = schema84.getMinItems();
        schema74.setAdditionalProperties(schema84);
        java.math.BigDecimal bigDecimal87 = null;
        schema84.setMinimum(bigDecimal87);
        io.swagger.oas.models.media.Schema schema90 = schema84.maxLength((java.lang.Integer) 100);
        boolean boolean91 = schema71.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema93 = schema71.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema95 = schema93.uniqueItems((java.lang.Boolean) true);
        schema20.setNot(schema95);
        schema20.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
    }

    @Test
    public void test07319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07319");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.xml(xML68);
        schema67.set$ref("#/components/schemas/no description");
        java.lang.Integer int72 = schema67.getMinItems();
        io.swagger.oas.models.media.Schema schema74 = schema67.title("Optional.empty");
        io.swagger.oas.models.media.Schema schema75 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.xml(xML76);
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.multipleOf(bigDecimal78);
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema79.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
    }

    @Test
    public void test07320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07320");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional2 = java.util.Optional.ofNullable(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Optional<io.swagger.oas.annotations.links.Link[]> linkArrayOptional9 = java.util.Optional.of(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        org.junit.Assert.assertNotNull(linkArray1);
        org.junit.Assert.assertNotNull(linkArrayOptional2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(linkArrayOptional9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test07321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07321");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("");
        io.swagger.oas.models.media.Schema schema12 = schema2.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema12.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema12.getAdditionalProperties();
        java.lang.Object obj16 = schema12.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNull(obj16);
    }

    @Test
    public void test07322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07322");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.uniqueItems((java.lang.Boolean) true);
        schema15.setMaxItems((java.lang.Integer) 1);
        java.lang.String str18 = schema15.toString();
        io.swagger.oas.models.media.Schema schema20 = schema15.exclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = schema15.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test07323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07323");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema2.getEnum();
        schema2.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema2.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema2.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07324");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema18.setProperties(strMap19);
        java.lang.Integer int21 = schema18.getMinItems();
        java.math.BigDecimal bigDecimal22 = null;
        schema18.setMaximum(bigDecimal22);
        schema18.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test07325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07325");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        java.util.List<java.lang.String> strList27 = schema9.getRequired();
        io.swagger.oas.models.media.Schema schema29 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.externalDocs(externalDocumentation32);
        schema33.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07326");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        schema79.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema79.exclusiveMinimum((java.lang.Boolean) false);
        schema83.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test07327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07327");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList4 = schema2.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema5 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema5.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema8 = schema7.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.format("no description");
        schema10.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        io.swagger.oas.models.media.Discriminator discriminator20 = schema19.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean26 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema27 = schema19.not(schema23);
        io.swagger.oas.models.media.Schema schema28 = schema10.additionalProperties(schema23);
        java.lang.Boolean boolean29 = schema28.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema28);
        java.lang.String str31 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema28.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        schema28.setExternalDocs(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNull(strComparableList4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(discriminator20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07328");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        schema79.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema79.exclusiveMinimum((java.lang.Boolean) false);
        schema79.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test07329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07329");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        schema12.setExternalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema schema22 = schema12.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test07330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07330");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema50.getNot();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema50.minimum(bigDecimal54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.properties(strMap56);
        java.lang.Boolean boolean58 = schema50.getExclusiveMaximum();
        schema2.setExample((java.lang.Object) schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema63.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.properties(strMap72);
        java.lang.Integer int74 = schema73.getMinItems();
        schema63.setAdditionalProperties(schema73);
        java.lang.String[] strArray79 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema73.required((java.util.List<java.lang.String>) strList80);
        java.lang.Object obj83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.example(obj83);
        io.swagger.oas.models.media.Schema schema86 = schema82.$ref("no description");
        java.math.BigDecimal bigDecimal87 = schema86.getMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema2.not(schema86);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema2.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(bigDecimal87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strMap89);
    }

    @Test
    public void test07331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07331");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema schema11 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.discriminator(discriminator14);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.maximum(bigDecimal16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.name("no description");
        java.lang.Boolean boolean24 = schema20.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        java.lang.String str28 = schema27.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        schema34.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema27.not(schema34);
        io.swagger.oas.models.media.Schema schema38 = schema20.not(schema34);
        io.swagger.oas.models.media.Schema schema40 = schema20.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema20.getEnum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.lang.Integer int55 = schema54.getMinItems();
        schema44.setAdditionalProperties(schema54);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMaximum(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema54.maxProperties((java.lang.Integer) 1);
        schema20.setAdditionalProperties(schema60);
        java.math.BigDecimal bigDecimal62 = null;
        schema20.setMultipleOf(bigDecimal62);
        boolean boolean64 = schema15.equals((java.lang.Object) schema20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test07332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07332");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList46 = null;
        schema45.setRequired(strList46);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.discriminator(discriminator48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        schema45.setExternalDocs(externalDocumentation50);
        io.swagger.oas.models.media.XML xML52 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema54 = schema45.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test07333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07333");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal19 = null;
        schema12.setMultipleOf(bigDecimal19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema12.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        java.lang.String str49 = schema41.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.lang.String str53 = schema52.get$ref();
        io.swagger.oas.models.media.Schema schema55 = schema52.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator56 = schema52.getDiscriminator();
        boolean boolean57 = schema41.equals((java.lang.Object) discriminator56);
        schema41.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema41.minimum(bigDecimal60);
        io.swagger.oas.models.media.Discriminator discriminator62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.discriminator(discriminator62);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.externalDocs(externalDocumentation64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = schema63.getProperties();
        schema63.setMinItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema63.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Schema schema71 = schema12.additionalProperties(schema70);
        io.swagger.oas.models.media.Schema schema73 = schema12.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test07334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07334");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        schema2.setWriteOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema2.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema23 = schema2.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07335");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "", "#/components/schemas/", "no description" };
        java.util.Optional<java.lang.String[]> strArrayOptional5 = java.util.Optional.ofNullable(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.lang.String[]> strArrayOptional7 = java.util.Optional.of(strArray4);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArrayOptional5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(strArrayOptional7);
    }

    @Test
    public void test07336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07336");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema24 = schema21.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional25 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema21.setNot(schema31);
        java.lang.String str33 = schema31.get$ref();
        schema18.setExample((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema36 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema38 = schema36.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.format("no description");
        schema44.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean47 = schema44.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        io.swagger.oas.models.media.Schema schema55 = schema53.pattern("");
        schema44.setAdditionalProperties(schema55);
        schema38.setExample((java.lang.Object) schema44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test07337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07337");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList9 = schema6.getEnum();
        java.lang.String str10 = schema6.getType();
        java.lang.String str11 = schema6.toString();
        schema6.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strComparableList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "#/components/schemas/" + "'", str10, "#/components/schemas/");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str11, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07338");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema17 = schema5.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema5.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
    }

    @Test
    public void test07339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07339");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema5.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema18 = schema14.title("no description");
        io.swagger.oas.models.media.Schema schema20 = schema14.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema23.title("no description");
        io.swagger.oas.models.media.Schema schema28 = schema14.additionalProperties(schema23);
        java.lang.Object obj29 = schema23.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema23.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema33 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema34 = schema31.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema33);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema36.pattern("");
        schema36.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = schema36.getProperties();
        io.swagger.oas.models.media.Schema schema42 = schema11.properties(strMap41);
        java.lang.Boolean boolean43 = schema11.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean43);
    }

    @Test
    public void test07340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07340");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        java.lang.String[] strArray48 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema42.required((java.util.List<java.lang.String>) strList49);
        java.lang.Object obj52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.example(obj52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.xml(xML56);
        java.lang.Integer int58 = schema57.getMinProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema23.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        schema71.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean74 = schema71.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema71);
        io.swagger.oas.models.media.Schema schema77 = schema67.minItems((java.lang.Integer) 10);
        schema77.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean80 = schema77.getNullable();
        java.math.BigDecimal bigDecimal81 = schema77.getMaximum();
        io.swagger.oas.models.media.Schema schema83 = schema77.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema77.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema77.minimum(bigDecimal86);
        schema57.setExample((java.lang.Object) schema87);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema87.minimum(bigDecimal89);
        java.lang.Boolean boolean91 = schema87.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean91);
    }

    @Test
    public void test07341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07341");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.not(schema5);
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean9 = schema2.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean9);
    }

    @Test
    public void test07342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07342");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String str24 = schema18.getFormat();
        java.lang.Integer int25 = schema18.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.math.BigDecimal bigDecimal41 = null;
        schema38.setMaximum(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema38.maxProperties((java.lang.Integer) 0);
        schema18.setAdditionalProperties(schema44);
        schema44.setPattern("");
        io.swagger.oas.models.media.XML xML48 = schema44.getXml();
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema44.minimum(bigDecimal49);
        schema44.setReadOnly((java.lang.Boolean) false);
        java.lang.Integer int53 = schema44.getMaxItems();
        schema44.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(xML48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test07343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07343");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Discriminator discriminator24 = schema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema26 = schema23.name("hi!");
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean42 = schema39.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema39);
        io.swagger.oas.models.media.Schema schema45 = schema35.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        schema51.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema51.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.lang.String str61 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema63 = schema60.name("no description");
        java.math.BigDecimal bigDecimal64 = null;
        schema60.setMaximum(bigDecimal64);
        io.swagger.oas.models.media.Schema schema66 = schema51.not(schema60);
        io.swagger.oas.models.media.Schema schema67 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        io.swagger.oas.models.media.Schema schema69 = schema66.description("#/components/schemas/no description");
        schema28.setExample((java.lang.Object) "#/components/schemas/no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        schema28.setProperties(strMap71);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07344");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        schema37.setPattern("hi!");
        schema37.setPattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema37.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.lang.String str48 = schema47.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.lang.String str52 = schema51.get$ref();
        io.swagger.oas.models.media.Schema schema54 = schema51.name("no description");
        schema54.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema47.not(schema54);
        java.math.BigDecimal bigDecimal58 = schema57.getMultipleOf();
        java.lang.String str59 = schema57.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema60 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema62 = strComparableSchema60.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema63 = schema62.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema65 = schema62.format("no description");
        schema65.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.properties(strMap71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        io.swagger.oas.models.media.Discriminator discriminator75 = schema74.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        schema78.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean81 = schema78.getUniqueItems();
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema78);
        io.swagger.oas.models.media.Schema schema83 = schema65.additionalProperties(schema78);
        schema57.setDefault((java.lang.Object) schema78);
        schema78.setMinProperties((java.lang.Integer) 10);
        schema78.setWriteOnly((java.lang.Boolean) false);
        schema37.setNot(schema78);
        schema37.setDeprecated((java.lang.Boolean) true);
        java.lang.String str92 = schema37.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(discriminator75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test07345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07345");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        java.lang.Class<?> wildcardClass16 = schema5.getClass();
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional17 = java.util.Optional.of((java.lang.reflect.AnnotatedElement) wildcardClass16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(annotatedElementOptional17);
    }

    @Test
    public void test07346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07346");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.xml(xML13);
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema9.maximum(bigDecimal17);
        io.swagger.oas.models.media.Schema schema20 = schema9.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07347");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int8 = schema5.getMaxLength();
        io.swagger.oas.models.media.Schema schema10 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        schema5.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        io.swagger.oas.models.media.Schema schema35 = schema33.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable39 = strComparableSchema36.getDefault();
        schema33.setNot((io.swagger.oas.models.media.Schema) strComparableSchema36);
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList49 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean50 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean51 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean52 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean53 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "Optional[[]]");
        boolean boolean54 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "#/components/schemas/");
        boolean boolean55 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean56 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean57 = strComparableList49.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        schema18.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList49);
        io.swagger.oas.models.media.Schema schema62 = schema5.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int63 = schema5.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strComparable39);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
    }

    @Test
    public void test07348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07348");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.String str7 = schema2.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema10.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema13 = schema10.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema10.setAdditionalProperties(schema20);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.discriminator(discriminator23);
        java.lang.Integer int25 = schema20.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        java.lang.String[] strArray44 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        io.swagger.oas.models.media.Schema schema47 = schema38.required((java.util.List<java.lang.String>) strList45);
        schema20.setRequired((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema49 = schema2.required((java.util.List<java.lang.String>) strList45);
        io.swagger.oas.models.media.Schema schema51 = schema2.format("#/components/schemas/no description");
        schema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setName("no description");
        java.lang.Object obj56 = schema2.getExample();
        java.lang.Integer int57 = schema2.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test07349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07349");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setNot(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        schema59.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        io.swagger.oas.models.media.Schema schema69 = schema5.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.properties(strMap73);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema74.properties(strMap75);
        java.lang.Integer int77 = schema76.getMinItems();
        io.swagger.oas.models.media.Schema schema79 = schema76.title("no description");
        io.swagger.oas.models.media.Schema schema81 = schema79.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList83 = strComparableSchema82.getRequired();
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        io.swagger.oas.models.media.Schema schema88 = strComparableSchema82.required((java.util.List<java.lang.String>) strList86);
        schema79.setRequired((java.util.List<java.lang.String>) strList86);
        schema69.setRequired((java.util.List<java.lang.String>) strList86);
        java.lang.String str91 = schema69.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test07350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07350");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.math.BigDecimal bigDecimal24 = null;
        schema23.setMultipleOf(bigDecimal24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07351");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        schema2.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = null;
        schema2.setEnum(strComparableList29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema2.multipleOf(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        io.swagger.oas.models.media.Schema schema44 = schema41.title("no description");
        java.lang.Object obj45 = schema44.getExample();
        io.swagger.oas.models.media.Schema schema47 = schema44.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema34.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.lang.String str52 = schema51.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        java.lang.String str56 = schema55.get$ref();
        io.swagger.oas.models.media.Schema schema58 = schema55.name("no description");
        schema58.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema61 = schema51.not(schema58);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = schema51.getExtensions();
        schema51.setMinLength((java.lang.Integer) 10);
        schema51.setName("no description");
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema51.multipleOf(bigDecimal67);
        io.swagger.oas.models.media.Discriminator discriminator69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.discriminator(discriminator69);
        io.swagger.oas.models.media.Schema schema71 = schema34.example((java.lang.Object) schema68);
        java.lang.Boolean boolean72 = schema34.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(obj45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test07352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07352");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema12.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test07353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07353");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema8.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema schema26 = schema23.maxItems((java.lang.Integer) 100);
        schema23.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        io.swagger.oas.models.media.Discriminator discriminator36 = schema35.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        schema39.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean42 = schema39.getUniqueItems();
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema39);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        schema49.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean52 = schema49.getReadOnly();
        io.swagger.oas.models.media.Schema schema54 = schema49.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema39.not(schema49);
        java.lang.String str56 = schema49.toString();
        io.swagger.oas.models.media.Schema schema58 = schema49.type("");
        io.swagger.oas.models.media.Schema schema60 = schema58.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.multipleOf(bigDecimal61);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        schema65.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema69 = schema65.title("no description");
        io.swagger.oas.models.media.Schema schema71 = schema65.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema72 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema74 = strComparableSchema72.maxProperties((java.lang.Integer) 10);
        schema74.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema78 = schema74.title("no description");
        io.swagger.oas.models.media.Schema schema79 = schema65.additionalProperties(schema74);
        java.lang.Object obj80 = schema74.getExample();
        io.swagger.oas.models.media.Schema schema82 = schema74.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema84 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema85 = schema82.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema84);
        io.swagger.oas.models.media.Schema schema87 = schema85.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema89 = schema87.pattern("");
        schema87.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema87.getProperties();
        schema60.setProperties(strMap92);
        schema23.setProperties(strMap92);
        schema17.setProperties(strMap92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str56, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test07354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07354");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.multipleOf(bigDecimal24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema43 = schema23.not(schema40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema44 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema46 = strComparableSchema44.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema47 = schema46.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema49 = schema46.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.properties(strMap53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.lang.Integer int57 = schema56.getMinItems();
        schema46.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Discriminator discriminator59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.discriminator(discriminator59);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        schema63.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema67 = schema63.title("no description");
        io.swagger.oas.models.media.Schema schema69 = schema63.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema72.title("no description");
        io.swagger.oas.models.media.Schema schema77 = schema63.additionalProperties(schema72);
        io.swagger.oas.models.media.Schema schema78 = schema60.not(schema63);
        io.swagger.oas.models.media.Schema schema79 = schema43.not(schema78);
        io.swagger.oas.models.media.Schema schema81 = schema78.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = null;
        schema78.setProperties(strMap82);
        java.lang.String str84 = schema78.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test07355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07355");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema6.minLength((java.lang.Integer) 0);
        java.lang.String[] strArray30 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "#/components/schemas/", "no description" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        schema25.setRequired((java.util.List<java.lang.String>) strList31);
        io.swagger.oas.models.media.Schema schema35 = schema25.type("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema25.discriminator(discriminator36);
        java.lang.String str38 = schema37.getFormat();
        io.swagger.oas.models.media.Schema schema40 = schema37.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07356");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema8.pattern("no description");
        strComparableSchema8.setMaxProperties((java.lang.Integer) 10);
        schema5.setDefault((java.lang.Object) strComparableSchema8);
        io.swagger.oas.models.media.Schema schema16 = null;
        schema5.setNot(schema16);
        java.lang.Boolean boolean18 = schema5.getWriteOnly();
        io.swagger.oas.models.media.Schema schema20 = schema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema23.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema26 = schema23.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        schema23.setAdditionalProperties(schema33);
        java.lang.String[] strArray39 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        io.swagger.oas.models.media.Schema schema42 = schema33.required((java.util.List<java.lang.String>) strList40);
        io.swagger.oas.models.media.Schema schema44 = schema33.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema47 = schema5.example((java.lang.Object) schema46);
        schema46.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07357");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema schema18 = schema11.pattern("no description");
        io.swagger.oas.models.media.Schema schema20 = schema18.writeOnly((java.lang.Boolean) false);
        java.lang.String str21 = schema20.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.description("#/components/schemas/");
        java.lang.String str32 = schema29.getTitle();
        boolean boolean33 = schema20.equals((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema35 = schema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = schema20.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str21, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
    }

    @Test
    public void test07358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07358");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema12.maxProperties((java.lang.Integer) 0);
        schema12.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal21 = null;
        schema12.setMaximum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07359");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        schema6.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        java.lang.String str15 = schema14.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        schema21.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        io.swagger.oas.models.media.Discriminator discriminator31 = schema30.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        schema34.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean37 = schema34.getUniqueItems();
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema34);
        io.swagger.oas.models.media.Schema schema39 = schema21.additionalProperties(schema34);
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema14.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema14.getNot();
        io.swagger.oas.models.media.Schema schema44 = schema6.example((java.lang.Object) schema14);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema47.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema50 = schema47.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.properties(strMap56);
        java.lang.Integer int58 = schema57.getMinItems();
        schema47.setAdditionalProperties(schema57);
        java.math.BigDecimal bigDecimal60 = null;
        schema57.setMinimum(bigDecimal60);
        io.swagger.oas.models.media.Schema schema63 = schema57.maxLength((java.lang.Integer) 100);
        boolean boolean64 = schema44.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema66 = schema44.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema44.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal69 = schema44.getMaximum();
        io.swagger.oas.models.media.XML xML70 = null;
        schema44.setXml(xML70);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
    }

    @Test
    public void test07360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07360");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean13 = schema8.getNullable();
        schema8.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07361");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema16.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema16.nullable((java.lang.Boolean) false);
        java.lang.String str25 = schema24.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.lang.String str31 = schema30.get$ref();
        io.swagger.oas.models.media.Schema schema33 = schema30.name("no description");
        io.swagger.oas.models.media.Schema schema35 = schema30.minLength((java.lang.Integer) 100);
        java.lang.String str36 = schema35.getPattern();
        schema27.setDefault((java.lang.Object) str36);
        java.lang.Boolean boolean38 = schema27.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema40 = schema27.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07362");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema8.description("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema8.type("no description");
        schema8.setName("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.externalDocs(externalDocumentation19);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema21 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema23 = strComparableSchema21.maxProperties((java.lang.Integer) 10);
        schema23.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema23.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional27 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        schema23.setNot(schema33);
        schema23.setNullable((java.lang.Boolean) false);
        schema20.setAdditionalProperties(schema23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = schema23.getProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema23.externalDocs(externalDocumentation39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test07363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07363");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema40.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList46 = null;
        schema45.setRequired(strList46);
        io.swagger.oas.models.media.Schema schema49 = schema45.name("Optional.empty");
        schema45.setDescription("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema52 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema54 = strComparableSchema52.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.properties(strMap55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.lang.Integer int59 = schema58.getMinItems();
        io.swagger.oas.models.media.Schema schema61 = schema58.title("no description");
        java.lang.Boolean boolean62 = schema58.getWriteOnly();
        io.swagger.oas.models.media.Schema schema64 = schema58.nullable((java.lang.Boolean) true);
        java.lang.String str65 = schema64.getPattern();
        io.swagger.oas.models.media.Schema schema67 = schema64.maxProperties((java.lang.Integer) 10);
        schema64.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = schema64.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema73 = schema64.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema75 = schema64.minProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal76 = null;
        schema75.setMultipleOf(bigDecimal76);
        io.swagger.oas.models.media.Schema schema78 = schema45.example((java.lang.Object) bigDecimal76);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        schema78.setExternalDocs(externalDocumentation79);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test07364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07364");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema0.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema8.pattern("no description");
        java.util.List<java.lang.String> strList11 = schema10.getRequired();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema12 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema14 = strComparableSchema12.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        schema22.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean25 = schema22.getUniqueItems();
        io.swagger.oas.models.media.Schema schema26 = schema18.not(schema22);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        io.swagger.oas.models.media.Discriminator discriminator42 = schema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        schema45.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean48 = schema45.getUniqueItems();
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema45);
        schema45.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema33.not(schema45);
        io.swagger.oas.models.media.Schema schema54 = schema52.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.exclusiveMinimum((java.lang.Boolean) false);
        schema22.setNot(schema56);
        io.swagger.oas.models.media.Schema schema59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema59);
        schema10.setNot(schema59);
        schema10.setMinItems((java.lang.Integer) 10);
        java.lang.String str64 = schema10.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test07365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07365");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.lang.Integer int15 = schema9.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional23 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema19);
        java.lang.Integer int24 = schema19.getMinProperties();
        java.math.BigDecimal bigDecimal25 = schema19.getMaximum();
        io.swagger.oas.models.media.Schema schema26 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        io.swagger.oas.models.media.Schema schema28 = schema26.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema26.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema36 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07366");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        schema9.setMaxLength((java.lang.Integer) 1);
        schema9.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean14 = schema9.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema9.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNull(schema15);
    }

    @Test
    public void test07367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07367");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList8 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean9 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean10 = strComparableList8.add((java.lang.Comparable<java.lang.String>) "");
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList8);
        io.swagger.oas.models.media.Schema schema13 = schema5.description("hi!");
        io.swagger.oas.models.media.Schema schema15 = schema13.nullable((java.lang.Boolean) true);
        java.lang.Class<?> wildcardClass16 = schema15.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07368");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) true);
        schema2.setNot(schema34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        schema34.setProperties(strMap39);
        java.lang.Object obj41 = schema34.getExample();
        java.lang.Integer int42 = schema34.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(obj41);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test07369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07369");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema12 = schema8.type("hi!");
        io.swagger.oas.models.media.Schema schema14 = schema8.description("hi!");
        io.swagger.oas.models.media.Schema schema16 = schema8.type("no description");
        schema8.setName("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema20.getDescription();
        schema20.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) 0);
        java.lang.String str26 = schema20.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test07370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07370");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.discriminator(discriminator6);
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) false);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList10 = schema9.getEnum();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 100\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(strComparableList10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07371");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.math.BigDecimal bigDecimal22 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema12.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.lang.Integer int34 = schema33.getMinItems();
        io.swagger.oas.models.media.Schema schema36 = schema33.title("no description");
        java.lang.Boolean boolean37 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema39 = schema33.nullable((java.lang.Boolean) true);
        java.lang.String str40 = schema39.getPattern();
        io.swagger.oas.models.media.Schema schema42 = schema39.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.Integer int43 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.lang.Integer int52 = schema51.getMinItems();
        io.swagger.oas.models.media.Schema schema54 = schema51.title("no description");
        java.lang.Boolean boolean55 = schema51.getWriteOnly();
        io.swagger.oas.models.media.Schema schema57 = schema51.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator60 = schema57.getDiscriminator();
        io.swagger.oas.models.media.Schema schema62 = schema57.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema57);
        java.lang.Boolean boolean64 = schema63.getUniqueItems();
        schema26.setAdditionalProperties(schema63);
        schema63.setMaxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema72 = schema71.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema74 = schema71.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema75 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema77 = strComparableSchema75.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.properties(strMap80);
        java.lang.Integer int82 = schema81.getMinItems();
        schema71.setAdditionalProperties(schema81);
        java.lang.String[] strArray87 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        io.swagger.oas.models.media.Schema schema90 = schema81.required((java.util.List<java.lang.String>) strList88);
        java.math.BigDecimal bigDecimal91 = schema81.getMinimum();
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema81.minimum(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema63.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema93);
        schema63.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/Optional[[]]\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(discriminator60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean64);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test07372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07372");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema25.maxLength((java.lang.Integer) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = schema33.getExtensions();
        java.math.BigDecimal bigDecimal35 = null;
        schema33.setMaximum(bigDecimal35);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test07373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07373");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str13 = schema12.getPattern();
        io.swagger.oas.models.media.Schema schema15 = schema12.maxProperties((java.lang.Integer) 10);
        schema12.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema12.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema12.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = schema12.minProperties((java.lang.Integer) 100);
        schema12.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        java.lang.Integer int43 = schema38.getMinProperties();
        io.swagger.oas.models.media.Schema schema45 = schema38.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal48 = null;
        schema45.setMultipleOf(bigDecimal48);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        schema45.setDiscriminator(discriminator50);
        io.swagger.oas.models.media.Schema schema53 = schema45.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        schema45.setDiscriminator(discriminator54);
        java.math.BigDecimal bigDecimal56 = null;
        schema45.setMinimum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema58 = schema12.example((java.lang.Object) bigDecimal56);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema12.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap59);
    }

    @Test
    public void test07374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07374");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.lang.Object obj15 = null;
        boolean boolean16 = schema2.equals(obj15);
        io.swagger.oas.models.media.Schema schema18 = schema2.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getFormat();
        schema18.setDescription("Optional[[]]");
        java.lang.Class<?> wildcardClass22 = schema18.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test07375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07375");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.math.BigDecimal bigDecimal15 = null;
        schema12.setMaximum(bigDecimal15);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema12.discriminator(discriminator17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.lang.String str26 = schema25.get$ref();
        io.swagger.oas.models.media.Schema schema28 = schema25.name("no description");
        schema28.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema21.not(schema28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema21.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema21.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setDefault((java.lang.Object) schema36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema18.properties(strMap38);
        schema39.setPattern("");
        schema39.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema39.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator44);
    }

    @Test
    public void test07376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07376");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema schema11 = schema2.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07377");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        schema9.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema9.getNot();
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.minimum(bigDecimal13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.properties(strMap15);
        java.lang.Boolean boolean17 = schema9.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.lang.Integer int25 = schema24.getMinItems();
        io.swagger.oas.models.media.Schema schema27 = schema24.title("no description");
        java.lang.Boolean boolean28 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema30 = schema24.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema24.$ref("");
        schema9.setAdditionalProperties(schema32);
        java.lang.String str34 = schema32.getName();
        java.lang.Object obj35 = schema32.getExample();
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema32.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema32.maxLength((java.lang.Integer) 10);
        boolean boolean40 = serverListOptional1.equals((java.lang.Object) schema32);
        io.swagger.oas.annotations.servers.Server[] serverArray41 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional42 = io.swagger.jaxrs2.OperationParser.getServers(serverArray41);
        io.swagger.oas.models.servers.Server[] serverArray43 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList44 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList44, serverArray43);
        java.util.List<io.swagger.oas.models.servers.Server> serverList46 = serverListOptional42.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList44);
        boolean boolean47 = serverListOptional42.isPresent();
        boolean boolean48 = serverListOptional42.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMinItems();
        io.swagger.oas.models.media.Schema schema58 = schema55.title("no description");
        java.lang.Boolean boolean59 = schema55.getWriteOnly();
        io.swagger.oas.models.media.Schema schema61 = schema55.nullable((java.lang.Boolean) true);
        java.lang.String str62 = schema61.getPattern();
        io.swagger.oas.models.media.Schema schema64 = schema61.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean65 = serverListOptional42.equals((java.lang.Object) schema64);
        boolean boolean66 = serverListOptional42.isPresent();
        java.lang.String str67 = serverListOptional42.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray68 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional69 = io.swagger.jaxrs2.OperationParser.getServers(serverArray68);
        io.swagger.oas.models.servers.Server[] serverArray70 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList71 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList71, serverArray70);
        java.util.List<io.swagger.oas.models.servers.Server> serverList73 = serverListOptional69.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList71);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional74 = java.util.Optional.ofNullable(serverList73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList75 = serverListOptional42.orElse(serverList73);
        java.util.List<io.swagger.oas.models.servers.Server> serverList76 = serverListOptional1.orElse(serverList75);
        boolean boolean77 = serverListOptional1.isPresent();
        boolean boolean78 = serverListOptional1.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional1.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(serverArray41);
        org.junit.Assert.assertNotNull(serverListOptional42);
        org.junit.Assert.assertNotNull(serverArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(serverList46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Optional.empty" + "'", str67, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray68);
        org.junit.Assert.assertNotNull(serverListOptional69);
        org.junit.Assert.assertNotNull(serverArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(serverList73);
        org.junit.Assert.assertNotNull(serverListOptional74);
        org.junit.Assert.assertNotNull(serverList75);
        org.junit.Assert.assertNotNull(serverList76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test07378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07378");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema29 = schema23.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        java.lang.String[] strArray48 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema42.required((java.util.List<java.lang.String>) strList49);
        java.lang.Object obj52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.example(obj52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema55.xml(xML56);
        java.lang.Integer int58 = schema57.getMinProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = schema57.getProperties();
        io.swagger.oas.models.media.Schema schema60 = schema23.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema67.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema69 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema69.maxProperties((java.lang.Integer) 10);
        schema71.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean74 = schema71.getUniqueItems();
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema71);
        io.swagger.oas.models.media.Schema schema77 = schema67.minItems((java.lang.Integer) 10);
        schema77.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean80 = schema77.getNullable();
        java.math.BigDecimal bigDecimal81 = schema77.getMaximum();
        io.swagger.oas.models.media.Schema schema83 = schema77.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema77.minProperties((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema77.minimum(bigDecimal86);
        schema57.setExample((java.lang.Object) schema87);
        java.math.BigDecimal bigDecimal89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema87.minimum(bigDecimal89);
        io.swagger.oas.models.media.Schema schema92 = schema90.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test07379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07379");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        io.swagger.oas.models.media.XML xML68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema25.xml(xML68);
        java.lang.Boolean boolean70 = schema69.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema72 = schema69.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema74 = schema69.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test07380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07380");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        schema12.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema12.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional16 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        schema12.setNot(schema22);
        io.swagger.oas.models.media.Schema schema25 = schema12.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema12.properties(strMap26);
        java.util.List<java.lang.String> strList28 = schema27.getRequired();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema27.properties(strMap29);
        schema30.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.lang.Integer int40 = schema39.getMinItems();
        io.swagger.oas.models.media.Schema schema42 = schema39.title("no description");
        io.swagger.oas.models.media.Schema schema44 = schema42.type("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.util.List<java.lang.String> strList46 = strComparableSchema45.getRequired();
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema45.required((java.util.List<java.lang.String>) strList49);
        schema42.setRequired((java.util.List<java.lang.String>) strList49);
        schema30.setRequired((java.util.List<java.lang.String>) strList49);
        io.swagger.oas.models.media.Schema schema54 = schema9.required((java.util.List<java.lang.String>) strList49);
        java.lang.String str55 = schema9.toString();
        schema9.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema15);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str55, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test07381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07381");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        schema2.setMultipleOf(bigDecimal23);
        io.swagger.oas.models.media.Schema schema26 = schema2.deprecated((java.lang.Boolean) true);
        schema2.setName("no description");
        schema2.setName("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema2.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean33 = schema2.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + true + "'", boolean33, true);
    }

    @Test
    public void test07382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07382");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = schema12.get$ref();
        java.lang.String str23 = schema12.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema12.getExtensions();
        java.math.BigDecimal bigDecimal25 = null;
        schema12.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema12.addRequiredItem("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test07383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07383");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.setType("hi!");
        schema16.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema36.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean43 = schema40.getUniqueItems();
        io.swagger.oas.models.media.Schema schema44 = schema36.not(schema40);
        schema40.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema47 = schema28.not(schema40);
        java.lang.Integer int48 = schema47.getMinLength();
        schema47.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int51 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema schema53 = schema47.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        io.swagger.oas.models.media.Discriminator discriminator61 = schema60.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        io.swagger.oas.models.media.Discriminator discriminator69 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema70 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema72 = strComparableSchema70.maxProperties((java.lang.Integer) 10);
        schema72.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean75 = schema72.getUniqueItems();
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema72);
        schema72.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema79 = schema60.not(schema72);
        java.lang.Integer int80 = schema79.getMinLength();
        schema79.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = schema53.additionalProperties(schema79);
        java.lang.Integer int84 = schema79.getMaxItems();
        io.swagger.oas.models.media.Schema schema85 = schema16.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        io.swagger.oas.models.media.Schema schema87 = schema16.description("no description");
        io.swagger.oas.models.media.Schema schema89 = schema87.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema91 = schema89.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = schema91.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(boolean75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(schema92);
    }

    @Test
    public void test07384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07384");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema7 = schema6.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        java.lang.Integer int17 = schema16.getMinItems();
        schema6.setAdditionalProperties(schema16);
        java.lang.String[] strArray22 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        io.swagger.oas.models.media.Schema schema25 = schema16.required((java.util.List<java.lang.String>) strList23);
        io.swagger.oas.models.media.Schema schema27 = schema16.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean32 = schema27.getDeprecated();
        schema2.setNot(schema27);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema2.maximum(bigDecimal34);
        schema35.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07385");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        schema23.setMinLength((java.lang.Integer) (-1));
        schema23.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema23.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test07386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07386");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) schema34);
        io.swagger.oas.models.media.Schema schema37 = schema34.nullable((java.lang.Boolean) true);
        schema2.setNot(schema34);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema34.externalDocs(externalDocumentation39);
        java.lang.Boolean boolean41 = schema40.getReadOnly();
        io.swagger.oas.models.media.Schema schema43 = schema40.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema51 = schema48.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList54 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean55 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean56 = strComparableList54.add((java.lang.Comparable<java.lang.String>) "");
        schema51.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList54);
        io.swagger.oas.models.media.XML xML58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema51.xml(xML58);
        io.swagger.oas.models.media.Schema schema61 = schema51.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema64.properties(strMap65);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.properties(strMap67);
        java.lang.Integer int69 = schema68.getMinItems();
        io.swagger.oas.models.media.Schema schema71 = schema68.title("no description");
        java.lang.Boolean boolean72 = schema68.getWriteOnly();
        io.swagger.oas.models.media.Schema schema74 = schema68.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = schema74.$ref("");
        io.swagger.oas.models.media.Discriminator discriminator77 = schema74.getDiscriminator();
        io.swagger.oas.models.media.Schema schema79 = schema74.title("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setAdditionalProperties(schema74);
        java.lang.Boolean boolean81 = schema51.getDeprecated();
        schema43.setDefault((java.lang.Object) boolean81);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(discriminator77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean81);
    }

    @Test
    public void test07387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07387");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        schema2.setDescription("");
        java.lang.Integer int13 = schema2.getMinProperties();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        schema37.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean40 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema schema41 = schema33.not(schema37);
        schema37.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema44 = schema25.not(schema37);
        java.lang.Integer int45 = schema44.getMinLength();
        schema44.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int48 = schema44.getMaxItems();
        io.swagger.oas.models.media.Schema schema50 = schema44.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema50.nullable((java.lang.Boolean) true);
        schema52.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        io.swagger.oas.models.media.Schema schema57 = schema55.exclusiveMinimum((java.lang.Boolean) true);
        schema57.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: -1\n    minItems: 0\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test07388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07388");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema5.getWriteOnly();
        schema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema5.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test07389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07389");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test07390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07390");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        schema10.setMaxProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema10.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = null;
        schema10.setExtensions(strMap14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema10.setXml(xML16);
        io.swagger.oas.models.media.Schema schema19 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema34.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        schema38.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean41 = schema38.getUniqueItems();
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema38);
        schema38.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema45 = schema26.not(schema38);
        java.lang.Integer int46 = schema45.getMinLength();
        schema45.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int49 = schema45.getMaxItems();
        io.swagger.oas.models.media.Schema schema51 = schema45.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema53 = schema51.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema55 = schema51.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema19.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema58 = schema56.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema60 = schema56.minProperties((java.lang.Integer) (-1));
        java.lang.Class<?> wildcardClass61 = schema60.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(discriminator35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test07391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07391");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        schema26.setNot(schema32);
        io.swagger.oas.models.media.Schema schema41 = schema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema26.setDiscriminator(discriminator42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema26.maximum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema26.type("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        schema47.setExternalDocs(externalDocumentation48);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test07392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07392");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator8 = schema2.getDiscriminator();
        java.lang.String str9 = schema2.getDescription();
        io.swagger.oas.models.media.Schema schema11 = schema2.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema11.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(discriminator8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test07393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07393");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        schema20.setAdditionalProperties(schema30);
        java.lang.String[] strArray36 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema30.required((java.util.List<java.lang.String>) strList37);
        schema12.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.lang.Integer int54 = schema53.getMinItems();
        schema43.setAdditionalProperties(schema53);
        java.math.BigDecimal bigDecimal56 = null;
        schema53.setMaximum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema53.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) schema53);
        io.swagger.oas.models.media.Discriminator discriminator61 = null;
        schema60.setDiscriminator(discriminator61);
        schema60.setPattern("no description");
        io.swagger.oas.models.media.Schema schema66 = schema60.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema68 = schema66.minLength((java.lang.Integer) 100);
        schema66.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test07394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07394");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        io.swagger.oas.models.media.Discriminator discriminator29 = schema28.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema32.getUniqueItems();
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema42.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean45 = schema42.getReadOnly();
        io.swagger.oas.models.media.Schema schema47 = schema42.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = schema32.not(schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema52 = schema51.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema54 = schema51.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList57 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean58 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean59 = strComparableList57.add((java.lang.Comparable<java.lang.String>) "");
        schema54.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList57);
        schema48.setNot(schema54);
        io.swagger.oas.models.media.Schema schema63 = schema48.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        schema48.setDiscriminator(discriminator64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema48.maximum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema20.addProperties("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema48);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema48.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema48.pattern("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(discriminator29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test07395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07395");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        io.swagger.oas.models.media.Schema schema40 = schema37.description("#/components/schemas/no description");
        schema37.setName("hi!");
        java.lang.String str43 = schema37.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test07396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07396");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema4 = strComparableSchema0.pattern("no description");
        io.swagger.oas.models.media.Schema schema6 = schema4.format("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = null;
        schema6.setExternalDocs(externalDocumentation7);
        java.math.BigDecimal bigDecimal9 = null;
        schema6.setMultipleOf(bigDecimal9);
        schema6.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema6.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema13);
    }

    @Test
    public void test07397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07397");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.lang.String str19 = schema18.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.lang.String str23 = schema22.get$ref();
        io.swagger.oas.models.media.Schema schema25 = schema22.name("no description");
        schema25.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema18.not(schema25);
        io.swagger.oas.models.media.Schema schema29 = schema2.example((java.lang.Object) schema25);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema29.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema29.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test07398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07398");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.math.BigDecimal bigDecimal22 = schema12.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema12.minimum(bigDecimal23);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema27.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema30 = schema27.getNot();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema27.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("hi!");
        schema12.setExample((java.lang.Object) schema34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = schema34.getProperties();
        io.swagger.oas.models.media.Schema schema38 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        schema57.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema64 = schema45.not(schema57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.properties(strMap68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        io.swagger.oas.models.media.Discriminator discriminator72 = schema71.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        schema75.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean78 = schema75.getUniqueItems();
        io.swagger.oas.models.media.Schema schema79 = schema71.not(schema75);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList80 = schema75.getEnum();
        io.swagger.oas.models.media.Schema schema82 = schema75.type("hi!");
        schema75.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema85 = schema45.example((java.lang.Object) schema75);
        schema85.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema85.xml(xML88);
        java.lang.String str90 = schema85.getFormat();
        io.swagger.oas.models.media.Schema schema91 = schema34.additionalProperties(schema85);
        java.lang.String str92 = schema91.getName();
        java.math.BigDecimal bigDecimal93 = schema91.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(strComparableList80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNull(bigDecimal93);
    }

    @Test
    public void test07399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07399");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema2.setNot(schema12);
        io.swagger.oas.models.media.Schema schema15 = schema2.description("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        schema15.setExternalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema15.$ref("hi!");
        java.lang.String str20 = schema19.getTitle();
        schema19.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int23 = schema19.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test07400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07400");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema32 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema22.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema34.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
    }

    @Test
    public void test07401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07401");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean5 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema7 = schema2.format("hi!");
        schema2.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test07402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07402");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        java.lang.Integer int7 = schema2.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema2.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal10 = schema2.getMinimum();
        schema2.setDescription("");
        java.lang.Integer int13 = schema2.getMinProperties();
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema29.properties(strMap30);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        io.swagger.oas.models.media.Discriminator discriminator34 = schema33.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        schema37.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean40 = schema37.getUniqueItems();
        io.swagger.oas.models.media.Schema schema41 = schema33.not(schema37);
        schema37.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema44 = schema25.not(schema37);
        java.lang.Integer int45 = schema44.getMinLength();
        schema44.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int48 = schema44.getMaxItems();
        io.swagger.oas.models.media.Schema schema50 = schema44.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema52 = schema50.nullable((java.lang.Boolean) true);
        schema52.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema52);
        schema55.setName("#/components/schemas/no description");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test07403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07403");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema34 = schema24.minItems((java.lang.Integer) 10);
        schema34.setMinLength((java.lang.Integer) 100);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        schema34.setDiscriminator(discriminator39);
        io.swagger.oas.models.media.Schema schema41 = schema2.addProperties("no description", schema34);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema2.xml(xML42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test07404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07404");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema26.getDefault();
        java.math.BigDecimal bigDecimal30 = strComparableSchema26.getMinimum();
        schema20.addExtension("hi!", (java.lang.Object) bigDecimal30);
        schema20.setMinLength((java.lang.Integer) 1);
        schema20.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema20.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML38 = null;
        schema20.setXml(xML38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema20.setXml(xML40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test07405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07405");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema2.multipleOf(bigDecimal15);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema16.xml(xML18);
        schema19.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07406");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        java.lang.String str24 = schema23.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema27.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        schema30.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema33 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema33.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        io.swagger.oas.models.media.Discriminator discriminator40 = schema39.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        schema43.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean46 = schema43.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema43);
        io.swagger.oas.models.media.Schema schema48 = schema30.additionalProperties(schema43);
        schema48.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema23.not(schema48);
        io.swagger.oas.models.media.Schema schema52 = schema23.getNot();
        io.swagger.oas.models.media.Schema schema53 = schema12.not(schema23);
        java.lang.String str54 = schema12.get$ref();
        schema12.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema58 = schema12.pattern("#/components/schemas/no description");
        java.math.BigDecimal bigDecimal59 = null;
        schema58.setMinimum(bigDecimal59);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema58.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(strMap61);
    }

    @Test
    public void test07407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07407");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        boolean boolean6 = serverListOptional1.isPresent();
        java.lang.String str7 = serverListOptional1.toString();
        boolean boolean8 = serverListOptional1.isPresent();
        boolean boolean9 = serverListOptional1.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        schema16.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema16.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxLength((java.lang.Integer) 100);
        boolean boolean74 = schema54.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema76 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema54.minimum(bigDecimal77);
        boolean boolean79 = serverListOptional1.equals((java.lang.Object) bigDecimal77);
        boolean boolean80 = serverListOptional1.isPresent();
        boolean boolean81 = serverListOptional1.isPresent();
        boolean boolean82 = serverListOptional1.isPresent();
        java.lang.String str83 = serverListOptional1.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Optional.empty" + "'", str7, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Optional.empty" + "'", str83, "Optional.empty");
    }

    @Test
    public void test07408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07408");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema9.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema12 = schema9.format("no description");
        schema12.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean28 = schema25.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema25);
        io.swagger.oas.models.media.Schema schema30 = schema12.additionalProperties(schema25);
        schema30.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema5.not(schema30);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema5.discriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test07409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07409");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        io.swagger.oas.models.media.Schema schema63 = schema61.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.discriminator(discriminator64);
        java.lang.Comparable<java.lang.String> strComparable66 = null;
        schema65.addEnumItemObject(strComparable66);
        io.swagger.oas.models.media.Schema schema69 = schema65.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal70 = schema69.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
    }

    @Test
    public void test07410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07410");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.$ref("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        java.lang.Integer int58 = schema57.getMinLength();
        schema57.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema61 = schema31.additionalProperties(schema57);
        java.lang.Integer int62 = schema57.getMaxItems();
        java.lang.Boolean boolean63 = schema57.getUniqueItems();
        java.math.BigDecimal bigDecimal64 = schema57.getMaximum();
        java.lang.Integer int65 = schema57.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(boolean63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNull(int65);
    }

    @Test
    public void test07411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07411");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean24 = schema23.getReadOnly();
        java.lang.Boolean boolean25 = schema23.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        java.math.BigDecimal bigDecimal28 = schema23.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test07412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07412");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Schema schema7 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = schema2.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema11 = schema9.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean12 = schema9.getNullable();
        java.math.BigDecimal bigDecimal13 = null;
        schema9.setMultipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema19 = schema18.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema21 = schema18.format("no description");
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        java.lang.Integer int49 = schema48.getMinLength();
        schema48.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int52 = schema48.getMaxItems();
        schema21.setExample((java.lang.Object) int52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        io.swagger.oas.models.media.Discriminator discriminator61 = schema60.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        schema64.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean67 = schema64.getUniqueItems();
        io.swagger.oas.models.media.Schema schema68 = schema60.not(schema64);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList69 = schema64.getEnum();
        io.swagger.oas.models.media.Schema schema71 = schema64.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) true);
        schema64.addExtension("", (java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema80 = schema77.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema82 = schema77.maxItems((java.lang.Integer) 0);
        java.lang.String str83 = schema77.getFormat();
        schema21.setExample((java.lang.Object) schema77);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema21.externalDocs(externalDocumentation85);
        schema9.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema86);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strComparableList69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test07413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07413");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema18.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema18.minLength((java.lang.Integer) 0);
        schema22.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator25 = null;
        schema22.setDiscriminator(discriminator25);
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema22.minimum(bigDecimal27);
        java.lang.Boolean boolean29 = schema28.getReadOnly();
        java.lang.Boolean boolean30 = schema28.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test07414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07414");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema23.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema23.xml(xML29);
        java.lang.Boolean boolean31 = schema23.getWriteOnly();
        schema23.setNullable((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema23.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test07415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07415");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        io.swagger.oas.models.media.Discriminator discriminator18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema5.discriminator(discriminator18);
        schema19.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07416");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        java.lang.Boolean boolean12 = schema9.getDeprecated();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema9.xml(xML13);
        schema9.setMinProperties((java.lang.Integer) 1);
        java.lang.Class<?> wildcardClass17 = schema9.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test07417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07417");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema6.not(schema20);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema25.minProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema27.type("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.maximum(bigDecimal32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test07418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07418");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        io.swagger.oas.models.media.Schema schema25 = schema18.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.lang.Integer int39 = schema38.getMinItems();
        schema28.setAdditionalProperties(schema38);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.discriminator(discriminator41);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema51 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema53 = strComparableSchema51.maxProperties((java.lang.Integer) 10);
        schema53.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean56 = schema53.getUniqueItems();
        io.swagger.oas.models.media.Schema schema57 = schema49.not(schema53);
        io.swagger.oas.models.media.Schema schema59 = schema49.minItems((java.lang.Integer) 10);
        schema59.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean62 = schema59.getNullable();
        java.math.BigDecimal bigDecimal63 = schema59.getMaximum();
        io.swagger.oas.models.media.Schema schema65 = schema59.maxLength((java.lang.Integer) (-1));
        schema42.setNot(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema25.additionalProperties(schema42);
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema42.maximum(bigDecimal68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema42.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strMap70);
    }

    @Test
    public void test07419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07419");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        schema29.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema29);
        schema29.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema17.not(schema29);
        schema10.setExample((java.lang.Object) schema17);
        java.lang.String str38 = schema10.get$ref();
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema10.description("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 10\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int43 = schema42.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test07420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07420");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj1 = strComparableSchema0.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap2 = null;
        io.swagger.oas.models.media.Schema schema3 = strComparableSchema0.properties(strMap2);
        schema3.addEnumItemObject((java.lang.Comparable<java.lang.String>) "");
        java.lang.Integer int6 = schema3.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.properties(strMap10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        io.swagger.oas.models.media.Discriminator discriminator14 = schema13.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        schema17.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = schema17.getUniqueItems();
        io.swagger.oas.models.media.Schema schema21 = schema13.not(schema17);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList22 = schema17.getEnum();
        io.swagger.oas.models.media.Schema schema24 = schema17.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) true);
        schema17.addExtension("", (java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema33 = schema30.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema30.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema30.xml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema37.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema3.example((java.lang.Object) false);
        schema42.setType("");
        schema42.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNull(obj1);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(discriminator14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(strComparableList22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test07421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07421");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema schema23 = schema5.additionalProperties(schema18);
        java.lang.String[] strArray26 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        schema18.setRequired((java.util.List<java.lang.String>) strList27);
        io.swagger.oas.models.media.Schema schema30 = schema18.getAdditionalProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        schema18.setProperties(strMap31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema18.maximum(bigDecimal33);
        io.swagger.oas.models.media.Schema schema36 = schema34.name("");
        schema34.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07422");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray6 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray6);
        io.swagger.oas.models.servers.Server[] serverArray8 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList9 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList9, serverArray8);
        java.util.List<io.swagger.oas.models.servers.Server> serverList11 = serverListOptional7.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList9);
        io.swagger.oas.annotations.servers.Server[] serverArray12 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray12);
        io.swagger.oas.models.servers.Server[] serverArray14 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList15 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList15, serverArray14);
        java.util.List<io.swagger.oas.models.servers.Server> serverList17 = serverListOptional13.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList15);
        boolean boolean18 = serverListOptional13.isPresent();
        boolean boolean19 = serverListOptional13.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        io.swagger.oas.models.servers.Server[] serverArray22 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList23 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList23, serverArray22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        java.util.List<io.swagger.oas.models.servers.Server> serverList26 = serverListOptional13.orElse(serverList25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList27 = serverListOptional7.orElse(serverList25);
        java.util.List<io.swagger.oas.models.servers.Server> serverList28 = serverListOptional5.orElse(serverList25);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = java.util.Optional.of(serverList28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema35 = schema32.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema36 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema38 = strComparableSchema36.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.lang.Integer int43 = schema42.getMinItems();
        schema32.setAdditionalProperties(schema42);
        java.lang.String[] strArray48 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        io.swagger.oas.models.media.Schema schema51 = schema42.required((java.util.List<java.lang.String>) strList49);
        java.lang.String str52 = schema42.get$ref();
        io.swagger.oas.models.media.Schema schema54 = schema42.minProperties((java.lang.Integer) 0);
        boolean boolean55 = serverListOptional29.equals((java.lang.Object) schema42);
        java.lang.String str56 = serverListOptional29.toString();
        java.lang.String str57 = serverListOptional29.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.lang.String str61 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema63 = schema60.name("no description");
        schema63.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.discriminator(discriminator66);
        io.swagger.oas.models.media.Schema schema69 = schema63.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList70 = schema69.getEnum();
        java.lang.Boolean boolean71 = schema69.getNullable();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList72 = schema69.getEnum();
        io.swagger.oas.models.media.Schema schema74 = schema69.deprecated((java.lang.Boolean) false);
        boolean boolean75 = serverListOptional29.equals((java.lang.Object) false);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArray6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(serverList11);
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertNotNull(serverArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(serverList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertNotNull(serverList26);
        org.junit.Assert.assertNotNull(serverList27);
        org.junit.Assert.assertNotNull(serverList28);
        org.junit.Assert.assertNotNull(serverListOptional29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Optional[[]]" + "'", str56, "Optional[[]]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Optional[[]]" + "'", str57, "Optional[[]]");
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(strComparableList70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNull(strComparableList72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test07423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07423");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema schema7 = schema5.pattern("");
        java.lang.Integer int8 = schema7.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        schema15.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        schema28.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean31 = schema28.getUniqueItems();
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema28);
        io.swagger.oas.models.media.Schema schema33 = schema15.additionalProperties(schema28);
        java.lang.String str34 = schema28.getFormat();
        java.lang.Integer int35 = schema28.getMinProperties();
        schema7.addExtension("hi!", (java.lang.Object) int35);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema7.getExtensions();
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema7.minimum(bigDecimal38);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        schema42.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema45 = schema42.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional46 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema42);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        schema42.setNot(schema52);
        java.lang.String str54 = schema52.get$ref();
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.xml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema52.title("#/components/schemas/");
        java.util.List<java.lang.String> strList59 = null;
        schema52.setRequired(strList59);
        java.lang.String[] strArray67 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        io.swagger.oas.models.media.Schema schema70 = schema52.required((java.util.List<java.lang.String>) strList68);
        java.util.List<java.lang.String> strList71 = schema52.getRequired();
        io.swagger.oas.models.media.Schema schema72 = schema7.required(strList71);
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional73 = java.util.Optional.of((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema7);
        io.swagger.oas.models.media.Schema schema75 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional73);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test07424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07424");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.String[] strArray11 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        schema5.setRequired((java.util.List<java.lang.String>) strList12);
        schema5.setWriteOnly((java.lang.Boolean) false);
        schema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema5.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.xml(xML21);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList31 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean32 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean33 = strComparableList31.add((java.lang.Comparable<java.lang.String>) "");
        schema28.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList31);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxItems((java.lang.Integer) 1);
        java.lang.String str37 = schema36.toString();
        io.swagger.oas.models.media.Schema schema39 = schema36.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        schema42.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = schema42.title("no description");
        io.swagger.oas.models.media.Schema schema48 = schema42.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        schema51.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema55 = schema51.title("no description");
        io.swagger.oas.models.media.Schema schema56 = schema42.additionalProperties(schema51);
        java.lang.Object obj57 = schema51.getExample();
        io.swagger.oas.models.media.Schema schema59 = schema51.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema61 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema62 = schema59.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema61);
        io.swagger.oas.models.media.Schema schema64 = schema62.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema66 = schema64.pattern("");
        schema64.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap69 = schema64.getProperties();
        io.swagger.oas.models.media.Schema schema70 = schema36.properties(strMap69);
        io.swagger.oas.models.media.Schema schema71 = schema20.properties(strMap69);
        io.swagger.oas.models.media.Schema schema73 = schema20.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
    }

    @Test
    public void test07425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07425");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean11 = schema5.getExclusiveMinimum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList12 = schema5.getEnum();
        schema5.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        java.lang.Integer int22 = schema21.getMinItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("no description");
        io.swagger.oas.models.media.Schema schema26 = schema24.type("no description");
        io.swagger.oas.models.media.Schema schema28 = schema26.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema5.additionalProperties(schema26);
        io.swagger.oas.models.media.Schema schema31 = schema5.deprecated((java.lang.Boolean) false);
        schema31.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNull(strComparableList12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test07426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07426");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable29 = strComparableSchema26.getDefault();
        java.math.BigDecimal bigDecimal30 = strComparableSchema26.getMinimum();
        schema20.addExtension("hi!", (java.lang.Object) bigDecimal30);
        schema20.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML34 = schema20.getXml();
        schema20.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema20.xml(xML37);
        java.lang.String str39 = schema38.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparable29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test07427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07427");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema2.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int8 = schema2.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema17 = schema11.minLength((java.lang.Integer) 0);
        schema17.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema17.type("hi!");
        io.swagger.oas.models.media.Schema schema23 = schema17.description("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema17.type("no description");
        schema17.setName("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema17.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema32.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional36 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema40 = schema39.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema42 = schema39.format("no description");
        schema32.setNot(schema42);
        schema32.setNullable((java.lang.Boolean) false);
        schema29.setAdditionalProperties(schema32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = schema32.getProperties();
        io.swagger.oas.models.media.Schema schema49 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema32.properties(strMap50);
        io.swagger.oas.models.media.Schema schema52 = schema2.not(schema51);
        schema51.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07428");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.not(schema5);
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 10);
        java.lang.Boolean boolean9 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.properties(strMap15);
        schema16.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema schema54 = schema16.example((java.lang.Object) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMinimum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxLength((java.lang.Integer) 100);
        boolean boolean74 = schema54.equals((java.lang.Object) 100);
        io.swagger.oas.models.media.Schema schema76 = schema54.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema79 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/no description\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.math.BigDecimal bigDecimal80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema79.multipleOf(bigDecimal80);
        java.lang.Integer int82 = schema81.getMinItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema83 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema85 = strComparableSchema83.maxProperties((java.lang.Integer) 10);
        java.lang.String str86 = schema85.get$ref();
        io.swagger.oas.models.media.Schema schema88 = schema85.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema85.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        schema90.setExternalDocs(externalDocumentation91);
        java.lang.String str93 = schema90.getFormat();
        io.swagger.oas.models.media.Schema schema94 = schema81.additionalProperties(schema90);
        schema81.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test07429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07429");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        schema15.setTitle("");
        java.math.BigDecimal bigDecimal18 = schema15.getMultipleOf();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema15.discriminator(discriminator19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07430");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema28 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema30 = schema28.name("Optional[[]]");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema34 = schema33.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema36 = schema33.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.lang.Integer int44 = schema43.getMinItems();
        schema33.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema52.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.properties(strMap57);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        io.swagger.oas.models.media.Discriminator discriminator61 = schema60.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema62 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema64 = strComparableSchema62.maxProperties((java.lang.Integer) 10);
        schema64.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean67 = schema64.getUniqueItems();
        io.swagger.oas.models.media.Schema schema68 = schema60.not(schema64);
        schema64.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema71 = schema52.not(schema64);
        io.swagger.oas.models.media.Schema schema73 = schema71.deprecated((java.lang.Boolean) false);
        schema33.setAdditionalProperties(schema71);
        io.swagger.oas.models.media.Schema schema76 = schema71.nullable((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList77 = null;
        schema76.setRequired(strList77);
        io.swagger.oas.models.media.Schema schema80 = schema76.name("Optional.empty");
        io.swagger.oas.models.media.Schema schema82 = schema80.$ref("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean83 = schema80.getWriteOnly();
        java.lang.String str84 = schema80.getDescription();
        schema28.setNot(schema80);
        io.swagger.oas.models.media.Schema schema87 = schema80.addRequiredItem("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test07431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07431");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema schema14 = schema2.maxLength((java.lang.Integer) 0);
        java.lang.Integer int15 = schema14.getMaxItems();
        java.lang.String str16 = schema14.getPattern();
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test07432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07432");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional3 = java.util.Optional.of(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server[] serverArray5 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray5);
        java.util.List<io.swagger.oas.models.servers.Server> serverList7 = null;
        java.util.List<io.swagger.oas.models.servers.Server> serverList8 = serverListOptional6.orElse(serverList7);
        boolean boolean9 = serverListOptional6.isPresent();
        io.swagger.oas.annotations.servers.Server[] serverArray10 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray10);
        io.swagger.oas.models.servers.Server[] serverArray12 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList13 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList13, serverArray12);
        java.util.List<io.swagger.oas.models.servers.Server> serverList15 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList13);
        boolean boolean16 = serverListOptional11.isPresent();
        java.lang.String str17 = serverListOptional11.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        schema23.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        io.swagger.oas.models.media.Schema schema41 = schema23.additionalProperties(schema36);
        java.lang.String[] strArray44 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        schema36.setRequired((java.util.List<java.lang.String>) strList45);
        boolean boolean48 = serverListOptional11.equals((java.lang.Object) strList45);
        io.swagger.oas.annotations.servers.Server[] serverArray49 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional50 = io.swagger.jaxrs2.OperationParser.getServers(serverArray49);
        io.swagger.oas.models.servers.Server[] serverArray51 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList52 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList52, serverArray51);
        java.util.List<io.swagger.oas.models.servers.Server> serverList54 = serverListOptional50.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList52);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional55 = java.util.Optional.ofNullable(serverList54);
        java.util.List<io.swagger.oas.models.servers.Server> serverList56 = serverListOptional11.orElse(serverList54);
        io.swagger.oas.models.servers.Server[] serverArray57 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList58 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList58, serverArray57);
        java.util.Optional<java.util.AbstractList<io.swagger.oas.models.servers.Server>> serverListOptional60 = java.util.Optional.of((java.util.AbstractList<io.swagger.oas.models.servers.Server>) serverList58);
        java.util.List<io.swagger.oas.models.servers.Server> serverList61 = serverListOptional11.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList58);
        java.util.List<io.swagger.oas.models.servers.Server> serverList62 = serverListOptional6.orElse(serverList61);
        java.util.List<io.swagger.oas.models.servers.Server> serverList63 = serverListOptional4.orElse(serverList61);
        java.lang.String str64 = serverListOptional4.toString();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj66 = strComparableSchema65.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap67 = null;
        io.swagger.oas.models.media.Schema schema68 = strComparableSchema65.properties(strMap67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        boolean boolean71 = serverListOptional4.equals((java.lang.Object) schema68);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverArrayOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverArray5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertNull(serverList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(serverArray10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertNotNull(serverArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(serverList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Optional.empty" + "'", str17, "Optional.empty");
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(serverArray49);
        org.junit.Assert.assertNotNull(serverListOptional50);
        org.junit.Assert.assertNotNull(serverArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(serverList54);
        org.junit.Assert.assertNotNull(serverListOptional55);
        org.junit.Assert.assertNotNull(serverList56);
        org.junit.Assert.assertNotNull(serverArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(serverListOptional60);
        org.junit.Assert.assertNotNull(serverList61);
        org.junit.Assert.assertNotNull(serverList62);
        org.junit.Assert.assertNotNull(serverList63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Optional.empty" + "'", str64, "Optional.empty");
        org.junit.Assert.assertNull(obj66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test07433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07433");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.XML xML15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema6.xml(xML15);
        schema16.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema20 = schema16.readOnly((java.lang.Boolean) true);
        java.lang.Integer int21 = schema16.getMinProperties();
        schema16.setDeprecated((java.lang.Boolean) false);
        schema16.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test07434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07434");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        schema2.setFormat("");
        java.lang.Integer int46 = schema2.getMinItems();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema2.maximum(bigDecimal47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema2.multipleOf(bigDecimal49);
        io.swagger.oas.models.media.Schema schema52 = schema2.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test07435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07435");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable3 = strComparableSchema0.getDefault();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation4 = strComparableSchema0.getExternalDocs();
        java.math.BigDecimal bigDecimal5 = strComparableSchema0.getMinimum();
        io.swagger.oas.models.media.Discriminator discriminator6 = null;
        io.swagger.oas.models.media.Schema schema7 = strComparableSchema0.discriminator(discriminator6);
        io.swagger.oas.models.media.Schema schema9 = schema7.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.minLength((java.lang.Integer) (-1));
        java.lang.String str12 = schema11.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema19.get$ref();
        io.swagger.oas.models.media.Schema schema22 = schema19.name("no description");
        schema22.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema15.not(schema22);
        java.lang.Boolean boolean26 = schema22.getReadOnly();
        java.lang.Boolean boolean27 = schema22.getExclusiveMinimum();
        java.lang.Integer int28 = schema22.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema30 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema32 = strComparableSchema30.maxProperties((java.lang.Integer) 10);
        schema32.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema32.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional36 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema32);
        java.lang.Integer int37 = schema32.getMinProperties();
        java.math.BigDecimal bigDecimal38 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema schema39 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema32);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = schema42.getAdditionalProperties();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList44 = schema42.getEnum();
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema49.format("no description");
        io.swagger.oas.models.media.Schema schema54 = schema52.pattern("");
        java.lang.Integer int55 = schema54.getMinLength();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema60 = schema59.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema62 = schema59.format("no description");
        schema62.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.properties(strMap68);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        io.swagger.oas.models.media.Discriminator discriminator72 = schema71.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        schema75.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean78 = schema75.getUniqueItems();
        io.swagger.oas.models.media.Schema schema79 = schema71.not(schema75);
        io.swagger.oas.models.media.Schema schema80 = schema62.additionalProperties(schema75);
        java.lang.String str81 = schema75.getFormat();
        java.lang.Integer int82 = schema75.getMinProperties();
        schema54.addExtension("hi!", (java.lang.Object) int82);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = schema54.getExtensions();
        schema46.setExtensions(strMap84);
        schema32.setExtensions(strMap84);
        schema11.setExtensions(strMap84);
        schema11.setMaxItems((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(strComparable3);
        org.junit.Assert.assertNull(externalDocumentation4);
        org.junit.Assert.assertNull(bigDecimal5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertEquals("'" + boolean27 + "' != '" + false + "'", boolean27, false);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(schema43);
        org.junit.Assert.assertNull(strComparableList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(boolean78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test07436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07436");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema schema16 = schema2.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema19.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = schema19.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.lang.Integer int30 = schema29.getMinItems();
        schema19.setAdditionalProperties(schema29);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.properties(strMap35);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        io.swagger.oas.models.media.Discriminator discriminator39 = schema38.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema40 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema42 = strComparableSchema40.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema44.properties(strMap45);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean53 = schema50.getUniqueItems();
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema50);
        schema50.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema57 = schema38.not(schema50);
        io.swagger.oas.models.media.Schema schema59 = schema57.deprecated((java.lang.Boolean) false);
        schema19.setAdditionalProperties(schema57);
        schema19.setFormat("");
        java.lang.Integer int63 = schema19.getMinItems();
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema19.maximum(bigDecimal64);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema66 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        java.lang.Object obj67 = strComparableSchema66.getExample();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema66.properties(strMap68);
        io.swagger.oas.models.media.Schema schema71 = strComparableSchema66.$ref("hi!");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList76 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean77 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean78 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "no description");
        boolean boolean79 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean80 = strComparableList76.add((java.lang.Comparable<java.lang.String>) "Optional.empty");
        strComparableSchema66.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList76);
        schema19.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList76);
        schema16.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList76);
        java.lang.Boolean boolean84 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema schema86 = schema16.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(discriminator39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(obj67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + boolean84 + "' != '" + true + "'", boolean84, true);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test07437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07437");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema25.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean30 = schema29.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        schema49.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean52 = schema49.getUniqueItems();
        io.swagger.oas.models.media.Schema schema53 = schema45.not(schema49);
        schema49.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema56 = schema37.not(schema49);
        java.lang.String str57 = schema49.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema58 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema60 = strComparableSchema58.maxProperties((java.lang.Integer) 10);
        java.lang.String str61 = schema60.get$ref();
        io.swagger.oas.models.media.Schema schema63 = schema60.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator64 = schema60.getDiscriminator();
        boolean boolean65 = schema49.equals((java.lang.Object) discriminator64);
        schema49.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema49.minimum(bigDecimal68);
        java.lang.Boolean boolean70 = schema49.getNullable();
        io.swagger.oas.models.media.Schema schema71 = schema49.getAdditionalProperties();
        io.swagger.oas.models.media.XML xML72 = null;
        schema49.setXml(xML72);
        io.swagger.oas.models.media.Schema schema74 = schema29.additionalProperties(schema49);
        schema49.setType("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "hi!" + "'", str57, "hi!");
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean70);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test07438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07438");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        java.lang.String str30 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema32 = schema29.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator33 = schema29.getDiscriminator();
        boolean boolean34 = schema18.equals((java.lang.Object) discriminator33);
        schema18.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema18.minimum(bigDecimal37);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.externalDocs(externalDocumentation41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = schema40.getProperties();
        schema40.setMinItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema40.multipleOf(bigDecimal46);
        java.lang.Boolean boolean48 = schema40.getExclusiveMaximum();
        java.util.Optional<java.lang.Object> objOptional49 = java.util.Optional.ofNullable((java.lang.Object) boolean48);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(objOptional49);
    }

    @Test
    public void test07439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07439");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        java.lang.Boolean boolean10 = schema2.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.lang.Integer int18 = schema17.getMinItems();
        io.swagger.oas.models.media.Schema schema20 = schema17.title("no description");
        java.lang.Boolean boolean21 = schema17.getWriteOnly();
        io.swagger.oas.models.media.Schema schema23 = schema17.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema17.$ref("");
        schema2.setAdditionalProperties(schema25);
        java.lang.String str27 = schema25.getName();
        java.lang.Object obj28 = schema25.getExample();
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.xml(xML29);
        java.lang.String str31 = schema30.toString();
        schema30.set$ref("hi!");
        java.lang.String str34 = schema30.getType();
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.properties(strMap42);
        io.swagger.oas.models.media.Discriminator discriminator44 = schema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        schema47.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean50 = schema47.getUniqueItems();
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema47);
        schema51.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str54 = schema51.getTitle();
        io.swagger.oas.models.media.Schema schema56 = schema51.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema51.getNot();
        java.lang.Integer int58 = schema57.getMaxItems();
        io.swagger.oas.models.media.Schema schema60 = schema57.deprecated((java.lang.Boolean) true);
        schema57.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean63 = schema57.getDeprecated();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema64 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema66 = strComparableSchema64.maxProperties((java.lang.Integer) 10);
        schema66.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema70 = schema66.title("no description");
        java.lang.Boolean boolean71 = schema66.getNullable();
        schema66.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema66.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema76 = schema57.example((java.lang.Object) (-1));
        schema30.setExample((java.lang.Object) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(obj28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str31, "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + boolean63 + "' != '" + true + "'", boolean63, true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test07440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07440");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator6 = schema2.getDiscriminator();
        schema2.setType("no description");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema2.type("no description");
        schema12.setMaxItems((java.lang.Integer) 10);
        java.lang.Integer int15 = schema12.getMinItems();
        io.swagger.oas.models.media.Schema schema17 = schema12.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(discriminator6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test07441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07441");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML17 = null;
        schema6.setXml(xML17);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = schema6.getExtensions();
        io.swagger.oas.models.media.Schema schema21 = schema6.uniqueItems((java.lang.Boolean) true);
        schema21.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test07442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07442");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema15 = schema2.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema15.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.maxItems((java.lang.Integer) 100);
        schema21.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.lang.String str27 = schema26.get$ref();
        io.swagger.oas.models.media.Schema schema29 = schema26.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator30 = schema26.getDiscriminator();
        java.lang.String str31 = schema26.getDescription();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema40.properties(strMap41);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.properties(strMap43);
        java.lang.Integer int45 = schema44.getMinItems();
        schema34.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.discriminator(discriminator47);
        java.lang.Integer int49 = schema44.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema50 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema52 = strComparableSchema50.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema52.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema55 = schema52.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema56 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema58 = strComparableSchema56.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.properties(strMap59);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema60.properties(strMap61);
        java.lang.Integer int63 = schema62.getMinItems();
        schema52.setAdditionalProperties(schema62);
        java.lang.String[] strArray68 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        io.swagger.oas.models.media.Schema schema71 = schema62.required((java.util.List<java.lang.String>) strList69);
        schema44.setRequired((java.util.List<java.lang.String>) strList69);
        io.swagger.oas.models.media.Schema schema73 = schema26.required((java.util.List<java.lang.String>) strList69);
        schema21.setRequired((java.util.List<java.lang.String>) strList69);
        java.lang.String str75 = schema21.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema21.discriminator(discriminator76);
        java.lang.String str78 = schema77.getName();
        io.swagger.oas.models.media.Discriminator discriminator79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema77.discriminator(discriminator79);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test07443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07443");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema7 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema9 = strComparableSchema7.maxProperties((java.lang.Integer) 10);
        java.lang.String str10 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.get$ref();
        io.swagger.oas.models.media.Schema schema16 = schema13.name("no description");
        schema16.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema9.not(schema16);
        io.swagger.oas.models.media.Schema schema20 = schema2.not(schema16);
        io.swagger.oas.models.media.Schema schema22 = schema2.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.lang.Integer int36 = schema35.getMinItems();
        schema25.setAdditionalProperties(schema35);
        java.math.BigDecimal bigDecimal38 = null;
        schema35.setMinimum(bigDecimal38);
        java.math.BigDecimal bigDecimal40 = schema35.getMaximum();
        schema22.setNot(schema35);
        schema35.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str44 = schema35.getName();
        io.swagger.oas.models.media.Schema schema46 = schema35.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test07444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07444");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.Integer int26 = schema25.getMinLength();
        schema25.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int29 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema schema31 = schema25.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.$ref("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema35.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test07445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07445");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        schema6.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.Integer int21 = schema20.getMinItems();
        schema20.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema6.addProperties("hi!", schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema25 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema27 = strComparableSchema25.maxProperties((java.lang.Integer) 10);
        schema24.setNot(schema27);
        schema27.setName("");
        io.swagger.oas.models.media.Schema schema32 = schema27.pattern("Optional.empty");
        java.lang.String str33 = schema27.getName();
        schema27.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema27.minimum(bigDecimal36);
        io.swagger.oas.models.media.Schema schema39 = schema27.readOnly((java.lang.Boolean) true);
        schema27.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test07446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07446");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.discriminator(discriminator17);
        schema16.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema22 = schema16.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.lang.String str29 = schema28.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema28.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema28.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema33.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema24.addProperties("Optional[[]]", schema33);
        io.swagger.oas.models.media.Schema schema38 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema38.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str41 = schema38.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test07447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07447");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setWriteOnly((java.lang.Boolean) false);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.discriminator(discriminator17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema18.getExternalDocs();
        java.lang.Object obj20 = schema18.getExample();
        java.lang.String str21 = schema18.getPattern();
        io.swagger.oas.models.media.Schema schema23 = schema18.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNull(obj20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test07448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07448");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema67.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.addProperties("no description", schema67);
        io.swagger.oas.models.media.Schema schema77 = schema12.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema79 = schema67.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema67.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test07449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07449");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = schema12.exclusiveMinimum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap15 = null;
        schema12.setProperties(strMap15);
        java.lang.Class<?> wildcardClass17 = schema12.getClass();
        java.util.Optional<java.lang.reflect.AnnotatedElement> annotatedElementOptional18 = java.util.Optional.ofNullable((java.lang.reflect.AnnotatedElement) wildcardClass17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(annotatedElementOptional18);
    }

    @Test
    public void test07450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07450");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.properties(strMap44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.properties(strMap46);
        io.swagger.oas.models.media.Discriminator discriminator48 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        io.swagger.oas.models.media.Discriminator discriminator56 = schema55.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema57 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema59 = strComparableSchema57.maxProperties((java.lang.Integer) 10);
        schema59.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean62 = schema59.getUniqueItems();
        io.swagger.oas.models.media.Schema schema63 = schema55.not(schema59);
        schema59.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema66 = schema47.not(schema59);
        java.lang.String str67 = schema59.getFormat();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        java.lang.String str71 = schema70.get$ref();
        io.swagger.oas.models.media.Schema schema73 = schema70.name("no description");
        io.swagger.oas.models.media.Discriminator discriminator74 = schema70.getDiscriminator();
        boolean boolean75 = schema59.equals((java.lang.Object) discriminator74);
        schema59.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema59.minimum(bigDecimal78);
        io.swagger.oas.models.media.Schema schema81 = schema59.addRequiredItem("");
        schema40.setNot(schema81);
        schema81.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test07451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07451");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = schema23.getXml();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.xml(xML27);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        schema31.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = schema31.title("no description");
        io.swagger.oas.models.media.Schema schema37 = schema31.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        schema40.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema44 = schema40.title("no description");
        io.swagger.oas.models.media.Schema schema45 = schema31.additionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema47 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setFormat("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        schema47.setProperties(strMap50);
        schema28.setNot(schema47);
        io.swagger.oas.models.media.XML xML53 = schema47.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(xML26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(xML53);
    }

    @Test
    public void test07452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07452");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        schema30.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema36.minLength((java.lang.Integer) 1);
        java.util.List<java.lang.String> strList39 = schema36.getRequired();
        io.swagger.oas.models.media.Schema schema41 = schema36.format("");
        java.lang.String str42 = schema36.get$ref();
        java.math.BigDecimal bigDecimal43 = null;
        schema36.setMultipleOf(bigDecimal43);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test07453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07453");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        schema6.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema6.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema6.minProperties((java.lang.Integer) 0);
        java.lang.String str21 = schema6.getTitle();
        schema6.setMinLength((java.lang.Integer) 100);
        java.lang.String str24 = schema6.getType();
        io.swagger.oas.models.media.Schema schema26 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema26.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test07454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07454");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema51 = schema50.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema53 = schema50.format("no description");
        java.lang.String str54 = schema53.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        schema60.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema67.properties(strMap68);
        io.swagger.oas.models.media.Discriminator discriminator70 = schema69.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema71 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema73 = strComparableSchema71.maxProperties((java.lang.Integer) 10);
        schema73.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean76 = schema73.getUniqueItems();
        io.swagger.oas.models.media.Schema schema77 = schema69.not(schema73);
        io.swagger.oas.models.media.Schema schema78 = schema60.additionalProperties(schema73);
        schema78.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema53.not(schema78);
        io.swagger.oas.models.media.Schema schema82 = schema53.getNot();
        schema53.setExclusiveMinimum((java.lang.Boolean) true);
        boolean boolean85 = schema2.equals((java.lang.Object) schema53);
        schema2.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07455");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema35.properties(strMap36);
        io.swagger.oas.models.media.Discriminator discriminator38 = schema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        schema41.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean44 = schema41.getUniqueItems();
        io.swagger.oas.models.media.Schema schema45 = schema37.not(schema41);
        schema41.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema48 = schema29.not(schema41);
        io.swagger.oas.models.media.Schema schema50 = schema48.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema48.exclusiveMinimum((java.lang.Boolean) false);
        schema18.setNot(schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema57 = schema56.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema59 = schema56.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList62 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean63 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean64 = strComparableList62.add((java.lang.Comparable<java.lang.String>) "");
        schema59.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema52.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        schema5.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList62);
        io.swagger.oas.models.media.Schema schema69 = schema5.minLength((java.lang.Integer) 1);
        schema69.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema69.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test07456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07456");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.lang.Integer int5 = schema4.getMinLength();
        io.swagger.oas.models.media.Schema schema7 = schema4.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema4.pattern("");
        io.swagger.oas.models.media.XML xML10 = null;
        schema4.setXml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.properties(strMap17);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        io.swagger.oas.models.media.Discriminator discriminator21 = schema20.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean27 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema28 = schema20.not(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema20.getExternalDocs();
        io.swagger.oas.models.media.Schema schema31 = schema20.deprecated((java.lang.Boolean) false);
        schema20.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema20.title("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 0\n    pattern: null\n    maxItems: 0\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setAdditionalProperties(schema20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test07457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07457");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        java.lang.Boolean boolean6 = schema2.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        schema2.setProperties(strMap7);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.externalDocs(externalDocumentation9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList26 = schema21.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema21.type("hi!");
        schema21.setType("#/components/schemas/");
        schema2.setAdditionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema33 = schema2.addRequiredItem("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.lang.String str37 = schema36.get$ref();
        io.swagger.oas.models.media.Schema schema39 = schema36.name("no description");
        java.lang.Boolean boolean40 = schema36.getWriteOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        schema36.setProperties(strMap41);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema36.externalDocs(externalDocumentation43);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList60 = schema55.getEnum();
        io.swagger.oas.models.media.Schema schema62 = schema55.type("hi!");
        schema55.setType("#/components/schemas/");
        schema36.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.XML xML66 = schema55.getXml();
        io.swagger.oas.models.media.Schema schema67 = schema33.not(schema55);
        java.math.BigDecimal bigDecimal68 = schema55.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strComparableList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strComparableList60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(bigDecimal68);
    }

    @Test
    public void test07458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07458");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.XML xML15 = null;
        schema12.setXml(xML15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.math.BigDecimal bigDecimal23 = schema19.getMaximum();
        schema12.setNot(schema19);
        io.swagger.oas.models.media.Schema schema26 = schema19.description("Optional.empty");
        java.math.BigDecimal bigDecimal27 = schema19.getMinimum();
        java.lang.Boolean boolean28 = schema19.getUniqueItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.properties(strMap32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema33.properties(strMap34);
        java.lang.Integer int36 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema38 = schema35.title("no description");
        java.lang.Boolean boolean39 = schema35.getWriteOnly();
        io.swagger.oas.models.media.Schema schema41 = schema35.nullable((java.lang.Boolean) true);
        schema35.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema45 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema47 = strComparableSchema45.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema51.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema53 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema55 = strComparableSchema53.maxProperties((java.lang.Integer) 10);
        schema55.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean58 = schema55.getUniqueItems();
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema55);
        schema59.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str62 = schema59.getTitle();
        io.swagger.oas.models.media.Schema schema64 = schema59.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema65 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        io.swagger.oas.models.media.Schema schema67 = schema65.maxProperties((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap68 = schema65.getProperties();
        io.swagger.oas.models.media.Schema schema69 = schema19.properties(strMap68);
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.xml(xML70);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test07459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07459");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        schema11.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema15 = schema11.title("no description");
        io.swagger.oas.models.media.Schema schema16 = schema2.additionalProperties(schema11);
        java.lang.Object obj17 = schema11.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema11.type("");
        io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalSchema21 = new io.swagger.oas.models.media.Schema<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>>();
        io.swagger.oas.models.media.Schema schema22 = schema19.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) serverListOptionalSchema21);
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.discriminator(discriminator23);
        io.swagger.oas.models.media.Schema schema26 = schema24.name("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test07460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07460");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        schema16.setType("hi!");
        io.swagger.oas.models.media.Schema schema19 = schema16.getNot();
        io.swagger.oas.models.media.Schema schema21 = schema16.deprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean22 = schema16.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test07461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07461");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        java.lang.Integer int53 = schema52.getMinItems();
        io.swagger.oas.models.media.Schema schema55 = schema52.title("no description");
        java.lang.Boolean boolean56 = schema52.getWriteOnly();
        io.swagger.oas.models.media.Schema schema58 = schema52.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema52.$ref("");
        java.lang.String str61 = schema52.get$ref();
        schema2.setExample((java.lang.Object) schema52);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema63 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema65 = strComparableSchema63.maxProperties((java.lang.Integer) 10);
        java.lang.String str66 = schema65.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        java.lang.String str70 = schema69.get$ref();
        io.swagger.oas.models.media.Schema schema72 = schema69.name("no description");
        schema72.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = schema65.not(schema72);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema76 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema78 = strComparableSchema76.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema79 = schema78.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema81 = schema78.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema82 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema84 = strComparableSchema82.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.properties(strMap85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema86.properties(strMap87);
        java.lang.Integer int89 = schema88.getMinItems();
        schema78.setAdditionalProperties(schema88);
        io.swagger.oas.models.media.Discriminator discriminator91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema88.discriminator(discriminator91);
        io.swagger.oas.models.media.Schema schema93 = schema65.additionalProperties(schema92);
        io.swagger.oas.models.media.Schema schema94 = schema2.not(schema65);
        java.lang.Boolean boolean95 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema schema97 = schema2.maxProperties((java.lang.Integer) 0);
        schema97.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test07462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07462");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        java.lang.Boolean boolean10 = schema6.getWriteOnly();
        io.swagger.oas.models.media.Schema schema12 = schema6.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema6.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        schema17.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema20 = schema17.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional21 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema17);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema24.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema27 = schema24.format("no description");
        schema17.setNot(schema27);
        io.swagger.oas.models.media.Schema schema30 = schema17.maxProperties((java.lang.Integer) (-1));
        java.lang.Integer int31 = schema17.getMinLength();
        schema17.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema17.writeOnly((java.lang.Boolean) true);
        boolean boolean36 = schema6.equals((java.lang.Object) schema17);
        io.swagger.oas.models.media.XML xML37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema6.xml(xML37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema20);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07463");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = schema2.description("");
        schema2.setMinProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal20 = schema2.getMultipleOf();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema2.minimum(bigDecimal21);
        io.swagger.oas.models.media.Schema schema24 = schema2.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test07464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07464");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.lang.String str6 = schema5.get$ref();
        io.swagger.oas.models.media.Schema schema8 = schema5.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema10 = schema5.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal11 = null;
        schema5.setMinimum(bigDecimal11);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema31 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema32 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema34 = strComparableSchema32.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = schema34.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema37 = schema34.format("no description");
        java.lang.String str38 = schema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema44 = schema41.format("no description");
        schema44.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        io.swagger.oas.models.media.Discriminator discriminator54 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        schema57.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean60 = schema57.getUniqueItems();
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema57);
        io.swagger.oas.models.media.Schema schema62 = schema44.additionalProperties(schema57);
        schema62.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema37.not(schema62);
        io.swagger.oas.models.media.Schema schema66 = schema37.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema68 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema70 = strComparableSchema68.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema71 = schema70.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema73 = schema70.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema74 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema76 = strComparableSchema74.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema76.properties(strMap77);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema78.properties(strMap79);
        java.lang.Integer int81 = schema80.getMinItems();
        schema70.setAdditionalProperties(schema80);
        java.math.BigDecimal bigDecimal83 = null;
        schema80.setMaximum(bigDecimal83);
        io.swagger.oas.models.media.Schema schema86 = schema80.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema88 = schema80.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema89 = schema37.addProperties("no description", schema80);
        io.swagger.oas.models.media.Schema schema90 = schema25.additionalProperties(schema80);
        io.swagger.oas.models.media.Schema schema92 = schema80.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema94 = schema80.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema96 = schema80.title("no description");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema80.externalDocs(externalDocumentation97);
        schema5.setExample((java.lang.Object) externalDocumentation97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test07465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07465");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema3 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema5 = strComparableSchema3.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema6 = schema5.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema8 = schema5.format("no description");
        schema8.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema11 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema13 = strComparableSchema11.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        io.swagger.oas.models.media.Discriminator discriminator18 = schema17.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        schema21.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean24 = schema21.getUniqueItems();
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema21);
        io.swagger.oas.models.media.Schema schema26 = schema8.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema28 = schema21.name("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Integer int42 = schema41.getMinItems();
        schema31.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.discriminator(discriminator44);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema52.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        schema56.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean59 = schema56.getUniqueItems();
        io.swagger.oas.models.media.Schema schema60 = schema52.not(schema56);
        io.swagger.oas.models.media.Schema schema62 = schema52.minItems((java.lang.Integer) 10);
        schema62.setMinLength((java.lang.Integer) 100);
        java.lang.Boolean boolean65 = schema62.getNullable();
        java.math.BigDecimal bigDecimal66 = schema62.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema62.maxLength((java.lang.Integer) (-1));
        schema45.setNot(schema68);
        io.swagger.oas.models.media.Schema schema70 = schema28.additionalProperties(schema45);
        boolean boolean71 = serverListOptional2.equals((java.lang.Object) schema28);
        java.math.BigDecimal bigDecimal72 = schema28.getMaximum();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(bigDecimal72);
    }

    @Test
    public void test07466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07466");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        java.lang.String str26 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema18.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema18.discriminator(discriminator29);
        java.lang.Boolean boolean31 = schema18.getWriteOnly();
        io.swagger.oas.models.media.Schema schema33 = schema18.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [, no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int34 = schema18.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema35 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema37 = strComparableSchema35.maxProperties((java.lang.Integer) 10);
        java.lang.String str38 = schema37.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema39 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema39.maxProperties((java.lang.Integer) 10);
        java.lang.String str42 = schema41.get$ref();
        io.swagger.oas.models.media.Schema schema44 = schema41.name("no description");
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema37.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 100);
        schema47.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean52 = schema47.getWriteOnly();
        io.swagger.oas.models.media.Schema schema54 = schema47.exclusiveMinimum((java.lang.Boolean) true);
        schema18.setNot(schema54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test07467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07467");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.String str3 = serverListOptional2.toString();
        boolean boolean4 = serverListOptional2.isPresent();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional2.get();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: No value present");
        } catch (java.util.NoSuchElementException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Optional.empty" + "'", str3, "Optional.empty");
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test07468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07468");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList15 = schema10.getEnum();
        io.swagger.oas.models.media.Schema schema17 = schema10.type("hi!");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) true);
        schema10.addExtension("", (java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.pattern("#/components/schemas/no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema31 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema33 = schema30.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        java.lang.Integer int41 = schema40.getMinItems();
        schema30.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Discriminator discriminator43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.discriminator(discriminator43);
        java.lang.Integer int45 = schema40.getMinProperties();
        io.swagger.oas.models.media.Schema schema47 = schema40.exclusiveMinimum((java.lang.Boolean) false);
        schema47.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 10\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        java.lang.Boolean boolean51 = schema26.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema26.minimum(bigDecimal52);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strComparableList15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07469");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.media.Schema schema32 = schema9.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema9.name("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.addEnumItemObject((java.lang.Comparable<java.lang.String>) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test07470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07470");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema26 = schema10.not(schema20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema27 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema29 = strComparableSchema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema29.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema32 = schema29.format("no description");
        java.util.ArrayList<java.lang.Comparable<java.lang.String>> strComparableList35 = new java.util.ArrayList<java.lang.Comparable<java.lang.String>>();
        boolean boolean36 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "hi!");
        boolean boolean37 = strComparableList35.add((java.lang.Comparable<java.lang.String>) "");
        schema32.setEnum((java.util.List<java.lang.Comparable<java.lang.String>>) strComparableList35);
        schema26.setNot(schema32);
        io.swagger.oas.models.media.Schema schema41 = schema26.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema26.setDiscriminator(discriminator42);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema26.maximum(bigDecimal44);
        io.swagger.oas.models.media.Schema schema47 = schema26.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 1\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema49.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema51.maxLength((java.lang.Integer) 100);
        schema51.setName("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test07471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07471");
        java.util.Optional<io.swagger.jaxrs2.OperationParser> operationParserOptional0 = java.util.Optional.empty();
        org.junit.Assert.assertNotNull(operationParserOptional0);
    }

    @Test
    public void test07472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07472");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        java.lang.Boolean boolean13 = schema9.getReadOnly();
        java.lang.Boolean boolean14 = schema9.getExclusiveMinimum();
        java.math.BigDecimal bigDecimal15 = schema9.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema9.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str22 = schema19.getPattern();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema28 = schema25.format("no description");
        io.swagger.oas.models.media.Schema schema30 = schema28.pattern("");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema35 = strComparableSchema31.pattern("no description");
        strComparableSchema31.setMaxProperties((java.lang.Integer) 10);
        schema28.setDefault((java.lang.Object) strComparableSchema31);
        io.swagger.oas.models.media.Schema schema40 = schema28.deprecated((java.lang.Boolean) true);
        schema40.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema43 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema43.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema46 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema48 = schema45.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema49 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema51 = strComparableSchema49.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.properties(strMap54);
        java.lang.Integer int56 = schema55.getMinItems();
        schema45.setAdditionalProperties(schema55);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.discriminator(discriminator58);
        java.lang.Integer int60 = schema55.getMinProperties();
        io.swagger.oas.models.media.Schema schema62 = schema55.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema64 = schema62.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema65 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema67 = strComparableSchema65.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema68 = schema67.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema70 = schema67.format("no description");
        schema70.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema73 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema75 = strComparableSchema73.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema77.properties(strMap78);
        io.swagger.oas.models.media.Discriminator discriminator80 = schema79.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema81 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema83 = strComparableSchema81.maxProperties((java.lang.Integer) 10);
        schema83.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean86 = schema83.getUniqueItems();
        io.swagger.oas.models.media.Schema schema87 = schema79.not(schema83);
        io.swagger.oas.models.media.Schema schema88 = schema70.additionalProperties(schema83);
        java.lang.String[] strArray91 = new java.lang.String[] { "no description", "" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        schema83.setRequired((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema95 = schema62.required((java.util.List<java.lang.String>) strList92);
        io.swagger.oas.models.media.Schema schema96 = schema40.required((java.util.List<java.lang.String>) strList92);
        schema19.setExample((java.lang.Object) strList92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(discriminator80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test07473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07473");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.XML xML15 = null;
        schema12.setXml(xML15);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema17 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema19 = strComparableSchema17.maxProperties((java.lang.Integer) 10);
        schema19.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema19.getNot();
        java.math.BigDecimal bigDecimal23 = schema19.getMaximum();
        schema12.setNot(schema19);
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList27 = schema12.getEnum();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList28 = schema12.getEnum();
        io.swagger.oas.models.media.Schema schema30 = schema12.title("class Schema {\n    title: \n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: false\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setMaxLength((java.lang.Integer) 0);
        java.lang.Integer int33 = schema30.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(strComparableList27);
        org.junit.Assert.assertNull(strComparableList28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test07474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07474");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema16 = schema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema18 = schema15.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema21.properties(strMap22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.properties(strMap24);
        java.lang.Integer int26 = schema25.getMinItems();
        schema15.setAdditionalProperties(schema25);
        io.swagger.oas.models.media.Discriminator discriminator28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.discriminator(discriminator28);
        io.swagger.oas.models.media.Schema schema30 = schema2.additionalProperties(schema29);
        schema29.setReadOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass33 = schema29.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test07475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07475");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        io.swagger.oas.models.media.Discriminator discriminator33 = schema32.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        schema36.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema36.getUniqueItems();
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema36);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList41 = schema36.getEnum();
        io.swagger.oas.models.media.Schema schema43 = schema36.type("hi!");
        schema36.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema6.example((java.lang.Object) schema36);
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema36.multipleOf(bigDecimal47);
        io.swagger.oas.models.media.Schema schema49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.not(schema49);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema52.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, ]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description, hi!, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strComparableList41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test07476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07476");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.String[] strArray11 = new java.lang.String[] { "no description" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        schema5.setRequired((java.util.List<java.lang.String>) strList12);
        schema5.setWriteOnly((java.lang.Boolean) false);
        java.lang.String str17 = schema5.get$ref();
        schema5.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema5.pattern("hi!");
        java.lang.Boolean boolean24 = schema5.getDeprecated();
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema5.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema26.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.minProperties((java.lang.Integer) (-1));
        java.lang.String str31 = schema30.get$ref();
        io.swagger.oas.models.media.XML xML32 = schema30.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(xML32);
    }

    @Test
    public void test07477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07477");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addEnumItemObject((java.lang.Comparable<java.lang.String>) "no description");
        schema8.setMaxItems((java.lang.Integer) 0);
        schema8.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema8.maxLength((java.lang.Integer) 1);
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        schema18.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test07478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07478");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.lang.Boolean boolean6 = schema2.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.discriminator(discriminator7);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.properties(strMap12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.properties(strMap14);
        java.lang.Integer int16 = schema15.getMinItems();
        io.swagger.oas.models.media.Schema schema18 = schema15.title("no description");
        java.lang.Boolean boolean19 = schema15.getWriteOnly();
        io.swagger.oas.models.media.Schema schema21 = schema15.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("#/components/schemas/");
        schema23.setMaxLength((java.lang.Integer) 1);
        schema2.setDefault((java.lang.Object) schema23);
        schema2.setMinItems((java.lang.Integer) 10);
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = null;
        schema2.setEnum(strComparableList29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema2.multipleOf(bigDecimal31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.maximum(bigDecimal33);
        schema34.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNull(boolean6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test07479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07479");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema15 = schema11.type("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        schema15.setProperties(strMap16);
        io.swagger.oas.models.media.Schema schema19 = schema15.writeOnly((java.lang.Boolean) false);
        schema15.setMaxItems((java.lang.Integer) 1);
        schema15.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test07480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07480");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = null;
        io.swagger.oas.models.media.Schema schema9 = schema2.properties(strMap8);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema10 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema12 = strComparableSchema10.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = schema12.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema15 = schema12.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.lang.Integer int23 = schema22.getMinItems();
        schema12.setAdditionalProperties(schema22);
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMaximum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema22.maxProperties((java.lang.Integer) 1);
        java.lang.Integer int29 = schema22.getMaxLength();
        schema9.setExample((java.lang.Object) schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        schema22.setExternalDocs(externalDocumentation31);
        schema22.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema36 = schema22.minLength((java.lang.Integer) 10);
        java.lang.String str37 = schema22.getName();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema38 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema40 = strComparableSchema38.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = schema40.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema43 = schema40.format("no description");
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema43.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        java.lang.String str51 = schema50.getPattern();
        io.swagger.oas.models.media.Schema schema52 = schema22.not(schema50);
        java.math.BigDecimal bigDecimal53 = schema50.getMultipleOf();
        schema50.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: false\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: [no description]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
    }

    @Test
    public void test07481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07481");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional6 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema2);
        java.lang.Integer int7 = schema2.getMinProperties();
        java.math.BigDecimal bigDecimal8 = schema2.getMaximum();
        io.swagger.oas.models.media.XML xML9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema2.xml(xML9);
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test07482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07482");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        schema18.setProperties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema18.minLength((java.lang.Integer) 0);
        java.lang.String str23 = schema22.getTitle();
        java.util.List<java.lang.String> strList24 = schema22.getRequired();
        java.lang.String str25 = schema22.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test07483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07483");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<io.swagger.oas.annotations.servers.Server[]> serverArrayOptional6 = java.util.Optional.of(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        io.swagger.oas.annotations.servers.Server server8 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray9 = new io.swagger.oas.annotations.servers.Server[] { server8 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray9);
        io.swagger.oas.annotations.servers.Server server14 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray15 = new io.swagger.oas.annotations.servers.Server[] { server14 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray15);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray15);
        java.util.Optional<java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>>> serverListOptionalOptional18 = java.util.Optional.of(serverListOptional17);
        java.lang.String str19 = serverListOptional17.toString();
        io.swagger.oas.annotations.servers.Server[] serverArray20 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray20);
        io.swagger.oas.models.servers.Server[] serverArray22 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList23 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList23, serverArray22);
        java.util.List<io.swagger.oas.models.servers.Server> serverList25 = serverListOptional21.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList23);
        boolean boolean26 = serverListOptional21.isPresent();
        boolean boolean27 = serverListOptional21.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema28 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema30 = strComparableSchema28.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.properties(strMap31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.properties(strMap33);
        java.lang.Integer int35 = schema34.getMinItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("no description");
        java.lang.Boolean boolean38 = schema34.getWriteOnly();
        io.swagger.oas.models.media.Schema schema40 = schema34.nullable((java.lang.Boolean) true);
        java.lang.String str41 = schema40.getPattern();
        io.swagger.oas.models.media.Schema schema43 = schema40.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean44 = serverListOptional21.equals((java.lang.Object) schema43);
        boolean boolean45 = serverListOptional21.isPresent();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.properties(strMap49);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.properties(strMap51);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema52.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema54 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema56 = strComparableSchema54.maxProperties((java.lang.Integer) 10);
        schema56.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean59 = schema56.getUniqueItems();
        io.swagger.oas.models.media.Schema schema60 = schema52.not(schema56);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema63.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.format("no description");
        schema66.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean69 = schema66.getReadOnly();
        io.swagger.oas.models.media.Schema schema71 = schema66.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema72 = schema56.not(schema66);
        boolean boolean73 = serverListOptional21.equals((java.lang.Object) schema56);
        io.swagger.oas.annotations.servers.Server[] serverArray74 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional75 = io.swagger.jaxrs2.OperationParser.getServers(serverArray74);
        io.swagger.oas.models.servers.Server[] serverArray76 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList77 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList77, serverArray76);
        java.util.List<io.swagger.oas.models.servers.Server> serverList79 = serverListOptional75.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList77);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional80 = java.util.Optional.ofNullable(serverList79);
        java.util.List<io.swagger.oas.models.servers.Server> serverList81 = serverListOptional21.orElse(serverList79);
        java.util.List<io.swagger.oas.models.servers.Server> serverList82 = serverListOptional17.orElse(serverList81);
        java.util.List<io.swagger.oas.models.servers.Server> serverList83 = serverListOptional13.orElse(serverList82);
        boolean boolean84 = serverListOptional13.isPresent();
        boolean boolean85 = serverListOptional7.equals((java.lang.Object) boolean84);
        org.junit.Assert.assertNotNull(serverArray1);
        org.junit.Assert.assertNotNull(serverListOptional2);
        org.junit.Assert.assertNotNull(serverListOptional3);
        org.junit.Assert.assertNotNull(serverListOptional4);
        org.junit.Assert.assertNotNull(serverListOptional5);
        org.junit.Assert.assertNotNull(serverArrayOptional6);
        org.junit.Assert.assertNotNull(serverListOptional7);
        org.junit.Assert.assertNotNull(serverArray9);
        org.junit.Assert.assertNotNull(serverListOptional10);
        org.junit.Assert.assertNotNull(serverListOptional11);
        org.junit.Assert.assertNotNull(serverListOptional12);
        org.junit.Assert.assertNotNull(serverListOptional13);
        org.junit.Assert.assertNotNull(serverArray15);
        org.junit.Assert.assertNotNull(serverListOptional16);
        org.junit.Assert.assertNotNull(serverListOptional17);
        org.junit.Assert.assertNotNull(serverListOptionalOptional18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Optional.empty" + "'", str19, "Optional.empty");
        org.junit.Assert.assertNotNull(serverArray20);
        org.junit.Assert.assertNotNull(serverListOptional21);
        org.junit.Assert.assertNotNull(serverArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(serverList25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(serverArray74);
        org.junit.Assert.assertNotNull(serverListOptional75);
        org.junit.Assert.assertNotNull(serverArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(serverList79);
        org.junit.Assert.assertNotNull(serverListOptional80);
        org.junit.Assert.assertNotNull(serverList81);
        org.junit.Assert.assertNotNull(serverList82);
        org.junit.Assert.assertNotNull(serverList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test07484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07484");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        java.lang.String[] strArray18 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        io.swagger.oas.models.media.Schema schema21 = schema12.required((java.util.List<java.lang.String>) strList19);
        java.lang.String str22 = schema12.get$ref();
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList23 = schema12.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema12.getProperties();
        java.lang.Integer int25 = schema12.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strComparableList23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(int25);
    }

    @Test
    public void test07485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07485");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema6 = schema2.title("no description");
        io.swagger.oas.models.media.Schema schema8 = schema2.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean9 = schema2.getUniqueItems();
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.multipleOf(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = schema2.getMaximum();
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(bigDecimal12);
    }

    @Test
    public void test07486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07486");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: -1\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: Optional.empty\n    format: null\n    $ref: #/components/schemas/\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test07487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07487");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        io.swagger.oas.models.servers.Server[] serverArray2 = new io.swagger.oas.models.servers.Server[] {};
        java.util.ArrayList<io.swagger.oas.models.servers.Server> serverList3 = new java.util.ArrayList<io.swagger.oas.models.servers.Server>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.models.servers.Server>) serverList3, serverArray2);
        java.util.List<io.swagger.oas.models.servers.Server> serverList5 = serverListOptional1.orElse((java.util.List<io.swagger.oas.models.servers.Server>) serverList3);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = java.util.Optional.ofNullable(serverList5);
        boolean boolean7 = serverListOptional6.isPresent();
        boolean boolean8 = serverListOptional6.isPresent();
        io.swagger.oas.annotations.links.LinkParameters linkParameters9 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap10 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameters9);
        boolean boolean11 = serverListOptional6.equals((java.lang.Object) strMap10);
        java.util.List<io.swagger.oas.models.servers.Server> serverList12 = serverListOptional6.get();
        java.lang.String str13 = serverListOptional6.toString();
        java.lang.String str14 = serverListOptional6.toString();
        org.junit.Assert.assertNotNull(serverArray0);
        org.junit.Assert.assertNotNull(serverListOptional1);
        org.junit.Assert.assertNotNull(serverArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(serverList5);
        org.junit.Assert.assertNotNull(serverListOptional6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(serverList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Optional[[]]" + "'", str13, "Optional[[]]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Optional[[]]" + "'", str14, "Optional[[]]");
    }

    @Test
    public void test07488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07488");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema12.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema19 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema21 = strComparableSchema19.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema22 = schema21.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = schema21.format("no description");
        java.lang.String str25 = schema24.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema26 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema28 = strComparableSchema26.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema29 = schema28.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("no description");
        schema31.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema34 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema36 = strComparableSchema34.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.properties(strMap37);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.properties(strMap39);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        schema44.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean47 = schema44.getUniqueItems();
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema31.additionalProperties(schema44);
        schema49.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema52 = schema24.not(schema49);
        io.swagger.oas.models.media.Schema schema53 = schema24.getNot();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema55 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema57 = strComparableSchema55.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema58 = schema57.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema60 = schema57.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.properties(strMap66);
        java.lang.Integer int68 = schema67.getMinItems();
        schema57.setAdditionalProperties(schema67);
        java.math.BigDecimal bigDecimal70 = null;
        schema67.setMaximum(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema67.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema75 = schema67.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema76 = schema24.addProperties("no description", schema67);
        io.swagger.oas.models.media.Schema schema77 = schema12.additionalProperties(schema67);
        io.swagger.oas.models.media.Schema schema79 = schema67.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema67.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema83 = schema67.title("no description");
        io.swagger.oas.models.media.Schema schema85 = schema67.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test07489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07489");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        java.lang.Integer int7 = schema6.getMinItems();
        io.swagger.oas.models.media.Schema schema9 = schema6.title("no description");
        io.swagger.oas.models.media.Schema schema11 = schema9.type("no description");
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema13.maximum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema15.format("#/components/schemas/no description");
        io.swagger.oas.models.media.Discriminator discriminator18 = schema15.getDiscriminator();
        java.lang.Integer int19 = schema15.getMinLength();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.maximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema22 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema24 = strComparableSchema22.maxProperties((java.lang.Integer) 10);
        schema24.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema27 = schema24.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional28 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema24);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema32 = schema31.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema34 = schema31.format("no description");
        schema24.setNot(schema34);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        java.lang.String str40 = schema39.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        java.lang.String str44 = schema43.get$ref();
        io.swagger.oas.models.media.Schema schema46 = schema43.name("no description");
        schema46.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema39.not(schema46);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema39.getExtensions();
        io.swagger.oas.models.media.Schema schema52 = schema39.writeOnly((java.lang.Boolean) false);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: 100\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema39);
        schema24.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema21.additionalProperties(schema24);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema24.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        java.lang.String str62 = schema61.get$ref();
        io.swagger.oas.models.media.Schema schema64 = schema61.name("no description");
        schema64.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema64.setDiscriminator(discriminator67);
        io.swagger.oas.models.media.Schema schema70 = schema64.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema70.multipleOf(bigDecimal71);
        io.swagger.oas.models.media.Schema schema73 = schema58.additionalProperties(schema70);
        schema70.setExclusiveMinimum((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList76 = schema70.getRequired();
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema70.minimum(bigDecimal77);
        io.swagger.oas.models.media.Schema schema80 = schema70.minLength((java.lang.Integer) 1);
        schema70.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test07490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07490");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.properties(strMap18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema23 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema25 = strComparableSchema23.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.properties(strMap26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Discriminator discriminator30 = schema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema31 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema33 = strComparableSchema31.maxProperties((java.lang.Integer) 10);
        schema33.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean36 = schema33.getUniqueItems();
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema33);
        schema33.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema40 = schema21.not(schema33);
        io.swagger.oas.models.media.Schema schema42 = schema40.deprecated((java.lang.Boolean) false);
        schema2.setAdditionalProperties(schema40);
        io.swagger.oas.models.media.Schema schema45 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema2.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema48 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema50 = strComparableSchema48.maxProperties((java.lang.Integer) 10);
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema53 = schema50.getNot();
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema50.minimum(bigDecimal54);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.properties(strMap56);
        java.lang.Boolean boolean58 = schema50.getExclusiveMaximum();
        schema2.setExample((java.lang.Object) schema50);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema2.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema61 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema63 = strComparableSchema61.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema64 = schema63.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema66 = schema63.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema67 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema69 = strComparableSchema67.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.properties(strMap70);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.properties(strMap72);
        java.lang.Integer int74 = schema73.getMinItems();
        schema63.setAdditionalProperties(schema73);
        java.lang.String[] strArray79 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        io.swagger.oas.models.media.Schema schema82 = schema73.required((java.util.List<java.lang.String>) strList80);
        java.lang.Object obj83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.example(obj83);
        io.swagger.oas.models.media.Schema schema86 = schema82.$ref("no description");
        java.math.BigDecimal bigDecimal87 = schema86.getMinimum();
        io.swagger.oas.models.media.Schema schema88 = schema2.not(schema86);
        io.swagger.oas.models.media.Schema schema90 = schema86.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: 10\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(discriminator30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(bigDecimal87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test07491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07491");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean13 = schema10.getUniqueItems();
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema10);
        io.swagger.oas.models.media.Schema schema16 = schema6.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.properties(strMap21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        schema22.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema22.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema29 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema31 = strComparableSchema29.maxProperties((java.lang.Integer) 10);
        java.lang.String str32 = schema31.get$ref();
        io.swagger.oas.models.media.Schema schema34 = schema31.name("no description");
        java.math.BigDecimal bigDecimal35 = null;
        schema31.setMaximum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema37 = schema22.not(schema31);
        io.swagger.oas.models.media.Schema schema38 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema37);
        java.math.BigDecimal bigDecimal39 = schema6.getMaximum();
        io.swagger.oas.models.media.Schema schema41 = schema6.writeOnly((java.lang.Boolean) true);
        schema6.setExclusiveMinimum((java.lang.Boolean) false);
        schema6.addEnumItemObject((java.lang.Comparable<java.lang.String>) "Optional[[]]");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test07492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07492");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.discriminator(discriminator15);
        java.lang.Integer int17 = schema12.getMinProperties();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema18 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema20 = strComparableSchema18.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema23 = schema20.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema24 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema26 = strComparableSchema24.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.properties(strMap27);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.properties(strMap29);
        java.lang.Integer int31 = schema30.getMinItems();
        schema20.setAdditionalProperties(schema30);
        java.lang.String[] strArray36 = new java.lang.String[] { "no description", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        io.swagger.oas.models.media.Schema schema39 = schema30.required((java.util.List<java.lang.String>) strList37);
        schema12.setRequired((java.util.List<java.lang.String>) strList37);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema41 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema43 = strComparableSchema41.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema44 = schema43.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema46 = schema43.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema47 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema49 = strComparableSchema47.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.properties(strMap52);
        java.lang.Integer int54 = schema53.getMinItems();
        schema43.setAdditionalProperties(schema53);
        java.math.BigDecimal bigDecimal56 = null;
        schema53.setMaximum(bigDecimal56);
        io.swagger.oas.models.media.Schema schema59 = schema53.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema60 = schema12.example((java.lang.Object) schema53);
        schema12.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: no description\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema64 = schema12.maxItems((java.lang.Integer) (-1));
        java.lang.String str65 = schema12.get$ref();
        java.lang.String str66 = schema12.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test07493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07493");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema schema10 = schema5.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema12 = schema5.name("");
        io.swagger.oas.models.media.Schema schema14 = schema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema15 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema17 = strComparableSchema15.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema18 = schema17.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema20 = schema17.format("no description");
        schema20.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean23 = schema20.getReadOnly();
        io.swagger.oas.models.media.Schema schema25 = schema20.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("Optional.empty");
        schema29.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean32 = schema29.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema33 = schema14.not(schema29);
        java.lang.Boolean boolean34 = schema29.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema29.getExternalDocs();
        java.lang.String str36 = schema29.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(externalDocumentation35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test07494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07494");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema4 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema6 = strComparableSchema4.maxProperties((java.lang.Integer) 10);
        java.lang.String str7 = schema6.get$ref();
        io.swagger.oas.models.media.Schema schema9 = schema6.name("no description");
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema12 = schema2.not(schema9);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean15 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema17 = schema2.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema18 = schema17.getNot();
        io.swagger.oas.models.media.Schema schema20 = schema18.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test07495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07495");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema5.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = schema5.getMaximum();
        io.swagger.oas.models.media.Schema schema10 = schema5.deprecated((java.lang.Boolean) true);
        schema5.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: no description\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: hi!\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.lang.String str16 = schema15.get$ref();
        io.swagger.oas.models.media.Schema schema18 = schema15.name("no description");
        schema18.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema18.setDiscriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.addRequiredItem("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        schema18.setExternalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema18.format("Optional.empty");
        java.util.List<java.lang.Comparable<java.lang.String>> strComparableList29 = schema18.getEnum();
        io.swagger.oas.models.media.Schema schema31 = schema18.name("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema18.externalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema schema35 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = schema35.getExternalDocs();
        java.util.List<java.lang.String> strList37 = schema35.getRequired();
        schema5.setRequired(strList37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strComparableList29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(externalDocumentation36);
        org.junit.Assert.assertNotNull(strList37);
    }

    @Test
    public void test07496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07496");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap3 = null;
        io.swagger.oas.models.media.Schema schema4 = schema2.properties(strMap3);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.properties(strMap5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema8 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema10 = strComparableSchema8.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.properties(strMap13);
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema16 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema18 = strComparableSchema16.maxProperties((java.lang.Integer) 10);
        schema18.setMaxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean21 = schema18.getUniqueItems();
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema18);
        schema18.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema25 = schema6.not(schema18);
        io.swagger.oas.models.media.Schema schema27 = schema25.deprecated((java.lang.Boolean) false);
        java.lang.String str28 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema30 = schema27.format("no description");
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = null;
        schema30.setExtensions(strMap31);
        schema30.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema30.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema37 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema39 = strComparableSchema37.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema41 = strComparableSchema37.pattern("no description");
        strComparableSchema37.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema45 = strComparableSchema37.minItems((java.lang.Integer) 0);
        java.lang.Integer int46 = strComparableSchema37.getMinProperties();
        schema36.setExample((java.lang.Object) int46);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema36.xml(xML48);
        io.swagger.oas.models.media.XML xML50 = schema49.getXml();
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.discriminator(discriminator51);
        java.math.BigDecimal bigDecimal53 = schema52.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
    }

    @Test
    public void test07497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07497");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema6 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema8 = strComparableSchema6.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema8.properties(strMap9);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.properties(strMap11);
        java.lang.Integer int13 = schema12.getMinItems();
        schema2.setAdditionalProperties(schema12);
        schema2.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema2.getAdditionalProperties();
        schema17.setMinProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean20 = schema17.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test07498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07498");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema5 = schema2.getNot();
        java.math.BigDecimal bigDecimal6 = null;
        io.swagger.oas.models.media.Schema schema7 = schema2.minimum(bigDecimal6);
        io.swagger.oas.models.media.Schema schema9 = schema7.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema11 = schema9.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema9.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema14 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema16 = strComparableSchema14.maxProperties((java.lang.Integer) 10);
        java.lang.Comparable<java.lang.String> strComparable17 = strComparableSchema14.getDefault();
        java.lang.String str18 = strComparableSchema14.getPattern();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strComparableSchema14.getExtensions();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema20 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema22 = strComparableSchema20.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.properties(strMap23);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.properties(strMap25);
        java.lang.Integer int27 = schema26.getMinItems();
        io.swagger.oas.models.media.Schema schema29 = schema26.title("no description");
        java.lang.Boolean boolean30 = schema26.getWriteOnly();
        io.swagger.oas.models.media.Schema schema32 = schema26.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema34 = schema26.$ref("");
        java.lang.Integer int35 = schema26.getMinItems();
        io.swagger.oas.models.media.XML xML36 = schema26.getXml();
        java.lang.String str37 = schema26.getType();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema26.externalDocs(externalDocumentation38);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        schema39.setExternalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema42 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema44 = strComparableSchema42.maxProperties((java.lang.Integer) 10);
        java.lang.String str45 = schema44.get$ref();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema46 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema48 = strComparableSchema46.maxProperties((java.lang.Integer) 10);
        java.lang.String str49 = schema48.get$ref();
        io.swagger.oas.models.media.Schema schema51 = schema48.name("no description");
        schema51.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema44.not(schema51);
        java.lang.Boolean boolean55 = schema51.getReadOnly();
        java.lang.Boolean boolean56 = schema51.getExclusiveMinimum();
        java.lang.Integer int57 = schema51.getMaxItems();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema59 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema61 = strComparableSchema59.maxProperties((java.lang.Integer) 10);
        schema61.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema61.getNot();
        java.util.Optional<io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>> strComparableSchemaOptional65 = java.util.Optional.ofNullable((io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>) schema61);
        java.lang.Integer int66 = schema61.getMinProperties();
        java.math.BigDecimal bigDecimal67 = schema61.getMaximum();
        io.swagger.oas.models.media.Schema schema68 = schema51.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: no description\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema61);
        io.swagger.oas.models.media.Schema schema70 = schema61.addRequiredItem("hi!");
        schema70.setName("hi!");
        io.swagger.oas.models.media.Schema schema74 = schema70.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML75 = schema70.getXml();
        io.swagger.oas.models.media.Schema schema77 = schema70.format("#/components/schemas/no description");
        java.util.List<java.lang.String> strList78 = schema77.getRequired();
        schema39.setRequired(strList78);
        io.swagger.oas.models.media.Schema schema80 = strComparableSchema14.required(strList78);
        io.swagger.oas.models.media.Schema schema81 = schema9.required(strList78);
        io.swagger.oas.models.media.Schema schema83 = schema81.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema84 = schema81.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            schema84.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strComparable17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNull(xML36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(boolean55);
        org.junit.Assert.assertEquals("'" + boolean56 + "' != '" + false + "'", boolean56, false);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(strComparableSchemaOptional65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(schema84);
    }

    @Test
    public void test07499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07499");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        java.lang.String str3 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema5 = schema2.name("no description");
        schema5.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator8 = null;
        schema5.setDiscriminator(discriminator8);
        java.lang.Integer int10 = schema5.getMinLength();
        io.swagger.oas.models.media.Schema schema12 = schema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema13 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema15 = strComparableSchema13.maxProperties((java.lang.Integer) 10);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema15.properties(strMap16);
        java.lang.Integer int18 = schema17.getMinLength();
        io.swagger.oas.models.media.Schema schema20 = schema17.maxItems((java.lang.Integer) 10);
        schema17.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema17.nullable((java.lang.Boolean) false);
        schema5.setAdditionalProperties(schema17);
        io.swagger.oas.models.media.Schema schema27 = schema17.format("class Schema {\n    title: no description\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: #/components/schemas/\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML28 = schema27.getXml();
        java.util.List<java.lang.String> strList29 = schema27.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(xML28);
        org.junit.Assert.assertNull(strList29);
    }

    @Test
    public void test07500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest14.test07500");
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema2 = strComparableSchema0.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema3 = schema2.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema5 = schema2.format("no description");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean8 = schema5.getReadOnly();
        io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>> strComparableSchema9 = new io.swagger.oas.models.media.Schema<java.lang.Comparable<java.lang.String>>();
        io.swagger.oas.models.media.Schema schema11 = strComparableSchema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema12 = schema11.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("no description");
        io.swagger.oas.models.media.Schema schema16 = schema14.pattern("");
        schema5.setAdditionalProperties(schema16);
        schema5.setType("hi!");
        schema5.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema5.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.externalDocs(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(schema3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }
}

