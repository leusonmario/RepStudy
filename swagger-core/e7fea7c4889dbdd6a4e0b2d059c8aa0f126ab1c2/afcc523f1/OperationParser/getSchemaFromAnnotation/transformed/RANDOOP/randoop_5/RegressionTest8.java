import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema31.addProperties("#/components/schemas/", schema45);
        schema45.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema45.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema28.not(schema50);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        schema28.setExternalDocs(externalDocumentation52);
        java.lang.String str54 = schema28.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.minimum(bigDecimal17);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList19 = schema18.getEnum();
        schema18.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(linkArrayList19);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        boolean boolean41 = schema34.equals((java.lang.Object) linkArraySchema37);
        io.swagger.oas.models.media.Discriminator discriminator42 = linkArraySchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema37.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema43);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList45 = linkArraySchema37.getEnum();
        schema31.setDefault((java.lang.Object) linkArraySchema37);
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema37.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        linkArraySchema37.setExternalDocs(externalDocumentation51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(linkArrayList45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setMaxLength((java.lang.Integer) (-1));
        schema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML15 = null;
        linkArraySchema12.setXml(xML15);
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema12.addRequiredItem("hi!");
        java.lang.Integer int19 = linkArraySchema12.getMinProperties();
        io.swagger.oas.annotations.links.Link[] linkArray20 = linkArraySchema12.getDefault();
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) linkArraySchema12);
        java.lang.Boolean boolean22 = linkArraySchema12.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        linkArraySchema12.setExternalDocs(externalDocumentation23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(linkArray20);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator17 = schema8.getDiscriminator();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema31 = schema23.maxProperties((java.lang.Integer) 0);
        schema23.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema35 = schema23.addRequiredItem("");
        schema23.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        schema23.setExternalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        java.lang.String str47 = schema42.getFormat();
        java.math.BigDecimal bigDecimal48 = schema42.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        java.lang.Integer int57 = linkArraySchema54.getMaxProperties();
        boolean boolean58 = schema51.equals((java.lang.Object) linkArraySchema54);
        io.swagger.oas.models.media.Discriminator discriminator59 = linkArraySchema54.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema54.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema54.nullable((java.lang.Boolean) false);
        schema42.setExample((java.lang.Object) schema63);
        schema23.setNot(schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Discriminator discriminator73 = schema68.getDiscriminator();
        io.swagger.oas.models.media.Schema schema74 = schema63.additionalProperties(schema68);
        schema74.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList77 = null;
        schema74.setRequired(strList77);
        io.swagger.oas.models.media.Discriminator discriminator79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema74.discriminator(discriminator79);
        java.lang.String str81 = schema80.getDescription();
        io.swagger.oas.models.media.Schema schema83 = schema80.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema85 = schema83.maxLength((java.lang.Integer) 0);
        schema19.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema88 = schema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(discriminator73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        schema23.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.writeOnly((java.lang.Boolean) false);
        schema27.setUniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal32 = null;
        schema27.setMultipleOf(bigDecimal32);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema8.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        java.lang.Integer int44 = linkArraySchema41.getMaxProperties();
        boolean boolean45 = schema38.equals((java.lang.Object) linkArraySchema41);
        io.swagger.oas.models.media.Discriminator discriminator46 = linkArraySchema41.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema41.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema47);
        schema8.setAdditionalProperties(schema48);
        java.lang.Class<?> wildcardClass50 = schema48.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        java.lang.String str9 = schema8.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema18.not(schema29);
        java.math.BigDecimal bigDecimal31 = schema29.getMaximum();
        java.lang.Boolean boolean32 = schema29.getExclusiveMinimum();
        schema29.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema13.additionalProperties(schema29);
        schema37.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean40 = schema37.getNullable();
        schema37.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema37.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean45 = schema37.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema schema38 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int48 = schema47.getMaxItems();
        schema47.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        java.lang.String str60 = schema55.getFormat();
        io.swagger.oas.models.media.Schema schema62 = schema55.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema47.addProperties("#/components/schemas/", schema62);
        io.swagger.oas.models.media.Schema schema65 = schema62.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = schema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema81);
        java.lang.String[] strArray84 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = schema82.required((java.util.List<java.lang.String>) strList85);
        schema67.setRequired((java.util.List<java.lang.String>) strList85);
        schema29.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal90 = schema29.getMinimum();
        io.swagger.oas.models.media.Schema schema92 = schema29.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal93 = schema92.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(bigDecimal93);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        java.lang.String str24 = schema23.getDescription();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList25 = schema23.getEnum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema27.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(linkArrayList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.lang.String str24 = schema19.getFormat();
        io.swagger.oas.models.media.Schema schema26 = schema19.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema16.setNot(schema26);
        java.lang.String str32 = schema16.getFormat();
        java.lang.Boolean boolean33 = schema16.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema60 = schema52.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = schema60.getExtensions();
        io.swagger.oas.models.media.Schema schema62 = schema48.addProperties("#/components/schemas/", schema60);
        boolean boolean63 = schema16.equals((java.lang.Object) schema62);
        java.lang.Integer int64 = schema16.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(int64);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema25 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        schema25.setXml(xML26);
        java.util.List<java.lang.String> strList28 = schema25.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int21 = schema20.getMaxItems();
        schema20.addExtension("", (java.lang.Object) (short) -1);
        schema20.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema28.$ref("*/*");
        io.swagger.oas.models.media.Schema schema32 = schema30.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.discriminator(discriminator33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.externalDocs(externalDocumentation35);
        java.math.BigDecimal bigDecimal37 = schema36.getMinimum();
        schema36.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML43 = null;
        linkArraySchema40.setXml(xML43);
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema40.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal47 = null;
        linkArraySchema40.setMaximum(bigDecimal47);
        linkArraySchema40.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int51 = linkArraySchema40.getMaxProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema65 = schema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema58.not(schema65);
        java.math.BigDecimal bigDecimal67 = schema65.getMaximum();
        schema65.set$ref("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        io.swagger.oas.models.media.Schema schema78 = schema76.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = schema76.getExternalDocs();
        java.lang.Integer int80 = schema76.getMinLength();
        io.swagger.oas.annotations.links.Link link81 = null;
        io.swagger.oas.annotations.links.Link[] linkArray82 = new io.swagger.oas.annotations.links.Link[] { link81 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap83 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray82);
        schema76.addEnumItemObject(linkArray82);
        schema65.setExample((java.lang.Object) linkArray82);
        linkArraySchema40.addEnumItemObject(linkArray82);
        schema36.addEnumItemObject(linkArray82);
        schema9.addEnumItemObject(linkArray82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(externalDocumentation79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(linkArray82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema36.not(schema47);
        schema32.setNot(schema36);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema56.not(schema63);
        io.swagger.oas.models.media.Schema schema65 = schema32.not(schema63);
        io.swagger.oas.models.media.Discriminator discriminator66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema32.discriminator(discriminator66);
        schema32.setTitle("#/components/schemas/");
        java.lang.Integer int70 = schema32.getMaxProperties();
        java.math.BigDecimal bigDecimal71 = null;
        schema32.setMinimum(bigDecimal71);
        schema23.setNot(schema32);
        java.lang.Boolean boolean74 = schema32.getDeprecated();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema77.externalDocs(externalDocumentation80);
        schema77.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema85 = schema77.maxProperties((java.lang.Integer) 0);
        schema77.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema77.addRequiredItem("");
        schema77.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema77.minimum(bigDecimal92);
        io.swagger.oas.models.media.Discriminator discriminator94 = schema93.getDiscriminator();
        java.math.BigDecimal bigDecimal95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema93.maximum(bigDecimal95);
        schema32.setNot(schema96);
        io.swagger.oas.models.media.Schema schema98 = schema96.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(discriminator94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(schema98);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        java.lang.String str9 = schema8.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema18.not(schema29);
        java.math.BigDecimal bigDecimal31 = schema29.getMaximum();
        java.lang.Boolean boolean32 = schema29.getExclusiveMinimum();
        schema29.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema36 = schema29.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema13.additionalProperties(schema29);
        schema37.setMinItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean40 = schema37.getNullable();
        schema37.setMaxItems((java.lang.Integer) 0);
        java.lang.String str43 = schema37.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.multipleOf(bigDecimal13);
        schema14.setMaxProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        schema14.setMinimum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema11.minLength((java.lang.Integer) 100);
        java.lang.String str16 = schema11.getType();
        schema11.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        schema11.setDiscriminator(discriminator19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList39 = schema34.getEnum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        java.lang.Integer int48 = linkArraySchema45.getMaxProperties();
        boolean boolean49 = schema42.equals((java.lang.Object) linkArraySchema45);
        io.swagger.oas.models.media.Discriminator discriminator50 = linkArraySchema45.getDiscriminator();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema45.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema45.pattern("hi!");
        schema34.setDefault((java.lang.Object) "hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema69);
        java.lang.String[] strArray72 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        io.swagger.oas.models.media.Schema schema75 = schema70.required((java.util.List<java.lang.String>) strList73);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema77 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema79 = linkArraySchema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema81 = schema79.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema79.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema85 = schema83.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int86 = schema85.getMaxItems();
        schema85.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = null;
        schema85.setExtensions(strMap90);
        io.swagger.oas.models.media.Schema schema92 = schema70.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema85);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap93 = null;
        io.swagger.oas.models.media.Schema schema94 = schema70.properties(strMap93);
        schema94.set$ref("");
        io.swagger.oas.models.media.Schema schema97 = schema34.not(schema94);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(linkArrayList39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        schema29.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML33 = null;
        schema29.setXml(xML33);
        java.math.BigDecimal bigDecimal35 = null;
        schema29.setMultipleOf(bigDecimal35);
        java.math.BigDecimal bigDecimal37 = null;
        schema29.setMultipleOf(bigDecimal37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema2.getMultipleOf();
        schema2.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema54 = schema2.example((java.lang.Object) schema53);
        schema54.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema73 = schema71.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema59.addProperties("#/components/schemas/", schema73);
        schema59.setDefault((java.lang.Object) (-1));
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML79 = schema59.getXml();
        java.lang.Integer int80 = schema59.getMaxItems();
        schema59.setType("*/*");
        io.swagger.oas.models.media.Schema schema84 = schema59.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.multipleOf(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema94 = schema84.additionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema95 = schema54.additionalProperties(schema91);
        java.math.BigDecimal bigDecimal96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema91.maximum(bigDecimal96);
        java.math.BigDecimal bigDecimal98 = schema97.getMinimum();
        java.lang.String str99 = schema97.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(bigDecimal98);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        java.lang.String str41 = schema5.getTitle();
        io.swagger.oas.models.media.Schema schema43 = schema5.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        java.lang.Object obj10 = schema9.getExample();
        io.swagger.oas.models.media.Schema schema11 = schema9.getNot();
        java.lang.String str12 = schema9.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj10);
        org.junit.Assert.assertNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#/components/schemas/" + "'", str12, "#/components/schemas/");
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        java.lang.Integer int32 = schema31.getMaxItems();
        schema31.setReadOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList35 = schema31.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema31.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = linkArraySchema43.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray49 = linkArraySchema43.getDefault();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema43.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        schema55.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema63 = schema55.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.XML xML65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema63.xml(xML65);
        io.swagger.oas.models.media.Schema schema68 = schema66.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema43.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema43.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean72 = schema31.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema schema74 = schema31.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema31.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(linkArray49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = schema26.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema23.not(schema34);
        schema34.setUniqueItems((java.lang.Boolean) false);
        schema34.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema34.deprecated((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMinProperties();
        linkArraySchema15.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Schema schema45 = schema41.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema41.minimum(bigDecimal46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        java.lang.String str8 = schema2.getType();
        io.swagger.oas.models.media.Schema schema10 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator19 = schema16.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema16.multipleOf(bigDecimal20);
        java.lang.Boolean boolean22 = schema16.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean5 = linkArraySchema0.getDeprecated();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema8.not(schema19);
        java.lang.String str21 = schema8.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        java.lang.String str29 = schema24.getFormat();
        io.swagger.oas.models.media.Schema schema31 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema32 = schema8.not(schema24);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema0.example((java.lang.Object) schema8);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema0.multipleOf(bigDecimal34);
        java.lang.Boolean boolean36 = linkArraySchema0.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema0.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(boolean5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(schema37);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str36 = schema32.getFormat();
        io.swagger.oas.models.media.Schema schema38 = schema32.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        schema32.addEnumItemObject(linkArray40);
        io.swagger.oas.models.media.Discriminator discriminator44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema32.discriminator(discriminator44);
        io.swagger.oas.models.media.Schema schema47 = schema45.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        java.lang.Integer int51 = linkArraySchema48.getMaxProperties();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema48.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        schema56.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema63 = schema53.additionalProperties(schema56);
        java.util.List<java.lang.String> strList64 = schema53.getRequired();
        java.lang.Boolean boolean65 = schema53.getUniqueItems();
        io.swagger.oas.models.media.XML xML66 = null;
        schema53.setXml(xML66);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema53.discriminator(discriminator68);
        io.swagger.oas.models.media.Schema schema70 = schema45.additionalProperties(schema53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap71 = schema53.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(strMap71);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema14.getMaxProperties();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap22 = null;
        schema14.setProperties(strMap22);
        io.swagger.oas.models.media.Schema schema25 = schema14.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        schema34.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        java.lang.String str47 = schema42.getFormat();
        io.swagger.oas.models.media.Schema schema49 = schema42.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema34.addProperties("#/components/schemas/", schema49);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        schema54.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema54.not(schema65);
        schema65.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema50.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema65);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema73.externalDocs(externalDocumentation76);
        schema73.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema81 = schema73.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = schema81.getExtensions();
        io.swagger.oas.models.media.XML xML83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema81.xml(xML83);
        schema81.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema65.addProperties("#/components/schemas/", schema81);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema65.maximum(bigDecimal88);
        io.swagger.oas.models.media.Schema schema91 = schema65.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema93 = schema65.writeOnly((java.lang.Boolean) true);
        schema25.setNot(schema93);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema45.getExtensions();
        schema14.setExtensions(strMap50);
        java.lang.String str52 = schema14.getName();
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        schema14.setDiscriminator(discriminator53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        java.lang.Integer int58 = linkArraySchema55.getMaxProperties();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema55.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        schema63.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema70 = schema60.additionalProperties(schema63);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = schema60.getExternalDocs();
        io.swagger.oas.models.media.Schema schema73 = schema60.maxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema60.multipleOf(bigDecimal74);
        java.math.BigDecimal bigDecimal76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.minimum(bigDecimal76);
        schema14.setAdditionalProperties(schema77);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(externalDocumentation71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema28);
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        io.swagger.oas.annotations.links.Link link32 = null;
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] { link32 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        io.swagger.oas.annotations.links.Link[][] linkArray36 = new io.swagger.oas.annotations.links.Link[][] { linkArray30, linkArray33 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList37 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList37, linkArray36);
        schema29.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList37);
        schema12.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema42 = schema29.description("#/components/schemas/");
        schema42.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.discriminator(discriminator45);
        io.swagger.oas.models.media.Schema schema48 = schema46.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal49 = null;
        schema48.setMinimum(bigDecimal49);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = schema53.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = null;
        schema53.setProperties(strMap60);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema53.multipleOf(bigDecimal62);
        schema48.setDefault((java.lang.Object) schema53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        schema8.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj44 = schema8.getExample();
        schema8.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(obj44);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean48 = schema45.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        java.lang.Integer int57 = linkArraySchema54.getMaxProperties();
        boolean boolean58 = schema51.equals((java.lang.Object) linkArraySchema54);
        io.swagger.oas.models.media.Discriminator discriminator59 = linkArraySchema54.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema54.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema54.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link67 = null;
        io.swagger.oas.annotations.links.Link[] linkArray68 = new io.swagger.oas.annotations.links.Link[] { link67 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap69 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray68);
        linkArraySchema64.addEnumItemObject(linkArray68);
        schema63.addEnumItemObject(linkArray68);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap72 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray68);
        schema45.addEnumItemObject(linkArray68);
        io.swagger.oas.models.media.Schema schema75 = schema45.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str76 = schema45.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(linkArray68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "#/components/schemas/" + "'", str76, "#/components/schemas/");
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.minimum(bigDecimal12);
        java.lang.Integer int14 = schema13.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema13.discriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema16.maxProperties((java.lang.Integer) 0);
        java.lang.String str19 = schema18.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema14.name("");
        schema22.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.XML xML39 = schema24.getXml();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema24.multipleOf(bigDecimal40);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema24.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(externalDocumentation42);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema2.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 0);
        java.lang.String str50 = schema49.getTitle();
        schema49.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        java.lang.Integer int56 = schema55.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        java.lang.Integer int60 = linkArraySchema57.getMaxProperties();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema57.readOnly((java.lang.Boolean) false);
        schema55.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema57);
        java.lang.Object obj64 = schema55.getExample();
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema55.discriminator(discriminator65);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.minimum(bigDecimal67);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema71 = schema49.not(schema68);
        schema68.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#/components/schemas/" + "'", str50, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(obj64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema8.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        io.swagger.oas.models.media.Schema schema27 = schema20.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        schema27.setNot((io.swagger.oas.models.media.Schema) linkArraySchema33);
        io.swagger.oas.models.media.Schema schema39 = schema16.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema41 = schema16.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema41.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema51.getExternalDocs();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        schema51.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = schema24.required((java.util.List<java.lang.String>) strList60);
        java.math.BigDecimal bigDecimal64 = schema24.getMultipleOf();
        schema24.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema24.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema73.multipleOf(bigDecimal74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema75.properties(strMap76);
        java.lang.String str78 = schema77.getFormat();
        java.lang.Boolean boolean79 = schema77.getReadOnly();
        io.swagger.oas.models.media.Schema schema81 = schema77.$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema83 = schema81.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema84 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema86 = linkArraySchema84.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema88 = schema86.minItems((java.lang.Integer) 100);
        schema86.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int91 = schema86.getMaxLength();
        io.swagger.oas.models.media.XML xML92 = null;
        schema86.setXml(xML92);
        io.swagger.oas.annotations.links.Link link94 = null;
        io.swagger.oas.annotations.links.Link[] linkArray95 = new io.swagger.oas.annotations.links.Link[] { link94 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap96 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray95);
        schema86.addEnumItemObject(linkArray95);
        schema83.addEnumItemObject(linkArray95);
        schema68.addEnumItemObject(linkArray95);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNotNull(linkArray95);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        java.lang.Integer int30 = schema26.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema34.not(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean50 = schema45.getNullable();
        linkArraySchema16.setNot(schema45);
        schema45.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int63 = schema62.getMaxItems();
        schema62.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema70.externalDocs(externalDocumentation73);
        java.lang.String str75 = schema70.getFormat();
        io.swagger.oas.models.media.Schema schema77 = schema70.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema62.addProperties("#/components/schemas/", schema77);
        java.lang.Boolean boolean79 = schema78.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema80 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema82 = linkArraySchema80.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema82.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema82.externalDocs(externalDocumentation85);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int89 = schema88.getMaxItems();
        io.swagger.oas.models.media.Schema schema91 = schema88.title("");
        schema78.setAdditionalProperties(schema88);
        io.swagger.oas.models.media.Schema schema94 = schema78.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema96 = schema78.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema97 = schema45.example((java.lang.Object) schema78);
        io.swagger.oas.models.media.XML xML98 = null;
        io.swagger.oas.models.media.Schema schema99 = schema45.xml(xML98);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        schema2.setDiscriminator(discriminator15);
        io.swagger.oas.models.media.Schema schema18 = schema2.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema16.format("*/*");
        java.lang.Integer int35 = schema16.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMaxItems();
        schema55.addExtension("", (java.lang.Object) (short) -1);
        schema55.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = schema55.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema63.$ref("*/*");
        io.swagger.oas.models.media.Schema schema67 = schema65.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.discriminator(discriminator68);
        io.swagger.oas.models.media.Schema schema71 = schema65.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        schema74.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.externalDocs(externalDocumentation84);
        schema81.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema89 = schema81.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema91 = schema81.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema92 = schema74.example((java.lang.Object) 0);
        schema71.setAdditionalProperties(schema74);
        io.swagger.oas.models.media.Discriminator discriminator94 = null;
        io.swagger.oas.models.media.Schema schema95 = schema74.discriminator(discriminator94);
        io.swagger.oas.models.media.Schema schema96 = schema43.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema74);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        schema26.setMinLength((java.lang.Integer) (-1));
        java.lang.Object obj32 = schema26.getExample();
        java.lang.Boolean boolean33 = schema26.getDeprecated();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema26.setExtensions(strMap34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNull(obj32);
        org.junit.Assert.assertNull(boolean33);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = schema51.getExternalDocs();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        schema51.setRequired((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema63 = schema24.required((java.util.List<java.lang.String>) strList60);
        io.swagger.oas.models.media.Schema schema65 = schema24.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int75 = schema74.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema76 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema76.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema78.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema78.externalDocs(externalDocumentation81);
        schema78.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema78.not(schema89);
        schema74.setNot(schema78);
        java.lang.String str92 = schema74.getFormat();
        io.swagger.oas.models.media.Schema schema94 = schema74.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema96 = schema94.type("*/*");
        schema24.setAdditionalProperties(schema96);
        java.lang.Class<?> wildcardClass98 = schema96.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(externalDocumentation54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        java.lang.Boolean boolean36 = schema16.getDeprecated();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema45.addProperties("#/components/schemas/", schema60);
        io.swagger.oas.models.media.Schema schema63 = schema60.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.externalDocs(externalDocumentation64);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = schema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema79 = schema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema72.not(schema79);
        java.lang.String[] strArray82 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        io.swagger.oas.models.media.Schema schema85 = schema80.required((java.util.List<java.lang.String>) strList83);
        schema65.setRequired((java.util.List<java.lang.String>) strList83);
        io.swagger.oas.models.media.Schema schema87 = schema16.required((java.util.List<java.lang.String>) strList83);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.String str20 = schema19.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str20, "#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema23.not(schema34);
        schema34.setUniqueItems((java.lang.Boolean) false);
        schema34.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema34.deprecated((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMinProperties();
        linkArraySchema15.setAdditionalProperties(schema41);
        java.math.BigDecimal bigDecimal44 = schema41.getMultipleOf();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema41.getExtensions();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = schema41.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(externalDocumentation46);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.discriminator(discriminator24);
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema20.setDiscriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "*/*" + "'", str21, "*/*");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.minItems((java.lang.Integer) 10);
        linkArraySchema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema22 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        io.swagger.oas.models.media.Schema schema24 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema24.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList15 = schema12.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        schema12.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema12.getPattern();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        java.lang.String str29 = schema24.getFormat();
        java.math.BigDecimal bigDecimal30 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        java.lang.Integer int39 = linkArraySchema36.getMaxProperties();
        boolean boolean40 = schema33.equals((java.lang.Object) linkArraySchema36);
        io.swagger.oas.models.media.Discriminator discriminator41 = linkArraySchema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema36.nullable((java.lang.Boolean) false);
        schema24.setExample((java.lang.Object) schema45);
        schema24.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema24.uniqueItems((java.lang.Boolean) true);
        schema50.setPattern("");
        schema50.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema50.maximum(bigDecimal57);
        java.lang.Integer int59 = schema50.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        io.swagger.oas.models.media.Discriminator discriminator70 = linkArraySchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema65.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema71);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = schema79.getExternalDocs();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        schema79.setRequired((java.util.List<java.lang.String>) strList88);
        linkArraySchema71.setRequired((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema92 = schema50.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema93 = schema12.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema95 = schema93.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean96 = schema93.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(linkArrayList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#/components/schemas/" + "'", str21, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(externalDocumentation82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(boolean96);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        java.lang.String str32 = schema27.getFormat();
        schema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema36 = schema27.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        schema45.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema53 = schema45.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        java.lang.Integer int62 = linkArraySchema59.getMaxProperties();
        boolean boolean63 = schema56.equals((java.lang.Object) linkArraySchema59);
        io.swagger.oas.models.media.Discriminator discriminator64 = linkArraySchema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema59.nullable((java.lang.Boolean) false);
        boolean boolean69 = schema53.equals((java.lang.Object) schema68);
        io.swagger.oas.annotations.links.Link[] linkArray70 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap71 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray70);
        schema53.addEnumItemObject(linkArray70);
        schema27.addEnumItemObject(linkArray70);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray70);
        schema22.setExample((java.lang.Object) strMap74);
        schema22.setMaxProperties((java.lang.Integer) 0);
        schema22.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean80 = schema22.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(linkArray70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(boolean80);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = schema13.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.minProperties((java.lang.Integer) 10);
        schema24.setMinItems((java.lang.Integer) 1);
        java.lang.String str27 = schema24.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "*/*" + "'", str27, "*/*");
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema16.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema16.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator22 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator23 = schema21.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        schema33.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema33.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        java.lang.Integer int50 = linkArraySchema47.getMaxProperties();
        boolean boolean51 = schema44.equals((java.lang.Object) linkArraySchema47);
        io.swagger.oas.models.media.Discriminator discriminator52 = linkArraySchema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema47.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema47.nullable((java.lang.Boolean) false);
        boolean boolean57 = schema41.equals((java.lang.Object) schema56);
        io.swagger.oas.models.media.Schema schema59 = schema41.format("*/*");
        java.lang.Integer int60 = schema41.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema41.externalDocs(externalDocumentation61);
        schema41.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema65 = schema21.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema41);
        java.lang.Integer int66 = schema41.getMinProperties();
        schema41.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNull(discriminator23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema6.xml(xML10);
        schema11.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema42.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema schema55 = schema47.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema55.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal58 = null;
        schema55.setMinimum(bigDecimal58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.readOnly((java.lang.Boolean) true);
        java.lang.String str16 = schema11.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.externalDocs(externalDocumentation17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.multipleOf(bigDecimal19);
        java.lang.Integer int21 = schema20.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema31.readOnly((java.lang.Boolean) false);
        schema30.setNot(schema36);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.lang.String str45 = schema40.getFormat();
        schema40.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema40.pattern("");
        java.lang.String str50 = schema40.toString();
        java.math.BigDecimal bigDecimal51 = null;
        schema40.setMinimum(bigDecimal51);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int63 = schema62.getMaxItems();
        schema62.addExtension("", (java.lang.Object) (short) -1);
        schema62.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema70 = schema62.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema76 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema76.pattern("#/components/schemas/");
        java.lang.Integer int79 = linkArraySchema76.getMaxProperties();
        boolean boolean80 = schema73.equals((java.lang.Object) linkArraySchema76);
        io.swagger.oas.models.media.Discriminator discriminator81 = linkArraySchema76.getDiscriminator();
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema76.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema76.nullable((java.lang.Boolean) false);
        boolean boolean86 = schema70.equals((java.lang.Object) schema85);
        schema40.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        io.swagger.oas.models.media.Schema schema89 = schema40.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema30.setExample((java.lang.Object) schema89);
        java.math.BigDecimal bigDecimal91 = null;
        schema89.setMinimum(bigDecimal91);
        io.swagger.oas.models.media.Schema schema94 = schema89.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema96 = schema89.maxItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = schema89.getExtensions();
        schema20.setExtensions(strMap97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/" + "'", str16, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str50, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(discriminator81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        schema11.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema11.not(schema22);
        java.math.BigDecimal bigDecimal24 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        schema22.setExample((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema41);
        io.swagger.oas.models.media.Schema schema43 = null;
        schema41.setNot(schema43);
        java.lang.Boolean boolean45 = schema41.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal46 = schema41.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(bigDecimal46);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal20 = schema14.getMinimum();
        io.swagger.oas.models.media.Schema schema22 = schema14.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        io.swagger.oas.annotations.links.Link[] linkArray44 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray44);
        io.swagger.oas.annotations.links.Link link46 = null;
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] { link46 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap49 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link[][] linkArray50 = new io.swagger.oas.annotations.links.Link[][] { linkArray44, linkArray47 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList51, linkArray50);
        schema43.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        io.swagger.oas.models.media.Schema schema55 = schema43.maxLength((java.lang.Integer) (-1));
        schema28.setAdditionalProperties(schema43);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema28.minimum(bigDecimal57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        schema62.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int67 = schema62.getMaxLength();
        schema62.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema62.discriminator(discriminator70);
        schema58.setAdditionalProperties(schema71);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        java.lang.Integer int81 = linkArraySchema78.getMaxProperties();
        boolean boolean82 = schema75.equals((java.lang.Object) linkArraySchema78);
        io.swagger.oas.models.media.Schema schema84 = linkArraySchema78.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema86 = linkArraySchema78.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str87 = linkArraySchema78.get$ref();
        io.swagger.oas.models.media.Schema schema89 = linkArraySchema78.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema71.additionalProperties(schema89);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = schema89.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(linkArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(str87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(externalDocumentation91);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: -1\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML23 = null;
        linkArraySchema20.setXml(xML23);
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema20.addRequiredItem("hi!");
        java.lang.Integer int27 = linkArraySchema20.getMinProperties();
        java.lang.String str28 = linkArraySchema20.getTitle();
        java.lang.Boolean boolean29 = linkArraySchema20.getNullable();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema20.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema32 = schema6.not(schema31);
        java.lang.Boolean boolean33 = schema31.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator34 = schema31.getDiscriminator();
        schema31.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean33 + "' != '" + false + "'", boolean33, false);
        org.junit.Assert.assertNull(discriminator34);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        schema8.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Boolean boolean29 = schema8.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        schema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema8.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int50 = schema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = schema8.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema54 = schema8.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.annotations.Parameter parameter55 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray56 = new io.swagger.oas.annotations.Parameter[] { parameter55 };
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional58 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray56, components57);
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional60 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray56, components59);
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional62 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray56, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional64 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray56, components63);
        schema54.setDefault((java.lang.Object) parameterListOptional64);
        java.lang.String str66 = schema54.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(parameterArray56);
        org.junit.Assert.assertNotNull(parameterListOptional58);
        org.junit.Assert.assertNotNull(parameterListOptional60);
        org.junit.Assert.assertNotNull(parameterListOptional62);
        org.junit.Assert.assertNotNull(parameterListOptional64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.lang.Boolean boolean13 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema2.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema2.maximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.readOnly((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass47 = schema46.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema18 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema6.getWriteOnly();
        io.swagger.oas.models.media.XML xML22 = schema6.getXml();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema6.minimum(bigDecimal23);
        java.lang.Boolean boolean25 = schema24.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean21);
        org.junit.Assert.assertNull(xML22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean7 = linkArraySchema0.getReadOnly();
        java.lang.Boolean boolean8 = linkArraySchema0.getDeprecated();
        java.lang.Boolean boolean9 = linkArraySchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        linkArraySchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema0.$ref("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.annotations.links.Link[] linkArray34 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray34);
        io.swagger.oas.annotations.links.Link link36 = null;
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] { link36 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap39 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link[][] linkArray40 = new io.swagger.oas.annotations.links.Link[][] { linkArray34, linkArray37 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList41 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList41, linkArray40);
        schema33.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        java.lang.String str45 = schema14.getFormat();
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema schema56 = schema54.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int57 = schema56.getMaxItems();
        schema56.addExtension("", (java.lang.Object) (short) -1);
        schema56.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = schema56.minLength((java.lang.Integer) 10);
        schema14.setDefault((java.lang.Object) schema56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema14.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(linkArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(externalDocumentation66);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema56.setDiscriminator(discriminator57);
        java.lang.Boolean boolean59 = schema56.getReadOnly();
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = schema60.getExternalDocs();
        io.swagger.oas.models.media.Schema schema63 = schema60.name("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema22.getDescription();
        io.swagger.oas.models.media.Schema schema28 = schema22.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema35.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int38 = schema37.getMaxItems();
        schema37.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        java.lang.String str50 = schema45.getFormat();
        io.swagger.oas.models.media.Schema schema52 = schema45.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema37.addProperties("#/components/schemas/", schema52);
        io.swagger.oas.models.media.Schema schema55 = schema52.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema52.addRequiredItem("hi!");
        java.lang.String str58 = schema57.toString();
        java.math.BigDecimal bigDecimal59 = schema57.getMultipleOf();
        io.swagger.oas.models.media.Schema schema61 = schema57.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.minimum(bigDecimal62);
        schema28.setNot(schema61);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str58, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        schema29.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML33 = null;
        schema29.setXml(xML33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        java.lang.Integer int38 = linkArraySchema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        linkArraySchema35.setDiscriminator(discriminator41);
        io.swagger.oas.models.media.Schema schema43 = schema29.not((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema45 = schema43.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema43.getAdditionalProperties();
        java.math.BigDecimal bigDecimal47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema43.maximum(bigDecimal47);
        schema43.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setPattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema21);
        io.swagger.oas.annotations.links.Link[] linkArray23 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        io.swagger.oas.annotations.links.Link link25 = null;
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] { link25 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        io.swagger.oas.annotations.links.Link[][] linkArray29 = new io.swagger.oas.annotations.links.Link[][] { linkArray23, linkArray26 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList30 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList30, linkArray29);
        schema22.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList30);
        io.swagger.oas.models.media.Schema schema34 = schema22.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema34.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema0.not(schema34);
        java.math.BigDecimal bigDecimal37 = schema36.getMultipleOf();
        java.lang.Integer int38 = schema36.getMaxItems();
        java.lang.String str39 = schema36.getDescription();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int49 = schema48.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        schema48.setNot(schema52);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema72 = schema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema79 = schema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema72.not(schema79);
        java.math.BigDecimal bigDecimal81 = schema79.getMaximum();
        schema52.setAdditionalProperties(schema79);
        io.swagger.oas.models.media.Schema schema84 = schema79.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema86 = schema84.$ref("*/*");
        schema36.setDefault((java.lang.Object) schema84);
        schema36.setDescription("*/*");
        io.swagger.oas.models.media.XML xML90 = null;
        schema36.setXml(xML90);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(linkArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(linkArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(bigDecimal81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        schema28.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str31 = schema28.getTitle();
        io.swagger.oas.models.media.Schema schema33 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML34 = schema28.getXml();
        io.swagger.oas.models.media.Schema schema36 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        java.lang.Integer int45 = linkArraySchema42.getMaxProperties();
        boolean boolean46 = schema39.equals((java.lang.Object) linkArraySchema42);
        io.swagger.oas.models.media.Discriminator discriminator47 = linkArraySchema42.getDiscriminator();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema42.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema42.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link55 = null;
        io.swagger.oas.annotations.links.Link[] linkArray56 = new io.swagger.oas.annotations.links.Link[] { link55 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap57 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray56);
        linkArraySchema52.addEnumItemObject(linkArray56);
        schema51.addEnumItemObject(linkArray56);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        boolean boolean70 = schema63.equals((java.lang.Object) linkArraySchema66);
        io.swagger.oas.models.media.Discriminator discriminator71 = linkArraySchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema66.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema72);
        io.swagger.oas.models.media.Schema schema74 = schema51.addProperties("*/*", schema73);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema80 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema82 = linkArraySchema80.pattern("#/components/schemas/");
        java.lang.Integer int83 = linkArraySchema80.getMaxProperties();
        boolean boolean84 = schema77.equals((java.lang.Object) linkArraySchema80);
        io.swagger.oas.models.media.Discriminator discriminator85 = linkArraySchema80.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema86 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema80.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema86);
        linkArraySchema80.setMaxProperties((java.lang.Integer) 1);
        linkArraySchema80.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema80.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema94 = schema74.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema80);
        io.swagger.oas.models.media.Schema schema96 = schema94.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList97 = schema94.getRequired();
        schema36.setRequired(strList97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(discriminator47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(linkArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(int83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(discriminator85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(strList97);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        schema19.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema13.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema19);
        schema19.setFormat("");
        java.lang.String str32 = schema19.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema schema17 = schema14.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal18 = null;
        schema14.setMultipleOf(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        schema43.setExtensions(strMap44);
        schema43.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema43.exclusiveMinimum((java.lang.Boolean) false);
        schema49.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int52 = schema49.getMaxProperties();
        schema49.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int52);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema39.title("");
        schema43.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.discriminator(discriminator24);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        boolean boolean35 = schema28.equals((java.lang.Object) linkArraySchema31);
        io.swagger.oas.models.media.Discriminator discriminator36 = linkArraySchema31.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray37 = linkArraySchema31.getDefault();
        java.math.BigDecimal bigDecimal38 = linkArraySchema31.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        schema41.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema49 = schema41.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.xml(xML51);
        schema49.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema31.additionalProperties(schema56);
        java.lang.Integer int58 = schema56.getMinLength();
        schema25.setDefault((java.lang.Object) int58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "*/*" + "'", str21, "*/*");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(linkArray37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 0);
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema12.example((java.lang.Object) schema30);
        schema37.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML40 = null;
        schema37.setXml(xML40);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema37.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap42);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.String str22 = linkArraySchema15.toString();
        linkArraySchema15.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        linkArraySchema15.addEnumItemObject(linkArray25);
        linkArraySchema15.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema15.discriminator(discriminator31);
        linkArraySchema15.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxProperties((java.lang.Integer) 100);
        schema19.setType("*/*");
        java.math.BigDecimal bigDecimal22 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema24 = schema19.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        java.lang.Integer int30 = linkArraySchema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema27.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema32.uniqueItems((java.lang.Boolean) false);
        schema35.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema39 = schema35.readOnly((java.lang.Boolean) true);
        schema26.setExample((java.lang.Object) schema35);
        schema26.set$ref("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        java.lang.String str35 = schema30.getFormat();
        io.swagger.oas.models.media.Schema schema37 = schema30.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        schema37.setNot((io.swagger.oas.models.media.Schema) linkArraySchema43);
        linkArraySchema43.setExclusiveMaximum((java.lang.Boolean) false);
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema43);
        io.swagger.oas.models.media.Schema schema53 = schema26.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.String str54 = schema53.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str54, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        schema8.setDeprecated((java.lang.Boolean) false);
        schema8.setPattern("");
        java.lang.Boolean boolean25 = schema8.getReadOnly();
        schema8.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        java.lang.Integer int46 = schema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema48 = schema8.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        schema50.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.discriminator(discriminator53);
        java.lang.String str55 = schema50.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        java.math.BigDecimal bigDecimal36 = null;
        linkArraySchema32.setMinimum(bigDecimal36);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.properties(strMap38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema39.getProperties();
        java.lang.Boolean boolean41 = schema39.getReadOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = schema39.getExternalDocs();
        boolean boolean43 = schema31.equals((java.lang.Object) externalDocumentation42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        schema53.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema53.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema61.$ref("*/*");
        java.math.BigDecimal bigDecimal64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.minimum(bigDecimal64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.maximum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = schema31.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema67);
        io.swagger.oas.models.media.Schema schema70 = schema68.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema72 = schema68.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML73 = null;
        schema72.setXml(xML73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(externalDocumentation42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("");
        schema9.setMinProperties((java.lang.Integer) 1);
        java.lang.String str14 = schema9.getType();
        java.lang.Integer int15 = schema9.getMaxLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema9.externalDocs(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema2.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        schema20.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema41);
        io.swagger.oas.annotations.links.Link[] linkArray43 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap44 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray43);
        io.swagger.oas.annotations.links.Link link45 = null;
        io.swagger.oas.annotations.links.Link[] linkArray46 = new io.swagger.oas.annotations.links.Link[] { link45 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap47 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray46);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray46);
        io.swagger.oas.annotations.links.Link[][] linkArray49 = new io.swagger.oas.annotations.links.Link[][] { linkArray43, linkArray46 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList50 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList50, linkArray49);
        schema42.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList50);
        schema20.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList50);
        io.swagger.oas.models.media.XML xML54 = null;
        schema20.setXml(xML54);
        io.swagger.oas.models.media.Schema schema57 = schema20.title("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.properties(strMap58);
        java.lang.Boolean boolean60 = schema59.getReadOnly();
        io.swagger.oas.models.media.XML xML61 = null;
        schema59.setXml(xML61);
        io.swagger.oas.models.media.Schema schema64 = schema59.exclusiveMinimum((java.lang.Boolean) true);
        schema17.setAdditionalProperties(schema64);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(linkArray46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(linkArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        java.lang.String str9 = schema8.getFormat();
        java.lang.Boolean boolean10 = schema8.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean13 = schema8.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(boolean13);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.discriminator(discriminator47);
        java.math.BigDecimal bigDecimal49 = schema48.getMinimum();
        java.lang.Boolean boolean50 = schema48.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNull(boolean50);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.math.BigDecimal bigDecimal38 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.Boolean boolean46 = schema41.getReadOnly();
        io.swagger.oas.models.media.Schema schema48 = schema41.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema41.maximum(bigDecimal49);
        schema50.setNullable((java.lang.Boolean) false);
        schema50.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema50.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean57 = schema37.equals((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema59 = schema37.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema37.multipleOf(bigDecimal60);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema61.externalDocs(externalDocumentation62);
        schema63.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema2.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema2.title("*/*");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema2.minimum(bigDecimal19);
        schema2.setMaxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        java.lang.Integer int25 = schema23.getMinProperties();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema23.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        java.math.BigDecimal bigDecimal15 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.minimum(bigDecimal16);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        schema20.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxProperties((java.lang.Integer) 0);
        schema20.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema20.addRequiredItem("");
        schema20.setFormat("*/*");
        boolean boolean35 = schema14.equals((java.lang.Object) schema20);
        io.swagger.oas.models.media.Schema schema37 = schema14.maxLength((java.lang.Integer) (-1));
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        java.lang.Boolean boolean18 = schema17.getNullable();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        java.lang.Integer int29 = schema25.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema33.not(schema44);
        io.swagger.oas.models.media.Schema schema46 = schema25.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.xml(xML47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema55.not(schema62);
        io.swagger.oas.annotations.links.Link[] linkArray64 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap65 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        io.swagger.oas.annotations.links.Link link66 = null;
        io.swagger.oas.annotations.links.Link[] linkArray67 = new io.swagger.oas.annotations.links.Link[] { link66 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap68 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray67);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap69 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray67);
        io.swagger.oas.annotations.links.Link[][] linkArray70 = new io.swagger.oas.annotations.links.Link[][] { linkArray64, linkArray67 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList71 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList71, linkArray70);
        schema63.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList71);
        io.swagger.oas.models.media.Schema schema75 = schema63.maxLength((java.lang.Integer) (-1));
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList76 = schema75.getEnum();
        schema46.setEnum(linkArrayList76);
        schema17.setEnum(linkArrayList76);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = schema17.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(linkArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(linkArray67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(linkArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(linkArrayList76);
        org.junit.Assert.assertNull(strMap79);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.maximum(bigDecimal10);
        java.math.BigDecimal bigDecimal12 = null;
        schema11.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema23.getMinimum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema23.addRequiredItem("");
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema23.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(linkArrayList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        io.swagger.oas.models.media.Schema schema19 = schema16.maxItems((java.lang.Integer) (-1));
        schema19.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML22 = schema19.getXml();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.externalDocs(externalDocumentation28);
        java.lang.String str30 = schema25.getFormat();
        schema25.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str33 = schema25.getType();
        schema25.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema37 = schema25.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema25.getExternalDocs();
        java.math.BigDecimal bigDecimal39 = schema25.getMaximum();
        schema19.setDefault((java.lang.Object) schema25);
        io.swagger.oas.models.media.Discriminator discriminator41 = schema19.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(xML22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(bigDecimal39);
        org.junit.Assert.assertNull(discriminator41);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.minimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        schema27.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema27.not(schema38);
        schema23.setNot(schema27);
        schema23.setDefault((java.lang.Object) 100.0f);
        schema23.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema23.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema60);
        java.lang.String str62 = schema53.getType();
        io.swagger.oas.models.media.Discriminator discriminator63 = schema53.getDiscriminator();
        java.math.BigDecimal bigDecimal64 = schema53.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema71.not(schema78);
        java.lang.String[] strArray81 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        io.swagger.oas.models.media.Schema schema84 = schema79.required((java.util.List<java.lang.String>) strList82);
        schema53.setRequired((java.util.List<java.lang.String>) strList82);
        schema46.setRequired((java.util.List<java.lang.String>) strList82);
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema5.required((java.util.List<java.lang.String>) strList82);
        schema87.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema90 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema92 = linkArraySchema90.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema94 = linkArraySchema90.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema90.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema97 = schema87.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema90);
        java.math.BigDecimal bigDecimal98 = null;
        linkArraySchema90.setMinimum(bigDecimal98);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(discriminator63);
        org.junit.Assert.assertNull(bigDecimal64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        linkArraySchema7.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema7.name("hi!");
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema7.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        linkArraySchema7.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema43.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        schema53.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema62 = schema53.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        schema66.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema74 = schema66.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema74.xml(xML76);
        schema74.setExclusiveMaximum((java.lang.Boolean) true);
        schema53.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema82 = schema53.readOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema82.multipleOf(bigDecimal83);
        java.lang.Integer int85 = schema82.getMaxItems();
        io.swagger.oas.models.media.Schema schema87 = schema82.uniqueItems((java.lang.Boolean) true);
        schema49.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        io.swagger.oas.models.media.Schema schema35 = schema31.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal36 = null;
        schema31.setMultipleOf(bigDecimal36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("");
        schema9.setName("hi!");
        io.swagger.oas.models.media.Schema schema15 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema28 = schema23.addRequiredItem("hi!");
        java.lang.String str29 = schema28.toString();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema36.not(schema43);
        java.lang.String[] strArray46 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        io.swagger.oas.models.media.Schema schema49 = schema44.required((java.util.List<java.lang.String>) strList47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int60 = schema59.getMaxItems();
        schema59.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = null;
        schema59.setExtensions(strMap64);
        io.swagger.oas.models.media.Schema schema66 = schema44.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.externalDocs(externalDocumentation72);
        schema69.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema76 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema76.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema78.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = schema69.not(schema80);
        java.math.BigDecimal bigDecimal82 = schema80.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema83 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema83.pattern("#/components/schemas/");
        java.lang.Integer int86 = schema85.getMaxLength();
        schema80.setExample((java.lang.Object) schema85);
        io.swagger.oas.models.media.Schema schema89 = schema85.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema91 = schema89.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema93 = schema89.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema94 = schema44.not(schema93);
        schema28.setNot(schema94);
        java.lang.String str96 = schema94.get$ref();
        schema94.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str29, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(bigDecimal82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema39.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 0);
        schema59.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema39.not(schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link68 = null;
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] { link68 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        linkArraySchema65.addEnumItemObject(linkArray69);
        schema59.addEnumItemObject(linkArray69);
        io.swagger.oas.models.media.Schema schema74 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema77.externalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema83 = schema81.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int84 = schema83.getMaxItems();
        schema83.addExtension("", (java.lang.Object) (short) -1);
        schema83.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema91 = schema83.minLength((java.lang.Integer) 10);
        io.swagger.oas.annotations.links.Link[] linkArray92 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap93 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray92);
        schema91.addEnumItemObject(linkArray92);
        boolean boolean95 = schema59.equals((java.lang.Object) schema91);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation96 = schema59.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(linkArray92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNull(externalDocumentation96);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean20 = schema2.getWriteOnly();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema2.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema34 = schema26.maxProperties((java.lang.Integer) 0);
        schema26.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema26.addRequiredItem("");
        schema26.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal41 = schema26.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        java.lang.String str49 = schema44.getFormat();
        java.math.BigDecimal bigDecimal50 = schema44.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        java.lang.Integer int59 = linkArraySchema56.getMaxProperties();
        boolean boolean60 = schema53.equals((java.lang.Object) linkArraySchema56);
        io.swagger.oas.models.media.Discriminator discriminator61 = linkArraySchema56.getDiscriminator();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema56.nullable((java.lang.Boolean) false);
        schema44.setExample((java.lang.Object) schema65);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema65.xml(xML67);
        io.swagger.oas.models.media.Schema schema69 = schema26.not(schema68);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema84.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema72.addProperties("#/components/schemas/", schema86);
        io.swagger.oas.models.media.Schema schema88 = schema68.additionalProperties(schema87);
        java.lang.Boolean boolean89 = schema68.getExclusiveMaximum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList90 = schema68.getEnum();
        io.swagger.oas.models.media.Schema schema91 = schema68.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema93 = schema68.writeOnly((java.lang.Boolean) true);
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) true);
        java.lang.Boolean boolean95 = schema2.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNull(linkArrayList90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = schema48.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator52 = schema48.getDiscriminator();
        schema48.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal55 = schema48.getMultipleOf();
        io.swagger.oas.models.media.Schema schema57 = schema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema48.minItems((java.lang.Integer) 100);
        schema48.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(linkArrayList51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema39.maximum(bigDecimal62);
        io.swagger.oas.models.media.Schema schema65 = schema63.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str66 = schema65.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str30 = schema26.getTitle();
        java.math.BigDecimal bigDecimal31 = schema26.getMinimum();
        io.swagger.oas.models.media.Schema schema32 = schema26.getNot();
        java.math.BigDecimal bigDecimal33 = schema32.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(bigDecimal33);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema2.pattern("");
        java.lang.Boolean boolean34 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = schema33.minItems((java.lang.Integer) 10);
        schema36.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList39 = schema36.getEnum();
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMultipleOf(bigDecimal40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(linkArrayList39);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.String str25 = schema23.getFormat();
        java.lang.Boolean boolean26 = schema23.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int37 = schema36.getMaxItems();
        schema36.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema36.getExternalDocs();
        io.swagger.oas.models.media.Schema schema42 = schema23.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema44 = schema23.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal45 = null;
        schema44.setMultipleOf(bigDecimal45);
        java.lang.Boolean boolean47 = schema44.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean47);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.lang.Object obj25 = schema24.getExample();
        java.lang.Boolean boolean26 = schema24.getReadOnly();
        schema24.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema39 = schema31.name("#/components/schemas/");
        schema39.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.xml(xML42);
        io.swagger.oas.models.media.Schema schema45 = schema43.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.multipleOf(bigDecimal46);
        schema47.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema24.setDefault((java.lang.Object) schema47);
        io.swagger.oas.models.media.Schema schema52 = schema47.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = schema47.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = schema5.getExtensions();
        io.swagger.oas.models.media.Schema schema8 = schema5.uniqueItems((java.lang.Boolean) false);
        schema8.setPattern("*/*");
        io.swagger.oas.models.media.Schema schema12 = schema8.format("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema16.format("*/*");
        java.lang.Integer int35 = schema16.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema43.xml(xML44);
        schema45.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema45.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        schema13.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema20.addProperties("#/components/schemas/", schema34);
        schema20.setDefault((java.lang.Object) (-1));
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        java.lang.Integer int44 = schema43.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        java.lang.Integer int48 = linkArraySchema45.getMaxProperties();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema45.readOnly((java.lang.Boolean) false);
        schema43.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema45);
        schema20.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema43);
        schema20.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        schema57.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema65 = schema57.maxProperties((java.lang.Integer) 0);
        schema57.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema69 = schema57.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator70 = schema69.getDiscriminator();
        boolean boolean71 = schema20.equals((java.lang.Object) discriminator70);
        io.swagger.oas.models.media.Schema schema73 = schema20.writeOnly((java.lang.Boolean) false);
        schema20.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema20.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema78 = schema13.not(schema20);
        io.swagger.oas.models.media.Schema schema80 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        schema41.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = schema49.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("#/components/schemas/", schema56);
        java.math.BigDecimal bigDecimal58 = schema41.getMultipleOf();
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema41.xml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema32.example((java.lang.Object) xML59);
        java.lang.Integer int62 = schema32.getMinProperties();
        java.math.BigDecimal bigDecimal63 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema32.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str65 = schema64.getName();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(schema64);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.lang.Integer int4 = linkArraySchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        java.lang.Integer int15 = linkArraySchema12.getMaxProperties();
        boolean boolean16 = schema9.equals((java.lang.Object) linkArraySchema12);
        io.swagger.oas.models.media.Discriminator discriminator17 = linkArraySchema12.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray18 = linkArraySchema12.getDefault();
        java.math.BigDecimal bigDecimal19 = linkArraySchema12.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        schema22.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema30 = schema22.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = schema30.getExtensions();
        io.swagger.oas.models.media.XML xML32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema30.xml(xML32);
        schema30.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema12.additionalProperties(schema37);
        io.swagger.oas.models.media.Schema schema40 = schema38.format("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap41 = null;
        schema40.setProperties(strMap41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema51.getMaxItems();
        schema51.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        java.lang.String str64 = schema59.getFormat();
        io.swagger.oas.models.media.Schema schema66 = schema59.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema51.addProperties("#/components/schemas/", schema66);
        java.lang.String str68 = schema66.getFormat();
        java.lang.Boolean boolean69 = schema66.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema73.externalDocs(externalDocumentation76);
        io.swagger.oas.models.media.Schema schema79 = schema77.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int80 = schema79.getMaxItems();
        schema79.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = schema79.getExternalDocs();
        io.swagger.oas.models.media.Schema schema85 = schema66.addProperties("*/*", schema79);
        schema85.setReadOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap88 = schema85.getProperties();
        io.swagger.oas.models.media.Schema schema89 = schema40.properties(strMap88);
        io.swagger.oas.models.media.Schema schema90 = schema6.properties(strMap88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation91 = null;
        io.swagger.oas.models.media.Schema schema92 = schema6.externalDocs(externalDocumentation91);
        java.lang.String str93 = schema6.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(discriminator17);
        org.junit.Assert.assertNull(linkArray18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(boolean69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNull(externalDocumentation84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(str93);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        schema32.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.lang.String str45 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema47 = schema40.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema32.addProperties("#/components/schemas/", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        schema63.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int78 = schema77.getMaxItems();
        schema77.addExtension("", (java.lang.Object) (short) -1);
        schema77.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema77.deprecated((java.lang.Boolean) true);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        schema85.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema85.xml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        java.math.BigDecimal bigDecimal93 = null;
        schema91.setMultipleOf(bigDecimal93);
        java.lang.Boolean boolean95 = schema91.getWriteOnly();
        io.swagger.oas.models.media.Schema schema96 = schema91.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNull(schema96);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema14.getMaxProperties();
        java.lang.Integer int22 = schema14.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema30.getExternalDocs();
        java.lang.Integer int34 = schema30.getMinLength();
        io.swagger.oas.models.media.Schema schema36 = schema30.minItems((java.lang.Integer) 10);
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema14.addProperties("", schema30);
        java.lang.Boolean boolean40 = schema14.getNullable();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema14.setExternalDocs(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema18 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        schema20.setDiscriminator(discriminator21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        java.lang.Integer int12 = linkArraySchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema9.readOnly((java.lang.Boolean) false);
        schema8.setNot(schema14);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema18.getFormat();
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema18.pattern("");
        java.lang.String str28 = schema18.toString();
        java.math.BigDecimal bigDecimal29 = null;
        schema18.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        schema40.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema40.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        java.lang.Integer int57 = linkArraySchema54.getMaxProperties();
        boolean boolean58 = schema51.equals((java.lang.Object) linkArraySchema54);
        io.swagger.oas.models.media.Discriminator discriminator59 = linkArraySchema54.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema54.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema54.nullable((java.lang.Boolean) false);
        boolean boolean64 = schema48.equals((java.lang.Object) schema63);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema67 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema8.setExample((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema schema70 = schema67.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        schema78.setExtensions(strMap79);
        schema70.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap79);
        java.lang.String str82 = schema70.getName();
        java.math.BigDecimal bigDecimal83 = null;
        schema70.setMinimum(bigDecimal83);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setName("hi!");
        io.swagger.oas.models.media.Schema schema28 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal31 = null;
        schema2.setMultipleOf(bigDecimal31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        java.math.BigDecimal bigDecimal22 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        boolean boolean32 = schema25.equals((java.lang.Object) linkArraySchema28);
        io.swagger.oas.models.media.Discriminator discriminator33 = linkArraySchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema28.nullable((java.lang.Boolean) false);
        schema16.setExample((java.lang.Object) schema37);
        linkArraySchema5.setDefault((java.lang.Object) schema37);
        java.math.BigDecimal bigDecimal40 = schema37.getMinimum();
        io.swagger.oas.models.media.XML xML41 = schema37.getXml();
        io.swagger.oas.models.media.Schema schema43 = schema37.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean44 = schema37.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema37.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema48 = schema37.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal40);
        org.junit.Assert.assertNull(xML41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = null;
        schema2.setMaximum(bigDecimal17);
        java.lang.Boolean boolean19 = schema2.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("hi!");
        schema23.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.maxLength((java.lang.Integer) 1);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.lang.String str24 = schema19.getFormat();
        io.swagger.oas.models.media.Schema schema26 = schema19.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema16.setNot(schema26);
        schema26.setMinItems((java.lang.Integer) 10);
        schema26.setWriteOnly((java.lang.Boolean) false);
        schema26.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal38 = null;
        schema26.setMultipleOf(bigDecimal38);
        java.math.BigDecimal bigDecimal40 = null;
        schema26.setMinimum(bigDecimal40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        java.lang.String str18 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema16.getExternalDocs();
        java.lang.Boolean boolean34 = schema16.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema9.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema9.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema17 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema9.maximum(bigDecimal18);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema13.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.lang.String str21 = schema18.getName();
        java.math.BigDecimal bigDecimal22 = schema18.getMinimum();
        io.swagger.oas.models.media.Schema schema24 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = schema18.getExternalDocs();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        schema18.setDiscriminator(discriminator26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(externalDocumentation25);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Boolean boolean11 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema2.uniqueItems((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema2.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        java.lang.String str30 = schema27.getTitle();
        io.swagger.oas.models.media.Schema schema32 = schema27.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema schema38 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int48 = schema47.getMaxItems();
        schema47.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        java.lang.String str60 = schema55.getFormat();
        io.swagger.oas.models.media.Schema schema62 = schema55.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema47.addProperties("#/components/schemas/", schema62);
        io.swagger.oas.models.media.Schema schema65 = schema62.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema65.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = schema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema81);
        java.lang.String[] strArray84 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        io.swagger.oas.models.media.Schema schema87 = schema82.required((java.util.List<java.lang.String>) strList85);
        schema67.setRequired((java.util.List<java.lang.String>) strList85);
        schema29.setRequired((java.util.List<java.lang.String>) strList85);
        java.math.BigDecimal bigDecimal90 = schema29.getMinimum();
        java.lang.Integer int91 = schema29.getMaxLength();
        java.lang.String str92 = schema29.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNull(int91);
        org.junit.Assert.assertNull(str92);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema43.readOnly((java.lang.Boolean) false);
        schema42.setNot(schema48);
        boolean boolean50 = linkArraySchema5.equals((java.lang.Object) schema48);
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema5.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean53 = linkArraySchema5.getUniqueItems();
        linkArraySchema5.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + boolean53 + "' != '" + true + "'", boolean53, true);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        io.swagger.oas.annotations.links.Link[] linkArray44 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray44);
        io.swagger.oas.annotations.links.Link link46 = null;
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] { link46 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap49 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link[][] linkArray50 = new io.swagger.oas.annotations.links.Link[][] { linkArray44, linkArray47 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList51, linkArray50);
        schema43.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        io.swagger.oas.models.media.Schema schema55 = schema43.maxLength((java.lang.Integer) (-1));
        schema28.setAdditionalProperties(schema43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        java.lang.String str64 = schema59.getFormat();
        io.swagger.oas.models.media.Schema schema66 = schema59.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        java.lang.Integer int75 = linkArraySchema72.getMaxProperties();
        boolean boolean76 = schema69.equals((java.lang.Object) linkArraySchema72);
        schema66.setNot((io.swagger.oas.models.media.Schema) linkArraySchema72);
        io.swagger.oas.models.media.Schema schema79 = schema66.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema81 = schema79.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema83 = schema81.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema84 = schema43.example((java.lang.Object) 0);
        schema43.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator87 = null;
        io.swagger.oas.models.media.Schema schema88 = schema43.discriminator(discriminator87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(linkArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        io.swagger.oas.models.media.Schema schema51 = schema49.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        schema56.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema64 = schema56.maxProperties((java.lang.Integer) 0);
        schema56.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = schema56.addRequiredItem("");
        java.math.BigDecimal bigDecimal69 = schema68.getMinimum();
        boolean boolean70 = schema51.equals((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema72 = schema51.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean73 = schema51.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(bigDecimal69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + boolean73 + "' != '" + true + "'", boolean73, true);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray24 = null;
        schema23.addEnumItemObject(linkArray24);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML29 = null;
        linkArraySchema26.setXml(xML29);
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema26.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema23.example((java.lang.Object) "hi!");
        java.math.BigDecimal bigDecimal34 = schema33.getMinimum();
        java.util.List<java.lang.String> strList35 = schema33.getRequired();
        schema33.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.Boolean boolean46 = schema41.getReadOnly();
        java.lang.String str47 = schema41.getType();
        io.swagger.oas.models.media.Schema schema49 = schema41.minLength((java.lang.Integer) 100);
        schema33.addExtension("", (java.lang.Object) schema41);
        schema33.setMaxItems((java.lang.Integer) 10);
        schema33.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.Boolean boolean44 = schema43.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema43.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema43.writeOnly((java.lang.Boolean) true);
        schema48.setPattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema33.setProperties(strMap34);
        java.lang.Boolean boolean36 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str39 = schema33.getType();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema66 = schema58.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema66.getExtensions();
        io.swagger.oas.models.media.Schema schema68 = schema54.addProperties("#/components/schemas/", schema66);
        schema68.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str71 = schema68.getTitle();
        schema68.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema68.getProperties();
        io.swagger.oas.models.media.Schema schema75 = schema33.properties(strMap74);
        io.swagger.oas.models.media.Discriminator discriminator76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema33.discriminator(discriminator76);
        java.lang.Integer int78 = schema33.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        schema41.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = schema49.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("#/components/schemas/", schema56);
        java.math.BigDecimal bigDecimal58 = schema41.getMultipleOf();
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema41.xml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema32.example((java.lang.Object) xML59);
        schema32.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema37 = schema14.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema39.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema41.minimum(bigDecimal42);
        java.lang.Boolean boolean44 = schema43.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertEquals("'" + boolean44 + "' != '" + true + "'", boolean44, true);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setTitle("*/*");
        java.lang.String str32 = schema8.getName();
        io.swagger.oas.models.media.Schema schema34 = schema8.title("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        java.lang.String str39 = schema38.getDescription();
        java.lang.String str40 = schema38.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        io.swagger.oas.models.media.Schema schema44 = schema37.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema29.addProperties("#/components/schemas/", schema44);
        java.math.BigDecimal bigDecimal46 = schema44.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema8.additionalProperties(schema44);
        io.swagger.oas.models.media.Schema schema49 = schema47.type("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema47.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        schema54.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema62 = schema54.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = schema62.getExtensions();
        io.swagger.oas.models.media.XML xML64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema62.xml(xML64);
        io.swagger.oas.models.media.Schema schema67 = schema62.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "", "#/components/schemas/", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema62.required((java.util.List<java.lang.String>) strList78);
        io.swagger.oas.models.media.Schema schema81 = schema47.required((java.util.List<java.lang.String>) strList78);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema10 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        io.swagger.oas.models.media.Schema schema14 = schema12.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList33 = schema30.getRequired();
        io.swagger.oas.models.media.Schema schema35 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        schema35.setDiscriminator(discriminator36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        io.swagger.oas.models.media.Schema schema27 = schema20.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        schema27.setNot((io.swagger.oas.models.media.Schema) linkArraySchema33);
        io.swagger.oas.models.media.Schema schema39 = schema16.addProperties("", schema27);
        schema39.setMaxProperties((java.lang.Integer) 0);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.annotations.links.Link[] linkArray34 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray34);
        io.swagger.oas.annotations.links.Link link36 = null;
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] { link36 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap39 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link[][] linkArray40 = new io.swagger.oas.annotations.links.Link[][] { linkArray34, linkArray37 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList41 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList41, linkArray40);
        schema33.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        schema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setWriteOnly((java.lang.Boolean) true);
        schema14.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int53 = schema14.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(linkArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        java.lang.Integer int25 = schema23.getMinProperties();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema31.readOnly((java.lang.Boolean) false);
        linkArraySchema31.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema31.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = schema40.format("");
        io.swagger.oas.models.media.Schema schema43 = schema23.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema42);
        schema43.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema47 = schema43.maxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal48 = schema43.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal48);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str8 = linkArraySchema0.getTitle();
        java.lang.String str9 = linkArraySchema0.toString();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        schema16.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema24 = schema16.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema27.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = schema27.getProperties();
        io.swagger.oas.models.media.Schema schema33 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema27.setDiscriminator(discriminator34);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        linkArraySchema36.addEnumItemObject(linkArray40);
        schema27.addEnumItemObject(linkArray40);
        linkArraySchema0.addEnumItemObject(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(schema30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema26.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj35 = schema32.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean28 = schema8.getUniqueItems();
        io.swagger.oas.models.media.Schema schema30 = schema8.maxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal31 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema33 = schema8.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        schema49.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema49.setReadOnly((java.lang.Boolean) false);
        schema49.setDescription("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("");
        schema9.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal14 = null;
        schema9.setMinimum(bigDecimal14);
        io.swagger.oas.models.media.Schema schema17 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema9.maximum(bigDecimal18);
        io.swagger.oas.models.media.Schema schema21 = schema9.exclusiveMinimum((java.lang.Boolean) true);
        schema21.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema13.properties(strMap21);
        java.lang.Boolean boolean23 = schema13.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema61 = schema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema54.not(schema61);
        java.lang.String[] strArray64 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        io.swagger.oas.models.media.Schema schema67 = schema62.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.Schema schema68 = schema45.required((java.util.List<java.lang.String>) strList65);
        io.swagger.oas.models.media.XML xML69 = schema45.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap70 = schema45.getProperties();
        io.swagger.oas.models.media.Discriminator discriminator71 = schema45.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(xML69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(discriminator71);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        java.lang.String str37 = schema29.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        java.lang.Boolean boolean41 = schema5.getUniqueItems();
        schema5.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema5.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = schema5.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema5.discriminator(discriminator49);
        schema50.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema26.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.xml(xML29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = schema37.getExternalDocs();
        java.lang.Integer int41 = schema37.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        schema45.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema45.not(schema56);
        io.swagger.oas.models.media.Schema schema58 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema56);
        java.math.BigDecimal bigDecimal59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.multipleOf(bigDecimal59);
        java.math.BigDecimal bigDecimal61 = null;
        schema60.setMinimum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema63 = schema60.getNot();
        schema30.setDefault((java.lang.Object) schema63);
        java.lang.String str65 = schema30.getDescription();
        schema30.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(schema63);
        org.junit.Assert.assertNull(str65);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getFormat();
        schema39.setNullable((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal43 = schema39.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(bigDecimal43);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.lang.String str38 = schema37.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        io.swagger.oas.models.media.Schema schema54 = schema50.readOnly((java.lang.Boolean) true);
        java.lang.String str55 = schema50.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.externalDocs(externalDocumentation56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema37.not(schema57);
        java.lang.String str61 = schema37.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#/components/schemas/" + "'", str55, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "#/components/schemas/" + "'", str61, "#/components/schemas/");
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML25 = schema24.getXml();
        io.swagger.oas.models.media.Schema schema27 = schema24.minLength((java.lang.Integer) (-1));
        schema27.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMinimum((java.lang.Boolean) true);
        schema31.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        schema31.setDiscriminator(discriminator34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(xML25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        schema30.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = schema10.getWriteOnly();
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema10.getMultipleOf();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = schema10.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(externalDocumentation24);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema2.setDiscriminator(discriminator13);
        io.swagger.oas.models.media.Schema schema16 = schema2.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema2.title("");
        schema2.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.minLength((java.lang.Integer) 0);
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema31.getNullable();
        java.lang.Boolean boolean35 = schema31.getNullable();
        io.swagger.oas.models.media.Schema schema37 = schema31.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str38 = schema31.getType();
        java.math.BigDecimal bigDecimal39 = schema31.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema2.getMultipleOf();
        schema2.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema54 = schema2.example((java.lang.Object) schema53);
        schema54.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema73 = schema71.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema59.addProperties("#/components/schemas/", schema73);
        schema59.setDefault((java.lang.Object) (-1));
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML79 = schema59.getXml();
        java.lang.Integer int80 = schema59.getMaxItems();
        schema59.setType("*/*");
        io.swagger.oas.models.media.Schema schema84 = schema59.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.multipleOf(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema94 = schema84.additionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema95 = schema54.additionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema97 = schema95.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMinimum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema2.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.properties(strMap20);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema23.xml(xML24);
        io.swagger.oas.models.media.Schema schema26 = schema12.not(schema23);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema12.discriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        java.lang.Boolean boolean20 = linkArraySchema16.getReadOnly();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema16.$ref("");
        java.lang.Integer int23 = schema22.getMaxLength();
        schema22.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        linkArraySchema5.setDeprecated((java.lang.Boolean) false);
        linkArraySchema5.setExclusiveMinimum((java.lang.Boolean) true);
        linkArraySchema5.setNullable((java.lang.Boolean) true);
        java.lang.String str16 = linkArraySchema5.toString();
        java.lang.Integer int17 = linkArraySchema5.getMaxItems();
        java.lang.Boolean boolean18 = linkArraySchema5.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}" + "'", str16, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema6.setXml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema6.nullable((java.lang.Boolean) true);
        java.lang.String str19 = schema6.getDescription();
        schema6.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = null;
        schema14.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema14.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.exclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.XML xML39 = schema24.getXml();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema24.multipleOf(bigDecimal40);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str44 = schema41.get$ref();
        java.lang.String str45 = schema41.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.String str14 = schema11.getDescription();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema28);
        java.lang.String[] strArray31 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        io.swagger.oas.models.media.Schema schema34 = schema29.required((java.util.List<java.lang.String>) strList32);
        io.swagger.oas.models.media.Schema schema36 = schema34.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal37 = null;
        schema34.setMinimum(bigDecimal37);
        io.swagger.oas.models.media.Schema schema39 = schema11.not(schema34);
        io.swagger.oas.models.media.Schema schema41 = schema34.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema34.maximum(bigDecimal42);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        linkArraySchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema0.maximum(bigDecimal12);
        java.lang.String str14 = linkArraySchema0.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#/components/schemas/" + "'", str14, "#/components/schemas/");
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        java.lang.String str17 = schema12.getFormat();
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema21 = schema12.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        java.lang.String str29 = schema24.getFormat();
        schema24.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema38.not(schema45);
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link link49 = null;
        io.swagger.oas.annotations.links.Link[] linkArray50 = new io.swagger.oas.annotations.links.Link[] { link49 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap51 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray50);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap52 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray50);
        io.swagger.oas.annotations.links.Link[][] linkArray53 = new io.swagger.oas.annotations.links.Link[][] { linkArray47, linkArray50 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList54 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList54, linkArray53);
        schema46.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList54);
        schema24.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList54);
        schema21.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList54);
        schema2.setExample((java.lang.Object) schema21);
        java.lang.String str60 = schema2.getFormat();
        java.lang.Boolean boolean61 = schema2.getExclusiveMinimum();
        schema2.set$ref("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(linkArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(boolean61);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema50.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        java.lang.Integer int66 = linkArraySchema63.getMaxProperties();
        boolean boolean67 = schema60.equals((java.lang.Object) linkArraySchema63);
        java.lang.String str68 = schema60.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema60.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema50.not(schema70);
        java.lang.Boolean boolean72 = linkArraySchema50.getUniqueItems();
        schema2.setNot((io.swagger.oas.models.media.Schema) linkArraySchema50);
        io.swagger.oas.models.media.Schema schema74 = schema2.getNot();
        io.swagger.oas.models.media.Schema schema75 = schema2.getAdditionalProperties();
        schema2.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        io.swagger.oas.models.media.Schema schema30 = schema14.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema41 = schema33.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        boolean boolean43 = schema30.equals((java.lang.Object) strMap42);
        io.swagger.oas.models.media.Schema schema45 = schema30.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema30.externalDocs(externalDocumentation46);
        java.lang.String str48 = schema47.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema39.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 0);
        schema59.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema39.not(schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link68 = null;
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] { link68 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        linkArraySchema65.addEnumItemObject(linkArray69);
        schema59.addEnumItemObject(linkArray69);
        io.swagger.oas.models.media.Schema schema74 = schema59.readOnly((java.lang.Boolean) false);
        java.lang.Integer int75 = schema59.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema43 = schema41.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int44 = schema43.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema47.not(schema58);
        schema43.setNot(schema47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema43.externalDocs(externalDocumentation61);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        io.swagger.oas.models.media.Schema schema65 = schema62.getAdditionalProperties();
        schema34.setAdditionalProperties(schema62);
        schema62.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal69 = schema62.getMultipleOf();
        io.swagger.oas.annotations.links.Link[] linkArray70 = null;
        schema62.addEnumItemObject(linkArray70);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(schema65);
        org.junit.Assert.assertNull(bigDecimal69);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        java.lang.String str18 = schema10.getDescription();
        java.lang.String str19 = schema10.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str19, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.title("");
        java.lang.Boolean boolean10 = schema2.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema2.xml(xML13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema2.setProperties(strMap18);
        schema2.setDescription("*/*");
        java.lang.Boolean boolean22 = schema2.getWriteOnly();
        java.lang.String str23 = schema2.getFormat();
        java.lang.Boolean boolean24 = schema2.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(boolean24);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        schema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema21.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema42 = schema34.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.xml(xML44);
        schema42.setExclusiveMaximum((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema50 = schema21.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema21.pattern("");
        schema18.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema60.not(schema67);
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        io.swagger.oas.annotations.links.Link link71 = null;
        io.swagger.oas.annotations.links.Link[] linkArray72 = new io.swagger.oas.annotations.links.Link[] { link71 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap73 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray72);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray72);
        io.swagger.oas.annotations.links.Link[][] linkArray75 = new io.swagger.oas.annotations.links.Link[][] { linkArray69, linkArray72 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList76 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList76, linkArray75);
        schema68.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        schema52.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        schema10.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        schema10.setDiscriminator(discriminator81);
        schema10.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema86 = schema10.name("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation87 = schema10.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(linkArray72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(linkArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(externalDocumentation87);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema34.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema25.description("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator32 = schema25.getDiscriminator();
        io.swagger.oas.models.media.Schema schema34 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int35 = schema34.getMaxItems();
        java.math.BigDecimal bigDecimal36 = null;
        schema34.setMultipleOf(bigDecimal36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(discriminator32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str8 = linkArraySchema0.getTitle();
        java.lang.String str9 = linkArraySchema0.toString();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) (-1));
        java.util.List<java.lang.String> strList14 = linkArraySchema0.getRequired();
        linkArraySchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str9, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema6.setExtensions(strMap7);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.List<java.lang.String> strList11 = schema6.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        java.lang.String str27 = schema26.getTitle();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.xml(xML30);
        io.swagger.oas.models.media.Schema schema32 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        io.swagger.oas.models.media.Schema schema34 = schema6.uniqueItems((java.lang.Boolean) true);
        schema6.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        java.lang.String str29 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.minLength((java.lang.Integer) 10);
        java.lang.String str38 = schema37.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str38, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema11.setDiscriminator(discriminator51);
        java.lang.Boolean boolean53 = schema11.getNullable();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList54 = schema11.getEnum();
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema11.xml(xML55);
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema59 = null;
        schema58.setNot(schema59);
        java.math.BigDecimal bigDecimal61 = schema58.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(boolean53);
        org.junit.Assert.assertNotNull(linkArrayList54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal61);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.writeOnly((java.lang.Boolean) false);
        linkArraySchema5.setWriteOnly((java.lang.Boolean) true);
        java.lang.String str36 = linkArraySchema5.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        schema17.setMaxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        java.lang.String str33 = schema28.getFormat();
        schema28.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema28.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        schema41.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema49 = schema41.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema49.getExtensions();
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.xml(xML51);
        schema49.setExclusiveMaximum((java.lang.Boolean) true);
        schema28.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema57 = schema28.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema28.pattern("");
        schema25.setAdditionalProperties(schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema74);
        io.swagger.oas.annotations.links.Link[] linkArray76 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        io.swagger.oas.annotations.links.Link link78 = null;
        io.swagger.oas.annotations.links.Link[] linkArray79 = new io.swagger.oas.annotations.links.Link[] { link78 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap80 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray79);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap81 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray79);
        io.swagger.oas.annotations.links.Link[][] linkArray82 = new io.swagger.oas.annotations.links.Link[][] { linkArray76, linkArray79 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList83 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList83, linkArray82);
        schema75.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList83);
        schema59.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList83);
        schema17.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList83);
        schema17.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(linkArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(linkArray79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(linkArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = schema16.getExternalDocs();
        java.lang.Integer int20 = schema16.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        schema24.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema24.not(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema16.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema35);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.xml(xML38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema53);
        io.swagger.oas.annotations.links.Link[] linkArray55 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap56 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray55);
        io.swagger.oas.annotations.links.Link link57 = null;
        io.swagger.oas.annotations.links.Link[] linkArray58 = new io.swagger.oas.annotations.links.Link[] { link57 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap59 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray58);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap60 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray58);
        io.swagger.oas.annotations.links.Link[][] linkArray61 = new io.swagger.oas.annotations.links.Link[][] { linkArray55, linkArray58 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList62 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList62, linkArray61);
        schema54.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList62);
        io.swagger.oas.models.media.Schema schema66 = schema54.maxLength((java.lang.Integer) (-1));
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList67 = schema66.getEnum();
        schema37.setEnum(linkArrayList67);
        schema9.setEnum(linkArrayList67);
        schema9.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(externalDocumentation19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(linkArray55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(linkArray58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(linkArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(linkArrayList67);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema39.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean42 = schema41.getNullable();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(schema41);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema53 = schema46.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema38.addProperties("#/components/schemas/", schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema58.not(schema69);
        schema69.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        java.lang.Boolean boolean74 = schema54.getReadOnly();
        io.swagger.oas.models.media.Schema schema76 = schema54.writeOnly((java.lang.Boolean) true);
        schema26.setNot(schema54);
        io.swagger.oas.models.media.Schema schema79 = schema54.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema54.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean82 = schema81.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema84 = schema81.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema84.minLength((java.lang.Integer) (-1));
        schema84.setFormat("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = null;
        schema32.setMinimum(bigDecimal36);
        java.math.BigDecimal bigDecimal38 = null;
        schema32.setMultipleOf(bigDecimal38);
        schema32.setDescription("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        java.lang.Integer int11 = schema10.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxLength((java.lang.Integer) 10);
        schema10.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        java.lang.String str14 = schema9.getFormat();
        schema9.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema9.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        schema21.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        io.swagger.oas.annotations.links.Link[] linkArray44 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray44);
        io.swagger.oas.annotations.links.Link link46 = null;
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] { link46 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap49 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link[][] linkArray50 = new io.swagger.oas.annotations.links.Link[][] { linkArray44, linkArray47 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList51, linkArray50);
        schema43.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        schema21.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        schema18.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        schema18.setName("hi!");
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        schema18.setDiscriminator(discriminator58);
        java.lang.Boolean boolean60 = schema18.getNullable();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList61 = schema18.getEnum();
        schema2.setEnum(linkArrayList61);
        io.swagger.oas.models.media.Schema schema64 = schema2.maxItems((java.lang.Integer) 10);
        java.lang.String str65 = schema64.getType();
        io.swagger.oas.models.media.Schema schema67 = schema64.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 10\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(linkArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(boolean60);
        org.junit.Assert.assertNotNull(linkArrayList61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema6.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.annotations.links.Link[] linkArray30 = null;
        schema29.addEnumItemObject(linkArray30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        schema10.setMaximum(bigDecimal16);
        java.lang.Integer int18 = schema10.getMaxLength();
        schema10.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema10.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMaximum((java.lang.Boolean) false);
        schema22.setFormat("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 0);
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema12.example((java.lang.Object) schema30);
        java.lang.Integer int38 = schema37.getMinProperties();
        schema37.setPattern("#/components/schemas/");
        java.util.List<java.lang.String> strList41 = schema37.getRequired();
        schema37.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        java.lang.Boolean boolean25 = schema2.getDeprecated();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = schema2.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.toString();
        java.math.BigDecimal bigDecimal13 = null;
        schema2.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.XML xML15 = null;
        schema2.setXml(xML15);
        io.swagger.oas.models.media.Schema schema18 = schema2.minLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema8.pattern("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        schema32.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema32.not(schema43);
        schema28.setNot(schema32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema28.externalDocs(externalDocumentation46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.math.BigDecimal bigDecimal50 = schema49.getMaximum();
        io.swagger.oas.models.media.Schema schema51 = schema18.addProperties("hi!", schema49);
        io.swagger.oas.models.media.Schema schema53 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema18.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal56 = null;
        schema18.setMultipleOf(bigDecimal56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = schema15.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(bigDecimal16);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.maximum(bigDecimal19);
        schema8.setMaxItems((java.lang.Integer) 10);
        java.lang.Class<?> wildcardClass23 = schema8.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        java.lang.String str37 = schema36.getTitle();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema36.getExternalDocs();
        io.swagger.oas.models.media.XML xML39 = schema36.getXml();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema36.externalDocs(externalDocumentation40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema39.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 0);
        schema59.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema39.not(schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link68 = null;
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] { link68 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        linkArraySchema65.addEnumItemObject(linkArray69);
        schema59.addEnumItemObject(linkArray69);
        io.swagger.oas.models.media.Schema schema74 = schema59.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema77.externalDocs(externalDocumentation80);
        io.swagger.oas.models.media.Schema schema83 = schema81.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int84 = schema83.getMaxItems();
        schema83.addExtension("", (java.lang.Object) (short) -1);
        schema83.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema91 = schema83.minLength((java.lang.Integer) 10);
        io.swagger.oas.annotations.links.Link[] linkArray92 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap93 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray92);
        schema91.addEnumItemObject(linkArray92);
        boolean boolean95 = schema59.equals((java.lang.Object) schema91);
        io.swagger.oas.models.media.Discriminator discriminator96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema59.discriminator(discriminator96);
        java.math.BigDecimal bigDecimal98 = schema59.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(linkArray92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(bigDecimal98);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema6.minimum(bigDecimal18);
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMinimum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.lang.Boolean boolean16 = schema8.getDeprecated();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        java.lang.Boolean boolean34 = schema31.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = schema31.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema8.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.maxItems((java.lang.Integer) 0);
        schema37.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = null;
        schema37.setMultipleOf(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMultipleOf(bigDecimal29);
        java.lang.Integer int31 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema33 = schema28.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        schema40.addExtension("*/*", (java.lang.Object) linkArraySchema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = schema60.getExternalDocs();
        java.lang.Integer int64 = schema60.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        schema68.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema68.not(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        io.swagger.oas.models.media.Schema schema83 = schema79.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean84 = schema79.getNullable();
        linkArraySchema50.setNot(schema79);
        java.lang.Integer int86 = schema79.getMaxProperties();
        schema33.setExample((java.lang.Object) int86);
        io.swagger.oas.models.media.Schema schema88 = schema33.getNot();
        io.swagger.oas.models.media.Schema schema90 = schema88.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema5.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema20);
        linkArraySchema5.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema5.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        java.lang.String str31 = schema29.getPattern();
        schema29.setNullable((java.lang.Boolean) false);
        java.lang.Object obj34 = schema29.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#/components/schemas/" + "'", str31, "#/components/schemas/");
        org.junit.Assert.assertNotNull(obj34);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setReadOnly((java.lang.Boolean) false);
        schema2.setMinLength((java.lang.Integer) (-1));
        schema2.setMinLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema13.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        schema16.setMultipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema21.not(schema32);
        java.math.BigDecimal bigDecimal34 = schema32.getMaximum();
        java.lang.Boolean boolean35 = schema32.getExclusiveMinimum();
        java.lang.String str36 = schema32.getDescription();
        java.lang.String[] strArray41 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        schema32.setRequired((java.util.List<java.lang.String>) strList42);
        schema16.setRequired((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema60);
        io.swagger.oas.models.media.Schema schema63 = schema61.exclusiveMinimum((java.lang.Boolean) true);
        schema63.setMinItems((java.lang.Integer) 100);
        schema16.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        java.lang.String str67 = schema63.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema8.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal16 = null;
        schema15.setMinimum(bigDecimal16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema40 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema24.maxProperties((java.lang.Integer) (-1));
        java.lang.String str43 = schema42.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        java.lang.Integer int11 = schema10.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        schema10.setMaxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.lang.Object obj24 = schema23.getExample();
        java.util.List<java.lang.String> strList25 = schema23.getRequired();
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean28 = schema23.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setNot(schema23);
        java.lang.Integer int32 = schema23.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(obj24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int32);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema14.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema14.maxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.multipleOf(bigDecimal13);
        io.swagger.oas.models.media.Schema schema16 = schema14.$ref("");
        java.lang.String str17 = schema16.getTitle();
        schema16.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        linkArraySchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema0.externalDocs(externalDocumentation12);
        java.lang.Boolean boolean14 = schema13.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema11.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Schema schema54 = schema11.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema54.maximum(bigDecimal55);
        java.lang.Integer int57 = schema54.getMinProperties();
        schema54.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema24.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        java.lang.Boolean boolean36 = schema16.getDeprecated();
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema16.maximum(bigDecimal37);
        schema16.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        io.swagger.oas.models.media.Schema schema57 = schema54.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal58 = null;
        schema57.setMultipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.externalDocs(externalDocumentation65);
        schema62.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema62.not(schema73);
        java.math.BigDecimal bigDecimal75 = schema73.getMaximum();
        java.lang.Boolean boolean76 = schema73.getExclusiveMinimum();
        java.lang.String str77 = schema73.getDescription();
        java.lang.String[] strArray82 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        schema73.setRequired((java.util.List<java.lang.String>) strList83);
        schema57.setRequired((java.util.List<java.lang.String>) strList83);
        schema16.setRequired((java.util.List<java.lang.String>) strList83);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(bigDecimal75);
        org.junit.Assert.assertNull(boolean76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema4.minimum(bigDecimal15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema23.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int26 = schema25.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.externalDocs(externalDocumentation32);
        schema29.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema29.not(schema40);
        schema25.setNot(schema29);
        schema25.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean45 = schema25.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema25.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean50 = schema16.equals((java.lang.Object) schema47);
        schema16.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        java.lang.Integer int18 = schema2.getMinLength();
        java.lang.String str19 = schema2.get$ref();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList20 = schema2.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(linkArrayList20);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema24.discriminator(discriminator47);
        schema48.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema48.setDiscriminator(discriminator51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        java.util.List<java.lang.String> strList30 = schema26.getRequired();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema26.multipleOf(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema26.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str35 = schema26.getDescription();
        java.lang.Integer int36 = schema26.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        schema47.setDiscriminator(discriminator48);
        java.lang.Boolean boolean50 = schema47.getReadOnly();
        io.swagger.oas.models.media.Schema schema52 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        schema57.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema57.not(schema68);
        java.lang.String str70 = schema57.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema73.externalDocs(externalDocumentation76);
        java.lang.String str78 = schema73.getFormat();
        io.swagger.oas.models.media.Schema schema80 = schema73.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema81 = schema57.not(schema73);
        io.swagger.oas.models.media.Schema schema82 = schema47.additionalProperties(schema73);
        io.swagger.oas.models.media.Schema schema84 = schema73.type("");
        io.swagger.oas.models.media.Schema schema86 = schema73.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = schema26.not(schema86);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) true);
        schema6.setReadOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal13 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema schema15 = schema6.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean16 = schema6.getWriteOnly();
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(bigDecimal13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema9 = schema2.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(schema9);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        linkArraySchema5.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema5.minimum(bigDecimal14);
        java.lang.String str16 = schema15.getType();
        schema15.setMinLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema5.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema20);
        linkArraySchema5.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema5.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        java.lang.String str31 = schema29.getPattern();
        schema29.setNullable((java.lang.Boolean) false);
        schema29.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#/components/schemas/" + "'", str31, "#/components/schemas/");
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        java.lang.Boolean boolean18 = schema6.getReadOnly();
        java.lang.String str19 = schema6.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        io.swagger.oas.models.media.Schema schema27 = schema20.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        schema27.setNot((io.swagger.oas.models.media.Schema) linkArraySchema33);
        io.swagger.oas.models.media.Schema schema39 = schema16.addProperties("", schema27);
        io.swagger.oas.models.media.Schema schema41 = schema27.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema42 = schema27.getNot();
        java.math.BigDecimal bigDecimal43 = schema27.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        schema46.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema54 = schema46.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = schema54.getExtensions();
        io.swagger.oas.models.media.XML xML56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema54.xml(xML56);
        schema54.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema54.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema65 = schema63.minLength((java.lang.Integer) 10);
        boolean boolean66 = schema27.equals((java.lang.Object) schema63);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str50 = schema24.getDescription();
        io.swagger.oas.models.media.XML xML51 = null;
        schema24.setXml(xML51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        schema39.setFormat("*/*");
        java.lang.Boolean boolean44 = schema39.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema39.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema53.not(schema60);
        java.lang.String str62 = schema53.getType();
        io.swagger.oas.models.media.Discriminator discriminator63 = schema53.getDiscriminator();
        io.swagger.oas.models.media.Schema schema65 = schema53.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema53.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean68 = schema53.getWriteOnly();
        io.swagger.oas.models.media.XML xML69 = schema53.getXml();
        io.swagger.oas.models.media.Schema schema70 = schema46.not(schema53);
        schema70.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(discriminator63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(boolean68);
        org.junit.Assert.assertNull(xML69);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDescription("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema15.getExternalDocs();
        java.lang.Integer int19 = schema15.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema23.not(schema34);
        io.swagger.oas.models.media.Schema schema36 = schema15.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema34);
        io.swagger.oas.models.media.Schema schema38 = schema34.readOnly((java.lang.Boolean) true);
        schema2.setExample((java.lang.Object) true);
        java.lang.Boolean boolean40 = schema2.getUniqueItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        java.lang.Integer int44 = linkArraySchema41.getMaxProperties();
        java.math.BigDecimal bigDecimal45 = null;
        linkArraySchema41.setMinimum(bigDecimal45);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap47 = null;
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema41.properties(strMap47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema41.maximum(bigDecimal49);
        io.swagger.oas.models.media.Schema schema51 = schema2.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema41);
        schema51.setWriteOnly((java.lang.Boolean) true);
        schema51.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema2.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMinProperties();
        linkArraySchema15.setUniqueItems((java.lang.Boolean) false);
        schema2.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema23 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = schema23.getProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = linkArraySchema25.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema40 = schema30.additionalProperties(schema33);
        java.util.List<java.lang.String> strList41 = schema30.getRequired();
        java.lang.Boolean boolean42 = schema30.getUniqueItems();
        java.lang.Integer int43 = schema30.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema30.setExternalDocs(externalDocumentation44);
        schema23.setNot(schema30);
        io.swagger.oas.models.media.Schema schema47 = schema30.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema10 = schema6.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema10.xml(xML11);
        schema10.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema schema23 = schema21.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int24 = schema23.getMaxItems();
        schema23.addExtension("", (java.lang.Object) (short) -1);
        schema23.setMaxItems((java.lang.Integer) 1);
        schema23.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str32 = schema23.getPattern();
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema23.xml(xML33);
        schema10.setNot(schema23);
        schema23.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "#/components/schemas/" + "'", str32, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        java.lang.Boolean boolean45 = schema24.getUniqueItems();
        io.swagger.oas.models.media.Schema schema47 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema51 = schema47.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList52 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema54 = schema47.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertEquals("'" + boolean45 + "' != '" + false + "'", boolean45, false);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        schema16.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema16.not(schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        schema27.setProperties(strMap30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        java.lang.String str53 = schema48.getFormat();
        io.swagger.oas.models.media.Schema schema55 = schema48.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema40.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema74);
        java.lang.String[] strArray77 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema75.required((java.util.List<java.lang.String>) strList78);
        schema60.setRequired((java.util.List<java.lang.String>) strList78);
        schema27.setRequired((java.util.List<java.lang.String>) strList78);
        linkArraySchema5.setRequired((java.util.List<java.lang.String>) strList78);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema5.maximum(bigDecimal84);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema5.minimum(bigDecimal86);
        java.lang.String str88 = schema87.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(str88);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.maximum(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema26.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema34 = schema32.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = schema32.getProperties();
        schema32.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema18.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema23.getMinimum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema23.getEnum();
        java.lang.Integer int27 = schema23.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(linkArrayList26);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema53 = schema46.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema38.addProperties("#/components/schemas/", schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema58.not(schema69);
        schema69.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        java.lang.Boolean boolean74 = schema54.getReadOnly();
        io.swagger.oas.models.media.Schema schema76 = schema54.writeOnly((java.lang.Boolean) true);
        schema26.setNot(schema54);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        schema80.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema88 = schema80.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = schema88.getExtensions();
        io.swagger.oas.models.media.XML xML90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema88.xml(xML90);
        schema91.setUniqueItems((java.lang.Boolean) true);
        schema26.setAdditionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema96 = schema91.maxLength((java.lang.Integer) (-1));
        schema96.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        schema45.setExternalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = schema45.maxLength((java.lang.Integer) 100);
        schema45.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        java.lang.Boolean boolean10 = schema8.getUniqueItems();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.multipleOf(bigDecimal11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = schema2.getProperties();
        schema2.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema23.setUniqueItems((java.lang.Boolean) false);
        schema23.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema30 = schema23.deprecated((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema23.properties(strMap31);
        schema2.setExample((java.lang.Object) strMap31);
        java.lang.Boolean boolean34 = schema2.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema36 = schema2.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema2.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean41 = schema40.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        schema8.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str17 = schema8.getPattern();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.xml(xML18);
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema19.minimum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#/components/schemas/" + "'", str17, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema47.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        io.swagger.oas.models.media.Schema schema58 = schema56.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int59 = schema58.getMaxItems();
        schema58.addExtension("", (java.lang.Object) (short) -1);
        schema58.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema66 = schema58.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = schema66.$ref("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema66.getExtensions();
        schema47.setExtensions(strMap69);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema50.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        java.lang.Integer int66 = linkArraySchema63.getMaxProperties();
        boolean boolean67 = schema60.equals((java.lang.Object) linkArraySchema63);
        java.lang.String str68 = schema60.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema60.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema50.not(schema70);
        java.lang.Boolean boolean72 = linkArraySchema50.getUniqueItems();
        schema2.setNot((io.swagger.oas.models.media.Schema) linkArraySchema50);
        io.swagger.oas.models.media.Schema schema74 = schema2.getNot();
        java.math.BigDecimal bigDecimal75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema2.multipleOf(bigDecimal75);
        java.lang.Integer int77 = schema76.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(boolean72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(int77);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = schema9.getMinimum();
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema9.multipleOf(bigDecimal11);
        java.math.BigDecimal bigDecimal13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema12.minimum(bigDecimal13);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(bigDecimal10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema8.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal34 = schema8.getMultipleOf();
        java.lang.Boolean boolean35 = schema8.getNullable();
        io.swagger.oas.models.media.Schema schema37 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str7 = schema4.getType();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        java.lang.String str15 = schema10.getFormat();
        io.swagger.oas.models.media.Schema schema17 = schema10.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        boolean boolean27 = schema20.equals((java.lang.Object) linkArraySchema23);
        schema17.setNot((io.swagger.oas.models.media.Schema) linkArraySchema23);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList29 = linkArraySchema23.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = linkArraySchema23.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema23.name("");
        io.swagger.oas.models.media.XML xML33 = linkArraySchema23.getXml();
        io.swagger.oas.models.media.Schema schema34 = schema4.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema23);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema23.externalDocs(externalDocumentation35);
        java.lang.Integer int37 = linkArraySchema23.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(linkArrayList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(xML33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema6.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        java.lang.Integer int20 = linkArraySchema17.getMaxProperties();
        boolean boolean21 = schema14.equals((java.lang.Object) linkArraySchema17);
        io.swagger.oas.models.media.Discriminator discriminator22 = linkArraySchema17.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray23 = linkArraySchema17.getDefault();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema17.title("");
        schema25.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema6.addProperties("", schema25);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema42 = schema34.maxProperties((java.lang.Integer) 0);
        schema34.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema34.addRequiredItem("");
        schema34.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal49 = schema34.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        java.lang.String str57 = schema52.getFormat();
        java.math.BigDecimal bigDecimal58 = schema52.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        java.lang.Integer int67 = linkArraySchema64.getMaxProperties();
        boolean boolean68 = schema61.equals((java.lang.Object) linkArraySchema64);
        io.swagger.oas.models.media.Discriminator discriminator69 = linkArraySchema64.getDiscriminator();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema64.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema64.nullable((java.lang.Boolean) false);
        schema52.setExample((java.lang.Object) schema73);
        io.swagger.oas.models.media.XML xML75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema73.xml(xML75);
        io.swagger.oas.models.media.Schema schema77 = schema34.not(schema76);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema84.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema88 = schema84.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator89 = null;
        schema88.setDiscriminator(discriminator89);
        java.lang.Boolean boolean91 = schema88.getReadOnly();
        io.swagger.oas.models.media.Schema schema92 = schema34.additionalProperties(schema88);
        java.util.List<java.lang.String> strList93 = schema92.getRequired();
        schema31.setRequired(strList93);
        io.swagger.oas.models.media.Schema schema95 = schema28.required(strList93);
        java.lang.String str96 = schema28.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNull(linkArray23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(discriminator69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(strList93);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(str96);
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        java.lang.String str34 = schema31.getPattern();
        schema31.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Class<?> wildcardClass37 = schema31.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "#/components/schemas/" + "'", str34, "#/components/schemas/");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setMaxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema5.minimum(bigDecimal10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        java.lang.Integer int15 = schema14.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = linkArraySchema16.getMaxProperties();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema16.readOnly((java.lang.Boolean) false);
        schema14.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema16);
        java.lang.Object obj23 = schema14.getExample();
        io.swagger.oas.models.media.Discriminator discriminator24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema14.discriminator(discriminator24);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap26 = null;
        schema14.setProperties(strMap26);
        io.swagger.oas.models.media.Schema schema29 = schema14.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema31 = schema29.uniqueItems((java.lang.Boolean) false);
        schema11.setDefault((java.lang.Object) schema29);
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema11.discriminator(discriminator33);
        io.swagger.oas.models.media.Schema schema36 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(obj23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema24.addProperties("#/components/schemas/", schema36);
        schema36.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema36.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        schema45.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema53 = schema45.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.xml(xML55);
        schema53.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList59 = schema53.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema42.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema schema61 = schema2.addProperties("*/*", schema60);
        java.lang.Integer int62 = schema61.getMaxProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema76 = schema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema69.not(schema76);
        io.swagger.oas.models.media.Schema schema79 = schema77.minProperties((java.lang.Integer) 0);
        schema77.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema77.additionalProperties(schema82);
        schema61.setDefault((java.lang.Object) schema77);
        schema77.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        java.lang.String str31 = schema26.getFormat();
        io.swagger.oas.models.media.Schema schema33 = schema26.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        java.lang.Integer int42 = linkArraySchema39.getMaxProperties();
        boolean boolean43 = schema36.equals((java.lang.Object) linkArraySchema39);
        schema33.setNot((io.swagger.oas.models.media.Schema) linkArraySchema39);
        linkArraySchema39.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema22.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) linkArraySchema39);
        schema22.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.deprecated((java.lang.Boolean) true);
        schema27.setMinItems((java.lang.Integer) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema27.getExtensions();
        io.swagger.oas.models.media.Schema schema32 = schema27.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        java.util.List<java.lang.String> strList42 = schema8.getRequired();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList43 = schema8.getEnum();
        java.lang.Boolean boolean44 = schema8.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema8.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(linkArrayList43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema39.not(schema50);
        java.math.BigDecimal bigDecimal52 = schema50.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        java.lang.Integer int56 = schema55.getMaxLength();
        schema50.setExample((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema59 = schema55.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema59.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema14.not(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator67 = null;
        schema14.setDiscriminator(discriminator67);
        io.swagger.oas.models.media.Schema schema70 = schema14.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 1);
        java.lang.Integer int55 = schema52.getMinProperties();
        java.lang.String str56 = schema52.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema33.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("");
        io.swagger.oas.models.media.Schema schema30 = schema24.minItems((java.lang.Integer) (-1));
        java.lang.Object obj31 = schema30.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(obj31);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        schema13.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.xml(xML16);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        schema13.setExternalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema13.maxProperties((java.lang.Integer) 100);
        java.lang.Object obj22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema13.example(obj22);
        io.swagger.oas.models.media.Schema schema25 = schema13.maxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean26 = schema13.getDeprecated();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema13.maximum(bigDecimal27);
        java.lang.Boolean boolean29 = schema13.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean28 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema30 = schema8.description("*/*");
        java.lang.String str31 = schema30.getName();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema30.setExternalDocs(externalDocumentation32);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = schema30.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap34);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal4 = null;
        linkArraySchema0.setMinimum(bigDecimal4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        linkArraySchema0.setProperties(strMap6);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        schema11.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema11.not(schema22);
        java.math.BigDecimal bigDecimal24 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        schema22.setExample((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int51 = schema50.getMaxItems();
        schema50.addExtension("", (java.lang.Object) (short) -1);
        schema50.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema50.minLength((java.lang.Integer) 10);
        io.swagger.oas.annotations.links.Link[] linkArray59 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap60 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        schema58.addEnumItemObject(linkArray59);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap62 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        schema39.addEnumItemObject(linkArray59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema73 = schema71.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int74 = schema73.getMaxItems();
        schema73.addExtension("", (java.lang.Object) (short) -1);
        schema73.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema81 = schema73.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema73.multipleOf(bigDecimal82);
        schema73.setMinProperties((java.lang.Integer) (-1));
        schema73.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema88 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema73);
        linkArraySchema0.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema73);
        schema73.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(linkArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = schema48.getMinimum();
        io.swagger.oas.models.media.Schema schema51 = schema48.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema53 = schema51.exclusiveMaximum((java.lang.Boolean) true);
        schema53.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str56 = schema53.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str56, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        io.swagger.oas.models.media.Schema schema30 = schema14.nullable((java.lang.Boolean) true);
        schema14.setName("");
        io.swagger.oas.models.media.Schema schema34 = schema14.maxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        java.lang.Boolean boolean18 = schema17.getNullable();
        schema17.setUniqueItems((java.lang.Boolean) true);
        schema17.setTitle("");
        java.lang.String str23 = schema17.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal4 = null;
        linkArraySchema0.setMinimum(bigDecimal4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.properties(strMap6);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap8 = schema7.getProperties();
        io.swagger.oas.models.media.Schema schema10 = schema7.type("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema19.getMaxItems();
        schema19.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        java.lang.String str32 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema34 = schema27.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema19.addProperties("#/components/schemas/", schema34);
        java.lang.Boolean boolean36 = schema35.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        io.swagger.oas.models.media.Schema schema48 = schema45.title("");
        schema35.setAdditionalProperties(schema45);
        io.swagger.oas.models.media.Schema schema51 = schema35.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap52 = schema51.getProperties();
        io.swagger.oas.models.media.Schema schema53 = schema10.properties(strMap52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema53.multipleOf(bigDecimal54);
        java.math.BigDecimal bigDecimal56 = null;
        schema53.setMinimum(bigDecimal56);
        io.swagger.oas.models.media.Discriminator discriminator58 = null;
        schema53.setDiscriminator(discriminator58);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema14.additionalProperties(schema19);
        schema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema14.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML25 = schema24.getXml();
        java.lang.Boolean boolean26 = schema24.getNullable();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.externalDocs(externalDocumentation32);
        schema29.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema37 = schema29.maxProperties((java.lang.Integer) 0);
        schema29.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema29.addRequiredItem("");
        schema29.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema29.pattern("");
        io.swagger.oas.models.media.Schema schema46 = schema24.not(schema45);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(xML25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.multipleOf(bigDecimal7);
        schema2.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = linkArraySchema16.getMaxProperties();
        boolean boolean20 = schema13.equals((java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = linkArraySchema16.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray22 = linkArraySchema16.getDefault();
        java.math.BigDecimal bigDecimal23 = linkArraySchema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema34 = schema26.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema34.xml(xML36);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema16.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema16.exclusiveMinimum((java.lang.Boolean) false);
        schema44.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema44);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema44.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema49.description("#/components/schemas/");
        schema51.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        schema51.setExternalDocs(externalDocumentation54);
        schema51.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(linkArray22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = schema48.getEnum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema schema60 = schema58.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int61 = schema60.getMaxItems();
        schema60.addExtension("", (java.lang.Object) (short) -1);
        schema60.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = schema60.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema60.multipleOf(bigDecimal69);
        java.math.BigDecimal bigDecimal71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema60.minimum(bigDecimal71);
        java.lang.String str73 = schema72.get$ref();
        java.lang.Integer int74 = schema72.getMinLength();
        boolean boolean75 = schema48.equals((java.lang.Object) schema72);
        io.swagger.oas.models.media.Schema schema77 = schema48.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema79 = schema77.maxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(linkArrayList51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(int61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(int74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema28.getExternalDocs();
        java.lang.Integer int32 = schema28.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema36.not(schema47);
        io.swagger.oas.models.media.Schema schema49 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema51 = schema28.minLength((java.lang.Integer) 10);
        boolean boolean52 = schema19.equals((java.lang.Object) schema51);
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema51.maximum(bigDecimal53);
        java.lang.Integer int55 = schema51.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema44 = schema36.maxProperties((java.lang.Integer) 0);
        schema36.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema36.addRequiredItem("");
        schema36.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal51 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        java.lang.String str59 = schema54.getFormat();
        java.math.BigDecimal bigDecimal60 = schema54.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        boolean boolean70 = schema63.equals((java.lang.Object) linkArraySchema66);
        io.swagger.oas.models.media.Discriminator discriminator71 = linkArraySchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema66.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema66.nullable((java.lang.Boolean) false);
        schema54.setExample((java.lang.Object) schema75);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema75.xml(xML77);
        io.swagger.oas.models.media.Schema schema79 = schema36.not(schema78);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema80 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema82 = linkArraySchema80.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema82.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema82.externalDocs(externalDocumentation85);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema86.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator91 = null;
        schema90.setDiscriminator(discriminator91);
        java.lang.Boolean boolean93 = schema90.getReadOnly();
        io.swagger.oas.models.media.Schema schema94 = schema36.additionalProperties(schema90);
        java.util.List<java.lang.String> strList95 = schema94.getRequired();
        io.swagger.oas.models.media.Schema schema96 = schema33.required(strList95);
        java.lang.Integer int97 = schema96.getMaxItems();
        io.swagger.oas.models.media.Schema schema99 = schema96.title("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(int97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.lang.String str5 = schema4.toString();
        io.swagger.oas.models.media.Schema schema6 = schema4.getNot();
        schema4.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema10 = schema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str5, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        java.lang.Boolean boolean19 = schema2.getExclusiveMaximum();
        schema2.setReadOnly((java.lang.Boolean) false);
        schema2.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getFormat();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.multipleOf(bigDecimal41);
        io.swagger.oas.annotations.links.Link[] linkArray43 = null;
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap44 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray43);
        schema39.setDefault((java.lang.Object) strMap44);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema39.discriminator(discriminator46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: true\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema37 = schema14.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema36.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema39.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = schema13.format("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Schema schema27 = schema25.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = schema25.getExternalDocs();
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        schema25.setRequired((java.util.List<java.lang.String>) strList34);
        java.lang.String str37 = schema25.toString();
        io.swagger.oas.models.media.Schema schema39 = schema25.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int40 = schema39.getMinProperties();
        schema39.setUniqueItems((java.lang.Boolean) true);
        schema13.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema39);
        io.swagger.oas.models.media.Schema schema45 = schema13.title("");
        io.swagger.oas.models.media.XML xML46 = schema45.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(externalDocumentation28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str37, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(xML46);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        java.lang.Integer int50 = schema12.getMaxItems();
        java.math.BigDecimal bigDecimal51 = null;
        schema12.setMaximum(bigDecimal51);
        schema12.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.XML xML39 = schema24.getXml();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema24.multipleOf(bigDecimal40);
        java.lang.Integer int42 = schema24.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str45 = schema44.getName();
        java.lang.String str46 = schema44.getPattern();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        java.lang.Integer int50 = linkArraySchema47.getMaxProperties();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema47.readOnly((java.lang.Boolean) false);
        linkArraySchema47.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema47.exclusiveMinimum((java.lang.Boolean) true);
        schema44.setAdditionalProperties(schema56);
        io.swagger.oas.models.media.Schema schema59 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        schema59.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str46, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        schema43.setExtensions(strMap44);
        schema43.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema43.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema43.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema51.maxProperties((java.lang.Integer) 1);
        schema51.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean56 = schema51.getReadOnly();
        java.lang.String str57 = schema51.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "#/components/schemas/" + "'", str57, "#/components/schemas/");
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str9 = schema6.getTitle();
        java.lang.Integer int10 = schema6.getMinLength();
        java.lang.Boolean boolean11 = schema6.getDeprecated();
        io.swagger.oas.models.media.Schema schema13 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema13.minProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        schema35.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema43 = schema35.maxProperties((java.lang.Integer) 0);
        schema35.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema35.addRequiredItem("");
        schema35.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal50 = schema35.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        java.math.BigDecimal bigDecimal59 = schema53.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        io.swagger.oas.models.media.Discriminator discriminator70 = linkArraySchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema65.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema65.nullable((java.lang.Boolean) false);
        schema53.setExample((java.lang.Object) schema74);
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema74.xml(xML76);
        io.swagger.oas.models.media.Schema schema78 = schema35.not(schema77);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.externalDocs(externalDocumentation84);
        io.swagger.oas.models.media.Schema schema87 = schema85.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema85.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        schema89.setDiscriminator(discriminator90);
        java.lang.Boolean boolean92 = schema89.getReadOnly();
        io.swagger.oas.models.media.Schema schema93 = schema35.additionalProperties(schema89);
        java.util.List<java.lang.String> strList94 = schema93.getRequired();
        io.swagger.oas.models.media.Schema schema95 = schema32.required(strList94);
        java.lang.Object obj96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema32.example(obj96);
        io.swagger.oas.models.media.Schema schema99 = schema97.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = null;
        schema33.setExtensions(strMap38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        io.swagger.oas.models.media.Schema schema48 = schema46.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = schema46.getExternalDocs();
        java.lang.Integer int50 = schema46.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        schema54.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema54.not(schema65);
        io.swagger.oas.models.media.Schema schema67 = schema46.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema65);
        io.swagger.oas.annotations.links.Link[] linkArray68 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap69 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray68);
        io.swagger.oas.annotations.links.Link link70 = null;
        io.swagger.oas.annotations.links.Link[] linkArray71 = new io.swagger.oas.annotations.links.Link[] { link70 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap72 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray71);
        io.swagger.oas.annotations.links.Link link73 = null;
        io.swagger.oas.annotations.links.Link[] linkArray74 = new io.swagger.oas.annotations.links.Link[] { link73 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap75 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        io.swagger.oas.annotations.links.Link[] linkArray76 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        io.swagger.oas.annotations.links.Link[][] linkArray78 = new io.swagger.oas.annotations.links.Link[][] { linkArray68, linkArray71, linkArray74, linkArray76 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList79 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList79, linkArray78);
        schema65.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList79);
        schema33.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList79);
        schema8.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList79);
        io.swagger.oas.models.media.Schema schema85 = schema8.addRequiredItem("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema87 = schema8.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(externalDocumentation49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(linkArray68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(linkArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(linkArray74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(linkArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(linkArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str53 = schema52.getDescription();
        io.swagger.oas.models.media.Discriminator discriminator54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema52.discriminator(discriminator54);
        java.math.BigDecimal bigDecimal56 = schema52.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema20.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema41 = schema33.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        schema20.addExtension("", (java.lang.Object) true);
        schema16.addExtension("*/*", (java.lang.Object) "");
        java.lang.Boolean boolean49 = schema16.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean49);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        java.lang.Integer int30 = schema26.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema34.not(schema45);
        io.swagger.oas.models.media.Schema schema47 = schema26.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema45);
        io.swagger.oas.models.media.Schema schema49 = schema45.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean50 = schema45.getNullable();
        linkArraySchema16.setNot(schema45);
        schema45.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int63 = schema62.getMaxItems();
        schema62.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema70.externalDocs(externalDocumentation73);
        java.lang.String str75 = schema70.getFormat();
        io.swagger.oas.models.media.Schema schema77 = schema70.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema62.addProperties("#/components/schemas/", schema77);
        java.lang.Boolean boolean79 = schema78.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema80 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema82 = linkArraySchema80.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema82.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema82.externalDocs(externalDocumentation85);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int89 = schema88.getMaxItems();
        io.swagger.oas.models.media.Schema schema91 = schema88.title("");
        schema78.setAdditionalProperties(schema88);
        io.swagger.oas.models.media.Schema schema94 = schema78.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema96 = schema78.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema97 = schema45.example((java.lang.Object) schema78);
        io.swagger.oas.models.media.Schema schema99 = schema97.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.annotations.links.Link[] linkArray34 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray34);
        io.swagger.oas.annotations.links.Link link36 = null;
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] { link36 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap39 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link[][] linkArray40 = new io.swagger.oas.annotations.links.Link[][] { linkArray34, linkArray37 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList41 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList41, linkArray40);
        schema33.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList41);
        schema14.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema14.setWriteOnly((java.lang.Boolean) true);
        schema14.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.annotations.links.Link link53 = null;
        io.swagger.oas.annotations.links.Link[] linkArray54 = new io.swagger.oas.annotations.links.Link[] { link53 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap55 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap56 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap57 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap58 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap59 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        schema14.addEnumItemObject(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap61 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(linkArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(linkArray54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema4.setTitle("hi!");
        java.math.BigDecimal bigDecimal15 = linkArraySchema4.getMaximum();
        java.math.BigDecimal bigDecimal16 = linkArraySchema4.getMaximum();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema4.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema4.xml(xML19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(bigDecimal16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        java.lang.Integer int25 = schema23.getMinProperties();
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.minimum(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema23.writeOnly((java.lang.Boolean) true);
        java.lang.Object obj30 = schema23.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.minLength((java.lang.Integer) 0);
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema31.getNullable();
        io.swagger.oas.models.media.Schema schema36 = schema31.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema36.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema36.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema39);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.lang.Integer int46 = schema45.getMaxLength();
        io.swagger.oas.models.media.Schema schema48 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: hi!\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        schema29.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.XML xML33 = null;
        schema29.setXml(xML33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        java.lang.Integer int38 = linkArraySchema35.getMaxProperties();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema35.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator41 = null;
        linkArraySchema35.setDiscriminator(discriminator41);
        io.swagger.oas.models.media.Schema schema43 = schema29.not((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema45 = schema43.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator48 = null;
        schema45.setDiscriminator(discriminator48);
        io.swagger.oas.models.media.Schema schema51 = schema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) (-1));
        schema43.setExclusiveMaximum((java.lang.Boolean) true);
        schema43.setMaxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema43.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.minLength((java.lang.Integer) 0);
        schema31.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean34 = schema31.getNullable();
        java.lang.Boolean boolean35 = schema31.getNullable();
        java.lang.Boolean boolean36 = schema31.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.Boolean boolean22 = linkArraySchema15.getNullable();
        linkArraySchema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(boolean22);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean7 = linkArraySchema0.getReadOnly();
        java.lang.Boolean boolean8 = linkArraySchema0.getDeprecated();
        java.lang.Boolean boolean9 = linkArraySchema0.getNullable();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        linkArraySchema0.setDiscriminator(discriminator10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema19.not(schema26);
        io.swagger.oas.models.media.Schema schema29 = schema27.minProperties((java.lang.Integer) 0);
        schema27.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema27.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema27.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema47 = schema39.name("#/components/schemas/");
        schema47.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.xml(xML50);
        io.swagger.oas.models.media.Schema schema53 = schema51.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.multipleOf(bigDecimal54);
        io.swagger.oas.models.media.Schema schema57 = schema51.maxItems((java.lang.Integer) 0);
        linkArraySchema0.setDefault((java.lang.Object) schema57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(boolean8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        io.swagger.oas.models.media.Schema schema30 = schema14.nullable((java.lang.Boolean) true);
        schema14.setMinItems((java.lang.Integer) 0);
        java.lang.Boolean boolean33 = schema14.getReadOnly();
        java.lang.Integer int34 = schema14.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML20 = null;
        linkArraySchema17.setXml(xML20);
        schema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        java.lang.Boolean boolean23 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema5.not(schema12);
        io.swagger.oas.models.media.Schema schema26 = schema24.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        linkArraySchema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        boolean boolean30 = schema23.equals((java.lang.Object) linkArraySchema26);
        java.lang.String str31 = schema23.getFormat();
        io.swagger.oas.models.media.Schema schema33 = schema23.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema13.not(schema33);
        linkArraySchema5.setExample((java.lang.Object) schema33);
        java.lang.Object obj36 = schema33.getExample();
        schema33.setMaxLength((java.lang.Integer) 100);
        java.lang.Object obj39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema33.example(obj39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = schema11.getProperties();
        io.swagger.oas.models.media.Schema schema14 = schema11.format("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.util.List<java.lang.String> strList16 = schema5.getRequired();
        java.lang.Boolean boolean17 = schema5.getUniqueItems();
        io.swagger.oas.models.media.XML xML18 = null;
        schema5.setXml(xML18);
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema5.discriminator(discriminator20);
        java.lang.String str22 = schema21.get$ref();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        schema21.setDiscriminator(discriminator23);
        schema21.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema10.minProperties((java.lang.Integer) 0);
        schema21.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        java.lang.Integer int22 = linkArraySchema19.getMaxProperties();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema19.readOnly((java.lang.Boolean) false);
        linkArraySchema19.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        schema42.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema42.not(schema53);
        schema38.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema69);
        io.swagger.oas.models.media.Schema schema71 = schema38.not(schema69);
        schema28.addExtension("", (java.lang.Object) schema69);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        java.lang.Integer int81 = linkArraySchema78.getMaxProperties();
        boolean boolean82 = schema75.equals((java.lang.Object) linkArraySchema78);
        io.swagger.oas.models.media.Discriminator discriminator83 = linkArraySchema78.getDiscriminator();
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema78.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema78.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema88 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema90 = linkArraySchema88.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link91 = null;
        io.swagger.oas.annotations.links.Link[] linkArray92 = new io.swagger.oas.annotations.links.Link[] { link91 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap93 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray92);
        linkArraySchema88.addEnumItemObject(linkArray92);
        schema87.addEnumItemObject(linkArray92);
        schema69.addEnumItemObject(linkArray92);
        schema14.addEnumItemObject(linkArray92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(int81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(discriminator83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(linkArray92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        java.lang.Integer int27 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema28.readOnly((java.lang.Boolean) false);
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema28);
        java.lang.Object obj35 = schema26.getExample();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema26.discriminator(discriminator36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        java.lang.Integer int49 = linkArraySchema46.getMaxProperties();
        boolean boolean50 = schema43.equals((java.lang.Object) linkArraySchema46);
        schema43.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        schema37.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema37.getAdditionalProperties();
        schema22.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema59 = schema37.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = schema59.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(strMap60);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal46 = null;
        schema8.setMaximum(bigDecimal46);
        java.math.BigDecimal bigDecimal48 = schema8.getMinimum();
        io.swagger.oas.models.media.Schema schema50 = schema8.deprecated((java.lang.Boolean) false);
        schema50.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.externalDocs(externalDocumentation17);
        schema2.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema2.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal23 = schema2.getMinimum();
        java.math.BigDecimal bigDecimal24 = schema2.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema19.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema23.not(schema34);
        schema19.setNot(schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema19.not(schema50);
        schema9.addExtension("", (java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        java.lang.Integer int62 = linkArraySchema59.getMaxProperties();
        boolean boolean63 = schema56.equals((java.lang.Object) linkArraySchema59);
        io.swagger.oas.models.media.Discriminator discriminator64 = linkArraySchema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema59.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link72 = null;
        io.swagger.oas.annotations.links.Link[] linkArray73 = new io.swagger.oas.annotations.links.Link[] { link72 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray73);
        linkArraySchema69.addEnumItemObject(linkArray73);
        schema68.addEnumItemObject(linkArray73);
        schema50.addEnumItemObject(linkArray73);
        io.swagger.oas.models.media.Schema schema79 = schema50.exclusiveMaximum((java.lang.Boolean) true);
        schema79.setReadOnly((java.lang.Boolean) false);
        schema79.set$ref("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(linkArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema33.setProperties(strMap34);
        java.lang.Boolean boolean36 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str39 = schema33.getType();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema66 = schema58.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = schema66.getExtensions();
        io.swagger.oas.models.media.Schema schema68 = schema54.addProperties("#/components/schemas/", schema66);
        schema68.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str71 = schema68.getTitle();
        schema68.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema68.getProperties();
        io.swagger.oas.models.media.Schema schema75 = schema33.properties(strMap74);
        io.swagger.oas.models.media.Discriminator discriminator76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema33.discriminator(discriminator76);
        java.lang.Integer int78 = schema77.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        schema18.setMaxItems((java.lang.Integer) 1);
        schema18.setMaxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema48.addProperties("#/components/schemas/", schema62);
        io.swagger.oas.models.media.Schema schema64 = schema44.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema44.title("*/*");
        java.lang.Integer int67 = schema44.getMinItems();
        java.lang.Boolean boolean68 = schema44.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNull(boolean68);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema45.description("hi!");
        io.swagger.oas.models.media.Schema schema51 = schema49.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema56.addProperties("#/components/schemas/", schema70);
        schema56.setDefault((java.lang.Object) (-1));
        schema56.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema77 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema79 = linkArraySchema77.pattern("#/components/schemas/");
        java.lang.Integer int80 = schema79.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema81 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema81.pattern("#/components/schemas/");
        java.lang.Integer int84 = linkArraySchema81.getMaxProperties();
        io.swagger.oas.models.media.Schema schema86 = linkArraySchema81.readOnly((java.lang.Boolean) false);
        schema79.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema81);
        schema56.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema79);
        schema56.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema92 = schema56.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema94 = schema92.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean95 = schema51.equals((java.lang.Object) schema94);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = schema94.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(int84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal19 = schema14.getMultipleOf();
        java.math.BigDecimal bigDecimal20 = schema14.getMinimum();
        schema14.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal4 = null;
        linkArraySchema0.setMinimum(bigDecimal4);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap6 = null;
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.properties(strMap6);
        java.math.BigDecimal bigDecimal8 = null;
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.maximum(bigDecimal8);
        schema9.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.links.Link link12 = null;
        io.swagger.oas.annotations.links.Link[] linkArray13 = new io.swagger.oas.annotations.links.Link[] { link12 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray13);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray13);
        schema9.addEnumItemObject(linkArray13);
        java.lang.Integer int17 = schema9.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(linkArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(int17);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        io.swagger.oas.annotations.links.Link link27 = null;
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] { link27 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link[][] linkArray31 = new io.swagger.oas.annotations.links.Link[][] { linkArray25, linkArray28 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList32 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList32, linkArray31);
        schema24.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        schema2.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        io.swagger.oas.models.media.XML xML36 = null;
        schema2.setXml(xML36);
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema2.multipleOf(bigDecimal38);
        java.lang.Integer int40 = schema2.getMinLength();
        java.math.BigDecimal bigDecimal41 = null;
        schema2.setMultipleOf(bigDecimal41);
        schema2.setMaxItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        java.lang.Boolean boolean50 = schema49.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int60 = schema59.getMaxItems();
        io.swagger.oas.models.media.Schema schema62 = schema59.title("");
        schema49.setAdditionalProperties(schema59);
        io.swagger.oas.models.media.XML xML64 = schema49.getXml();
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema49.multipleOf(bigDecimal65);
        java.lang.Integer int67 = schema49.getMaxItems();
        io.swagger.oas.models.media.Schema schema69 = schema49.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str70 = schema69.getName();
        schema69.setNullable((java.lang.Boolean) false);
        schema23.addExtension("", (java.lang.Object) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.externalDocs(externalDocumentation79);
        schema76.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema84 = schema76.name("#/components/schemas/");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList85 = schema76.getEnum();
        io.swagger.oas.models.media.Schema schema87 = schema76.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema76.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal90 = schema76.getMinimum();
        io.swagger.oas.models.media.Schema schema91 = schema23.not(schema76);
        java.math.BigDecimal bigDecimal92 = null;
        schema76.setMultipleOf(bigDecimal92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(boolean50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(int60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(linkArrayList85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean28 = schema8.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema8.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema34 = schema30.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.toString();
        schema2.setMinItems((java.lang.Integer) 10);
        schema2.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema9.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.multipleOf(bigDecimal12);
        java.math.BigDecimal bigDecimal14 = schema9.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(bigDecimal14);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema29.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema31.deprecated((java.lang.Boolean) false);
        schema31.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema5.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema13.setExternalDocs(externalDocumentation14);
        java.lang.Boolean boolean16 = schema13.getReadOnly();
        schema13.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema2.maxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema15.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema19 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema15.multipleOf(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema47.writeOnly((java.lang.Boolean) false);
        java.lang.String str50 = schema49.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.readOnly((java.lang.Boolean) true);
        schema9.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema2.getDiscriminator();
        schema2.setMaxLength((java.lang.Integer) 100);
        java.lang.String str10 = schema2.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal28 = null;
        schema27.setMaximum(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema27.readOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap32 = schema27.getProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema44 = schema36.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = schema44.getExtensions();
        io.swagger.oas.models.media.XML xML46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.xml(xML46);
        schema44.setMinLength((java.lang.Integer) 0);
        java.lang.String str50 = schema44.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema44.externalDocs(externalDocumentation51);
        java.math.BigDecimal bigDecimal53 = schema44.getMultipleOf();
        io.swagger.oas.models.media.Schema schema55 = schema44.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(bigDecimal53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema56.setDiscriminator(discriminator57);
        java.lang.Boolean boolean59 = schema56.getReadOnly();
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema56);
        java.math.BigDecimal bigDecimal61 = null;
        schema60.setMaximum(bigDecimal61);
        java.lang.String str63 = schema60.getPattern();
        java.math.BigDecimal bigDecimal64 = null;
        schema60.setMultipleOf(bigDecimal64);
        java.lang.Boolean boolean66 = schema60.getReadOnly();
        java.lang.String str67 = schema60.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "#/components/schemas/" + "'", str63, "#/components/schemas/");
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList13 = null;
        linkArraySchema7.setEnum(linkArrayList13);
        linkArraySchema7.setMinItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema7.xml(xML17);
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.xml(xML19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = schema48.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator52 = schema48.getDiscriminator();
        schema48.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal55 = schema48.getMultipleOf();
        io.swagger.oas.models.media.Schema schema57 = schema48.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema48.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema48.minItems((java.lang.Integer) 100);
        schema61.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        schema66.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema74 = schema66.name("#/components/schemas/");
        schema74.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.multipleOf(bigDecimal77);
        io.swagger.oas.models.media.Schema schema80 = schema78.$ref("");
        java.lang.String str81 = schema80.getTitle();
        io.swagger.oas.models.media.Schema schema82 = schema61.additionalProperties(schema80);
        java.math.BigDecimal bigDecimal83 = schema82.getMultipleOf();
        java.lang.Class<?> wildcardClass84 = schema82.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(linkArrayList51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(bigDecimal83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 10);
        java.lang.String str27 = schema24.getType();
        java.lang.String str28 = schema24.getFormat();
        java.lang.String str29 = schema24.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.format("");
        java.lang.Integer int15 = linkArraySchema5.getMaxProperties();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema5.description("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        schema12.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema39.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = schema44.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema47 = schema44.minItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = schema5.getExtensions();
        io.swagger.oas.models.media.Schema schema8 = schema5.uniqueItems((java.lang.Boolean) false);
        schema8.setPattern("*/*");
        java.math.BigDecimal bigDecimal11 = schema8.getMinimum();
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema8.minimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.math.BigDecimal bigDecimal7 = schema6.getMultipleOf();
        io.swagger.oas.models.media.Schema schema9 = schema6.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int10 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(bigDecimal7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(int10);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.media.Schema schema57 = schema54.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean58 = schema54.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        schema16.setMaxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean20 = schema16.getUniqueItems();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.minimum(bigDecimal21);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap23 = null;
        schema16.setProperties(strMap23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        schema23.setFormat("*/*");
        java.lang.String str26 = schema23.getName();
        java.lang.Integer int27 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal28 = schema23.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema39 = schema31.maxProperties((java.lang.Integer) 0);
        schema31.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema43 = schema31.addRequiredItem("");
        schema31.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal46 = schema31.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        java.math.BigDecimal bigDecimal55 = schema49.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        java.lang.Integer int64 = linkArraySchema61.getMaxProperties();
        boolean boolean65 = schema58.equals((java.lang.Object) linkArraySchema61);
        io.swagger.oas.models.media.Discriminator discriminator66 = linkArraySchema61.getDiscriminator();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema61.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema61.nullable((java.lang.Boolean) false);
        schema49.setExample((java.lang.Object) schema70);
        io.swagger.oas.models.media.XML xML72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema70.xml(xML72);
        io.swagger.oas.models.media.Schema schema74 = schema31.not(schema73);
        io.swagger.oas.models.media.XML xML75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema73.xml(xML75);
        boolean boolean77 = schema23.equals((java.lang.Object) schema76);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(discriminator66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        linkArraySchema0.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema0.externalDocs(externalDocumentation12);
        linkArraySchema0.setMinLength((java.lang.Integer) (-1));
        java.lang.Integer int16 = linkArraySchema0.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int16);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        java.lang.String str16 = schema10.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.nullable((java.lang.Boolean) true);
        schema20.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList25 = linkArraySchema15.getEnum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        java.lang.String[] strArray42 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema40.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMaxItems();
        schema55.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        schema55.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema schema62 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema40.properties(strMap63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema15.additionalProperties(schema40);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema15.maximum(bigDecimal67);
        linkArraySchema15.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(linkArrayList25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        java.lang.Integer int9 = schema2.getMaxLength();
        io.swagger.oas.models.media.XML xML10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.xml(xML10);
        io.swagger.oas.models.media.Schema schema13 = schema2.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str14 = schema2.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        java.lang.String str32 = schema28.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.discriminator(discriminator33);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = schema2.getType();
        schema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = schema2.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(discriminator17);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        java.math.BigDecimal bigDecimal29 = schema28.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        schema8.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema8.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        boolean boolean41 = schema34.equals((java.lang.Object) linkArraySchema37);
        io.swagger.oas.models.media.Discriminator discriminator42 = linkArraySchema37.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema37.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema43);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList45 = linkArraySchema37.getEnum();
        schema31.setDefault((java.lang.Object) linkArraySchema37);
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema37.uniqueItems((java.lang.Boolean) false);
        schema48.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(discriminator42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(linkArrayList45);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        schema24.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator27 = schema24.getDiscriminator();
        schema24.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator27);
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str16 = schema8.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        java.lang.Integer int21 = linkArraySchema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema33 = schema23.additionalProperties(schema26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = schema23.getExternalDocs();
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema23.xml(xML35);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema47 = schema39.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema36.additionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema50 = schema39.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema8.addProperties("", schema52);
        io.swagger.oas.models.media.Schema schema55 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema8.setMinLength((java.lang.Integer) 0);
        java.lang.Boolean boolean58 = schema8.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema8.externalDocs(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        java.lang.String str21 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema23 = schema18.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = schema18.maxLength((java.lang.Integer) 100);
        java.lang.String str26 = schema18.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema53 = schema46.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema38.addProperties("#/components/schemas/", schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema58.not(schema69);
        schema69.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        java.lang.Boolean boolean74 = schema54.getReadOnly();
        io.swagger.oas.models.media.Schema schema76 = schema54.writeOnly((java.lang.Boolean) true);
        schema26.setNot(schema54);
        io.swagger.oas.models.media.Schema schema79 = schema54.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema54.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean82 = schema81.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema84 = schema81.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema86 = schema81.pattern("#/components/schemas/hi!");
        java.lang.Integer int87 = schema86.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        java.lang.Boolean boolean41 = schema5.getUniqueItems();
        schema5.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema5.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema5.getDiscriminator();
        schema5.setExclusiveMaximum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema5.multipleOf(bigDecimal49);
        schema50.setMinItems((java.lang.Integer) 10);
        java.lang.String str53 = schema50.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str53, "class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        schema8.setMinItems((java.lang.Integer) 0);
        schema8.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema33 = schema8.$ref("");
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        java.lang.Integer int62 = linkArraySchema59.getMaxProperties();
        boolean boolean63 = schema56.equals((java.lang.Object) linkArraySchema59);
        io.swagger.oas.models.media.Discriminator discriminator64 = linkArraySchema59.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator65 = null;
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema59.discriminator(discriminator65);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema59.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema68);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema68.externalDocs(externalDocumentation70);
        java.math.BigDecimal bigDecimal72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.maximum(bigDecimal72);
        io.swagger.oas.models.media.Schema schema75 = schema73.exclusiveMaximum((java.lang.Boolean) false);
        schema43.setAdditionalProperties(schema75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema43.externalDocs(externalDocumentation77);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.writeOnly((java.lang.Boolean) true);
        java.lang.Integer int6 = schema5.getMinLength();
        schema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        schema39.setDiscriminator(discriminator46);
        java.lang.Boolean boolean48 = schema39.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema2.getMultipleOf();
        schema2.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema54 = schema2.example((java.lang.Object) schema53);
        schema54.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema73 = schema71.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema59.addProperties("#/components/schemas/", schema73);
        schema59.setDefault((java.lang.Object) (-1));
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML79 = schema59.getXml();
        java.lang.Integer int80 = schema59.getMaxItems();
        schema59.setType("*/*");
        io.swagger.oas.models.media.Schema schema84 = schema59.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.multipleOf(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema94 = schema84.additionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema95 = schema54.additionalProperties(schema91);
        java.lang.Object obj96 = schema95.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(obj96);
        org.junit.Assert.assertEquals(obj96.toString(), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.lang.String.valueOf(obj96), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertEquals(java.util.Objects.toString(obj96), "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        java.lang.String str8 = schema2.getType();
        io.swagger.oas.models.media.Schema schema10 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        java.math.BigDecimal bigDecimal18 = null;
        schema16.setMinimum(bigDecimal18);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema16.externalDocs(externalDocumentation20);
        schema21.setDeprecated((java.lang.Boolean) true);
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = schema36.getExternalDocs();
        java.lang.Integer int40 = schema36.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        schema44.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema44.not(schema55);
        io.swagger.oas.models.media.Schema schema57 = schema36.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema55);
        java.lang.Boolean boolean58 = schema57.getDeprecated();
        io.swagger.oas.models.media.XML xML59 = schema57.getXml();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap60 = schema57.getProperties();
        schema8.setProperties(strMap60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(externalDocumentation39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(xML59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.lang.Boolean boolean13 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema2.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema2.setDiscriminator(discriminator20);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        schema24.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema24.not(schema35);
        io.swagger.oas.models.media.Schema schema38 = schema35.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        schema38.setMultipleOf(bigDecimal39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        java.math.BigDecimal bigDecimal56 = schema54.getMaximum();
        java.lang.Boolean boolean57 = schema54.getExclusiveMinimum();
        java.lang.String str58 = schema54.getDescription();
        java.lang.String[] strArray63 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        schema54.setRequired((java.util.List<java.lang.String>) strList64);
        schema38.setRequired((java.util.List<java.lang.String>) strList64);
        io.swagger.oas.models.media.Schema schema68 = schema2.required((java.util.List<java.lang.String>) strList64);
        schema2.setFormat("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal56);
        org.junit.Assert.assertNull(boolean57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Integer int13 = schema10.getMaxItems();
        schema10.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema16.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema8.additionalProperties(schema25);
        schema25.setReadOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema25.multipleOf(bigDecimal29);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        java.lang.String str9 = schema6.getTitle();
        io.swagger.oas.models.media.Schema schema11 = schema6.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema11.minLength((java.lang.Integer) 100);
        java.lang.Integer int16 = schema15.getMaxLength();
        schema15.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema21.not(schema32);
        java.math.BigDecimal bigDecimal34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema21.minimum(bigDecimal34);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        java.lang.String str43 = schema38.getFormat();
        schema38.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema38.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        java.lang.String str55 = schema50.getFormat();
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema71);
        io.swagger.oas.annotations.links.Link[] linkArray73 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray73);
        io.swagger.oas.annotations.links.Link link75 = null;
        io.swagger.oas.annotations.links.Link[] linkArray76 = new io.swagger.oas.annotations.links.Link[] { link75 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap78 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        io.swagger.oas.annotations.links.Link[][] linkArray79 = new io.swagger.oas.annotations.links.Link[][] { linkArray73, linkArray76 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList80 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList80, linkArray79);
        schema72.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema50.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema47.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema21.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema15.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList89 = schema15.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(linkArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(linkArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(linkArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNull(strList89);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        java.lang.String str29 = schema2.get$ref();
        io.swagger.oas.models.media.Schema schema31 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema31.minimum(bigDecimal32);
        io.swagger.oas.models.media.Schema schema35 = schema33.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema35.minLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal38 = schema35.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal38);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema25 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema15.xml(xML26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        schema38.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema46.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        java.lang.Integer int54 = linkArraySchema50.getMaxLength();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.getNot();
        schema46.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema50);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema50.deprecated((java.lang.Boolean) true);
        schema29.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        java.lang.String str70 = schema62.getFormat();
        io.swagger.oas.models.media.Schema schema72 = schema62.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema62.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        java.lang.Integer int78 = linkArraySchema75.getMinProperties();
        linkArraySchema75.setUniqueItems((java.lang.Boolean) false);
        schema62.setNot((io.swagger.oas.models.media.Schema) linkArraySchema75);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema75.maximum(bigDecimal82);
        io.swagger.oas.models.media.Schema schema84 = schema29.example((java.lang.Object) bigDecimal82);
        io.swagger.oas.models.media.Schema schema86 = schema84.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.lang.String str38 = schema37.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        io.swagger.oas.models.media.Schema schema54 = schema50.readOnly((java.lang.Boolean) true);
        java.lang.String str55 = schema50.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.externalDocs(externalDocumentation56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema37.not(schema57);
        schema60.setName("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema60.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#/components/schemas/" + "'", str55, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema2.pattern("");
        java.lang.Boolean boolean34 = schema33.getWriteOnly();
        io.swagger.oas.models.media.Schema schema36 = schema33.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema38 = schema33.maxLength((java.lang.Integer) 1);
        schema33.setMinLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        java.lang.String str14 = schema13.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema13.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema18 = schema16.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema14 = schema11.title("*/*");
        java.lang.Boolean boolean15 = schema14.getWriteOnly();
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema14.discriminator(discriminator16);
        java.lang.Integer int18 = schema14.getMinProperties();
        schema14.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        schema13.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema13.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal20 = schema19.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema34);
        io.swagger.oas.models.media.Schema schema37 = schema35.minProperties((java.lang.Integer) 0);
        schema35.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema53);
        io.swagger.oas.annotations.links.Link[] linkArray55 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap56 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray55);
        io.swagger.oas.annotations.links.Link link57 = null;
        io.swagger.oas.annotations.links.Link[] linkArray58 = new io.swagger.oas.annotations.links.Link[] { link57 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap59 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray58);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap60 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray58);
        io.swagger.oas.annotations.links.Link[][] linkArray61 = new io.swagger.oas.annotations.links.Link[][] { linkArray55, linkArray58 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList62 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList62, linkArray61);
        schema54.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList62);
        schema35.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList62);
        schema35.setWriteOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema69 = schema35.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = schema35.name("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema74.externalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema schema80 = schema78.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = schema78.getExternalDocs();
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        schema78.setRequired((java.util.List<java.lang.String>) strList87);
        schema35.setRequired((java.util.List<java.lang.String>) strList87);
        schema19.setRequired((java.util.List<java.lang.String>) strList87);
        schema19.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(linkArray55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(linkArray58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(linkArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(externalDocumentation81);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str32 = schema27.getTitle();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList33 = schema27.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(linkArrayList33);
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.xml(xML13);
        io.swagger.oas.models.media.Schema schema16 = schema14.maxLength((java.lang.Integer) (-1));
        java.lang.String str17 = schema14.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#/components/schemas/" + "'", str17, "#/components/schemas/");
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str30 = schema26.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("hi!");
        java.lang.String str42 = schema41.toString();
        schema26.setDefault((java.lang.Object) schema41);
        io.swagger.oas.models.media.Schema schema44 = schema41.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.lang.String> strList45 = schema44.getRequired();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str42, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema44);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        java.lang.Integer int37 = schema28.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = linkArraySchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema43.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema49);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = schema57.getExternalDocs();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        schema57.setRequired((java.util.List<java.lang.String>) strList66);
        linkArraySchema49.setRequired((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema70 = schema28.required((java.util.List<java.lang.String>) strList66);
        io.swagger.oas.models.media.Schema schema72 = schema70.$ref("");
        io.swagger.oas.models.media.Schema schema74 = schema72.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema42.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema schema55 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema47.externalDocs(externalDocumentation56);
        java.math.BigDecimal bigDecimal58 = schema57.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        schema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema6.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.readOnly((java.lang.Boolean) true);
        schema20.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = schema10.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema31 = schema23.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = schema31.getExtensions();
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema31.xml(xML33);
        schema31.setMinLength((java.lang.Integer) 0);
        java.lang.String str37 = schema31.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema31.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.XML xML40 = null;
        schema31.setXml(xML40);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema48.not(schema55);
        java.lang.String[] strArray58 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        io.swagger.oas.models.media.Schema schema61 = schema56.required((java.util.List<java.lang.String>) strList59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.externalDocs(externalDocumentation68);
        io.swagger.oas.models.media.Schema schema71 = schema69.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int72 = schema71.getMaxItems();
        schema71.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = null;
        schema71.setExtensions(strMap76);
        io.swagger.oas.models.media.Schema schema78 = schema56.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema71);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.externalDocs(externalDocumentation84);
        io.swagger.oas.models.media.Schema schema87 = schema85.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int88 = schema87.getMaxItems();
        schema87.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = schema87.getExtensions();
        schema56.setExtensions(strMap92);
        schema31.setExtensions(strMap92);
        schema10.setExtensions(strMap92);
        java.lang.Object obj97 = null;
        schema10.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", obj97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNull(int88);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema39.not(schema50);
        java.math.BigDecimal bigDecimal52 = schema50.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        java.lang.Integer int56 = schema55.getMaxLength();
        schema50.setExample((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema59 = schema55.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema59.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema14.not(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema14.pattern("*/*");
        io.swagger.oas.models.media.Schema schema68 = schema14.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema68.minProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.discriminator(discriminator46);
        java.lang.Boolean boolean48 = schema47.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean48);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema schema20 = null;
        schema6.setAdditionalProperties(schema20);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link25 = null;
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] { link25 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        linkArraySchema22.addEnumItemObject(linkArray26);
        schema6.addEnumItemObject(linkArray26);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        java.lang.Integer int38 = linkArraySchema35.getMaxProperties();
        boolean boolean39 = schema32.equals((java.lang.Object) linkArraySchema35);
        io.swagger.oas.models.media.Discriminator discriminator40 = linkArraySchema35.getDiscriminator();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema35.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal43 = null;
        schema42.setMultipleOf(bigDecimal43);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList45 = schema42.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = schema42.getProperties();
        schema42.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema42.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema51 = schema6.example((java.lang.Object) schema42);
        schema6.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = schema6.title("");
        schema57.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(linkArrayList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema11.properties(strMap49);
        java.lang.Integer int51 = schema11.getMinProperties();
        schema11.setMaxLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        schema56.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema64 = schema56.name("#/components/schemas/");
        schema64.setDeprecated((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.multipleOf(bigDecimal67);
        schema11.setAdditionalProperties(schema64);
        io.swagger.oas.models.media.XML xML70 = schema64.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(xML70);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean16 = schema12.getExclusiveMinimum();
        java.lang.Integer int17 = schema12.getMaxItems();
        io.swagger.oas.models.media.Discriminator discriminator18 = schema12.getDiscriminator();
        io.swagger.oas.models.media.Schema schema20 = schema12.addRequiredItem("#/components/schemas/hi!");
        java.math.BigDecimal bigDecimal21 = schema12.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        schema6.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = schema6.toString();
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema35.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema38 = schema23.addProperties("#/components/schemas/", schema37);
        schema23.setDefault((java.lang.Object) (-1));
        schema23.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema23.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray45 = null;
        schema44.addEnumItemObject(linkArray45);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML50 = null;
        linkArraySchema47.setXml(xML50);
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema47.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema54 = schema44.example((java.lang.Object) "hi!");
        java.math.BigDecimal bigDecimal55 = schema54.getMinimum();
        java.util.List<java.lang.String> strList56 = schema54.getRequired();
        schema54.setNullable((java.lang.Boolean) false);
        java.lang.Integer int59 = schema54.getMaxItems();
        io.swagger.oas.models.media.XML xML60 = schema54.getXml();
        io.swagger.oas.models.media.Schema schema61 = schema6.not(schema54);
        io.swagger.oas.models.media.Schema schema63 = schema54.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal64 = null;
        schema54.setMaximum(bigDecimal64);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(bigDecimal55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNull(xML60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema6.setExtensions(strMap7);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.List<java.lang.String> strList11 = schema6.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema22 = schema14.maxProperties((java.lang.Integer) 0);
        schema14.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema14.addRequiredItem("");
        schema14.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal29 = schema14.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        java.lang.String str37 = schema32.getFormat();
        java.math.BigDecimal bigDecimal38 = schema32.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        java.lang.Integer int47 = linkArraySchema44.getMaxProperties();
        boolean boolean48 = schema41.equals((java.lang.Object) linkArraySchema44);
        io.swagger.oas.models.media.Discriminator discriminator49 = linkArraySchema44.getDiscriminator();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema44.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema44.nullable((java.lang.Boolean) false);
        schema32.setExample((java.lang.Object) schema53);
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.xml(xML55);
        io.swagger.oas.models.media.Schema schema57 = schema14.not(schema56);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = schema60.addProperties("#/components/schemas/", schema74);
        io.swagger.oas.models.media.Schema schema76 = schema56.additionalProperties(schema75);
        java.lang.Boolean boolean77 = schema56.getExclusiveMaximum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList78 = schema56.getEnum();
        io.swagger.oas.models.media.Schema schema79 = schema56.getAdditionalProperties();
        java.math.BigDecimal bigDecimal80 = schema79.getMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema6.not(schema79);
        io.swagger.oas.models.media.Schema schema83 = schema81.pattern("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(bigDecimal38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
        org.junit.Assert.assertNull(linkArrayList78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(bigDecimal80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema33.setProperties(strMap34);
        java.lang.Boolean boolean36 = schema33.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema38 = schema33.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema38.format("hi!");
        io.swagger.oas.models.media.Schema schema42 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema43.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str50 = schema47.getType();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        boolean boolean70 = schema63.equals((java.lang.Object) linkArraySchema66);
        schema60.setNot((io.swagger.oas.models.media.Schema) linkArraySchema66);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList72 = linkArraySchema66.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = linkArraySchema66.getExtensions();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema66.name("");
        io.swagger.oas.models.media.XML xML76 = linkArraySchema66.getXml();
        io.swagger.oas.models.media.Schema schema77 = schema47.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema66);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = linkArraySchema66.externalDocs(externalDocumentation78);
        schema42.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(linkArrayList72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(xML76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema8.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema33 = schema8.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean34 = schema8.getWriteOnly();
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str37 = schema8.getTitle();
        java.lang.Integer int38 = schema8.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.xml(xML38);
        java.lang.String str40 = schema37.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema2.setProperties(strMap9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.multipleOf(bigDecimal11);
        java.lang.String str13 = schema12.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "#/components/schemas/" + "'", str13, "#/components/schemas/");
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link link30 = null;
        io.swagger.oas.annotations.links.Link[] linkArray31 = new io.swagger.oas.annotations.links.Link[] { link30 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap32 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray31);
        io.swagger.oas.annotations.links.Link link33 = null;
        io.swagger.oas.annotations.links.Link[] linkArray34 = new io.swagger.oas.annotations.links.Link[] { link33 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray34);
        io.swagger.oas.annotations.links.Link[] linkArray36 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap37 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray36);
        io.swagger.oas.annotations.links.Link[][] linkArray38 = new io.swagger.oas.annotations.links.Link[][] { linkArray28, linkArray31, linkArray34, linkArray36 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList39 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList39, linkArray38);
        schema25.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int51 = schema50.getMaxItems();
        schema50.addExtension("", (java.lang.Object) (short) -1);
        schema50.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema58 = schema50.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema58.$ref("*/*");
        io.swagger.oas.models.media.Schema schema62 = schema58.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str63 = schema62.get$ref();
        io.swagger.oas.models.media.Schema schema65 = schema62.readOnly((java.lang.Boolean) true);
        boolean boolean66 = schema25.equals((java.lang.Object) schema65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(linkArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(linkArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "*/*" + "'", str63, "*/*");
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        java.math.BigDecimal bigDecimal29 = null;
        schema28.setMultipleOf(bigDecimal29);
        java.lang.Integer int31 = schema28.getMaxLength();
        io.swagger.oas.models.media.Schema schema33 = schema28.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        schema40.addExtension("*/*", (java.lang.Object) linkArraySchema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = schema60.getExternalDocs();
        java.lang.Integer int64 = schema60.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        schema68.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema68.not(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        io.swagger.oas.models.media.Schema schema83 = schema79.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean84 = schema79.getNullable();
        linkArraySchema50.setNot(schema79);
        java.lang.Integer int86 = schema79.getMaxProperties();
        schema33.setExample((java.lang.Object) int86);
        io.swagger.oas.models.media.Schema schema88 = schema33.getNot();
        schema88.setMinItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal91 = schema88.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNull(int86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(bigDecimal91);
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str40 = schema39.getFormat();
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema42.exclusiveMaximum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema42.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.multipleOf(bigDecimal7);
        schema2.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = linkArraySchema16.getMaxProperties();
        boolean boolean20 = schema13.equals((java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = linkArraySchema16.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray22 = linkArraySchema16.getDefault();
        java.math.BigDecimal bigDecimal23 = linkArraySchema16.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema34 = schema26.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = schema34.getExtensions();
        io.swagger.oas.models.media.XML xML36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema34.xml(xML36);
        schema34.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema16.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema16.exclusiveMinimum((java.lang.Boolean) false);
        schema44.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema44);
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        schema44.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNull(linkArray22);
        org.junit.Assert.assertNull(bigDecimal23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema2.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema12.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean15 = schema12.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        schema18.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema18.addRequiredItem("");
        schema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema18.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        java.math.BigDecimal bigDecimal43 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        java.lang.Integer int52 = linkArraySchema49.getMaxProperties();
        boolean boolean53 = schema46.equals((java.lang.Object) linkArraySchema49);
        io.swagger.oas.models.media.Discriminator discriminator54 = linkArraySchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema49.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema49.nullable((java.lang.Boolean) false);
        schema37.setExample((java.lang.Object) schema58);
        schema18.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = schema58.additionalProperties(schema63);
        boolean boolean70 = schema13.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema72 = schema58.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int82 = schema81.getMaxItems();
        schema81.addExtension("", (java.lang.Object) (short) -1);
        schema81.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema81.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema81.multipleOf(bigDecimal90);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema81.maximum(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema72.not(schema81);
        io.swagger.oas.models.media.Schema schema95 = schema94.getAdditionalProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema94.externalDocs(externalDocumentation96);
        io.swagger.oas.models.media.Schema schema99 = schema97.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        java.lang.Integer int12 = linkArraySchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema9.readOnly((java.lang.Boolean) false);
        schema8.setNot(schema14);
        schema14.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema14.get$ref();
        schema14.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema14.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int23 = schema14.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema schema38 = schema29.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema29.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema40.getExternalDocs();
        schema40.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema28.getExternalDocs();
        schema28.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.lang.String str38 = schema37.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema37.properties(strMap39);
        java.lang.Boolean boolean41 = schema37.getReadOnly();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap42 = schema37.getProperties();
        io.swagger.oas.models.media.Schema schema43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema37.additionalProperties(schema43);
        schema37.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int47 = schema37.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int47);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema38);
        java.lang.String[] strArray41 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = schema39.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = schema18.example((java.lang.Object) strList42);
        java.lang.Integer int46 = schema18.getMinLength();
        java.math.BigDecimal bigDecimal47 = null;
        schema18.setMaximum(bigDecimal47);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        schema18.setExternalDocs(externalDocumentation49);
        schema18.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        java.lang.String str14 = schema9.getFormat();
        java.math.BigDecimal bigDecimal15 = schema9.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        java.lang.Integer int24 = linkArraySchema21.getMaxProperties();
        boolean boolean25 = schema18.equals((java.lang.Object) linkArraySchema21);
        io.swagger.oas.models.media.Discriminator discriminator26 = linkArraySchema21.getDiscriminator();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema21.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema21.nullable((java.lang.Boolean) false);
        schema9.setExample((java.lang.Object) schema30);
        schema9.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str34 = schema9.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        schema37.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema46 = schema37.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema37.type("hi!");
        schema9.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema51 = schema9.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema0.example((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema0.name("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema61 = schema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema61.not(schema68);
        java.math.BigDecimal bigDecimal70 = schema68.getMultipleOf();
        io.swagger.oas.models.media.Schema schema72 = schema68.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema72.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema75 = schema54.not(schema72);
        io.swagger.oas.models.media.Schema schema77 = schema72.maxLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        java.lang.String str37 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema39 = schema36.title("hi!");
        io.swagger.oas.models.media.Schema schema41 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        schema24.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema24.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema44.readOnly((java.lang.Boolean) true);
        schema44.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema42.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema schema55 = schema47.uniqueItems((java.lang.Boolean) false);
        schema47.setExclusiveMinimum((java.lang.Boolean) true);
        schema47.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        schema31.setUniqueItems((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        java.lang.Integer int43 = linkArraySchema40.getMaxProperties();
        boolean boolean44 = schema37.equals((java.lang.Object) linkArraySchema40);
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema40.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema40.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema48.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        boolean boolean70 = schema63.equals((java.lang.Object) linkArraySchema66);
        schema60.setNot((io.swagger.oas.models.media.Schema) linkArraySchema66);
        io.swagger.oas.models.media.Schema schema73 = schema60.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema75 = schema73.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal76 = null;
        schema75.setMaximum(bigDecimal76);
        schema48.setNot(schema75);
        io.swagger.oas.models.media.Schema schema79 = schema31.example((java.lang.Object) schema75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation80 = schema75.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(externalDocumentation80);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean18 = schema12.getUniqueItems();
        io.swagger.oas.models.media.Schema schema20 = schema12.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema22 = schema20.maxProperties((java.lang.Integer) 0);
        java.lang.String str23 = schema22.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "#/components/schemas/" + "'", str23, "#/components/schemas/");
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema42.additionalProperties(schema47);
        schema42.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema42.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList13 = schema10.getEnum();
        schema10.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(linkArrayList13);
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = schema10.getExtensions();
        schema10.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Discriminator discriminator16 = schema10.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(discriminator16);
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.properties(strMap35);
        io.swagger.oas.models.media.Schema schema37 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema27.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema40 = schema38.maxLength((java.lang.Integer) 0);
        schema40.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema51.getMaxItems();
        schema51.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        java.lang.String str64 = schema59.getFormat();
        io.swagger.oas.models.media.Schema schema66 = schema59.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema51.addProperties("#/components/schemas/", schema66);
        io.swagger.oas.models.media.Schema schema69 = schema66.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema69.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema85 = schema81.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema78.not(schema85);
        java.lang.String[] strArray88 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema86.required((java.util.List<java.lang.String>) strList89);
        schema71.setRequired((java.util.List<java.lang.String>) strList89);
        schema40.setRequired((java.util.List<java.lang.String>) strList89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema4.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema4.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) 10);
        java.lang.Integer int19 = schema16.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator47 = schema46.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema29.readOnly((java.lang.Boolean) false);
        schema27.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema29);
        java.lang.Object obj36 = schema27.getExample();
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema27.discriminator(discriminator37);
        schema38.setWriteOnly((java.lang.Boolean) true);
        boolean boolean41 = schema2.equals((java.lang.Object) true);
        java.math.BigDecimal bigDecimal42 = null;
        schema2.setMultipleOf(bigDecimal42);
        io.swagger.oas.models.media.Schema schema45 = schema2.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int46 = schema2.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        java.lang.Integer int24 = linkArraySchema21.getMaxProperties();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema21.readOnly((java.lang.Boolean) false);
        linkArraySchema21.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema21.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = schema30.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema13.additionalProperties(schema32);
        io.swagger.oas.models.media.Schema schema35 = schema33.maxProperties((java.lang.Integer) 1);
        schema35.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        io.swagger.oas.models.media.Schema schema10 = schema8.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = schema8.getExternalDocs();
        schema8.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setFormat("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(externalDocumentation11);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int31 = schema30.getMaxItems();
        schema30.addExtension("", (java.lang.Object) (short) -1);
        schema30.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema30.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema30.multipleOf(bigDecimal39);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema30.minimum(bigDecimal41);
        schema30.setDeprecated((java.lang.Boolean) false);
        schema30.setNullable((java.lang.Boolean) false);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) false);
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema8.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema8.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.get$ref();
        java.math.BigDecimal bigDecimal22 = schema20.getMinimum();
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.multipleOf(bigDecimal23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "*/*" + "'", str21, "*/*");
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int21 = schema20.getMaxItems();
        schema20.addExtension("", (java.lang.Object) (short) -1);
        schema20.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema20.multipleOf(bigDecimal29);
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema20.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema39.not(schema46);
        java.lang.String[] strArray49 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        io.swagger.oas.models.media.Schema schema52 = schema47.required((java.util.List<java.lang.String>) strList50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int63 = schema62.getMaxItems();
        schema62.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = null;
        schema62.setExtensions(strMap67);
        io.swagger.oas.models.media.Schema schema69 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema62);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        io.swagger.oas.models.media.Schema schema78 = schema76.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int79 = schema78.getMaxItems();
        schema78.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = schema78.getExtensions();
        schema47.setExtensions(strMap83);
        schema32.setExtensions(strMap83);
        schema10.setExtensions(strMap83);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList87 = schema10.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(int63);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(linkArrayList87);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        schema16.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema16.minItems((java.lang.Integer) 0);
        java.lang.Boolean boolean40 = schema39.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        schema39.setExternalDocs(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean40 + "' != '" + false + "'", boolean40, false);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean28 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        schema8.setDiscriminator(discriminator29);
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str33 = schema8.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal7 = null;
        linkArraySchema0.setMaximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema11.getFormat();
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema11.pattern("");
        java.lang.String str21 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema23 = schema11.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema0.not(schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema27.addProperties("#/components/schemas/", schema41);
        schema27.setDefault((java.lang.Object) (-1));
        schema27.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal47 = schema27.getMultipleOf();
        schema27.setMinProperties((java.lang.Integer) (-1));
        schema24.setAdditionalProperties(schema27);
        java.lang.Integer int51 = schema24.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(int51);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = schema24.getExternalDocs();
        java.math.BigDecimal bigDecimal27 = null;
        schema24.setMultipleOf(bigDecimal27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(externalDocumentation26);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setPattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema21);
        io.swagger.oas.annotations.links.Link[] linkArray23 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        io.swagger.oas.annotations.links.Link link25 = null;
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] { link25 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        io.swagger.oas.annotations.links.Link[][] linkArray29 = new io.swagger.oas.annotations.links.Link[][] { linkArray23, linkArray26 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList30 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList30, linkArray29);
        schema22.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList30);
        io.swagger.oas.models.media.Schema schema34 = schema22.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema34.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema0.not(schema34);
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) (-1));
        java.lang.Object obj39 = null;
        schema36.setDefault(obj39);
        schema36.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(linkArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(linkArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.lang.String str38 = schema37.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = null;
        schema50.setProperties(strMap51);
        io.swagger.oas.models.media.Schema schema54 = schema50.readOnly((java.lang.Boolean) true);
        java.lang.String str55 = schema50.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema50.externalDocs(externalDocumentation56);
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        io.swagger.oas.models.media.Schema schema60 = schema37.not(schema57);
        schema60.setName("#/components/schemas/");
        java.math.BigDecimal bigDecimal63 = null;
        schema60.setMultipleOf(bigDecimal63);
        io.swagger.oas.models.media.Schema schema65 = schema60.getNot();
        java.lang.Object obj66 = schema60.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "#/components/schemas/" + "'", str55, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(obj66);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxProperties((java.lang.Integer) 100);
        schema19.setType("*/*");
        java.math.BigDecimal bigDecimal22 = schema19.getMultipleOf();
        io.swagger.oas.models.media.Schema schema24 = schema19.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean27 = schema26.getWriteOnly();
        io.swagger.oas.models.media.XML xML28 = schema26.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(xML28);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema2.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 0);
        java.lang.String str50 = schema49.getTitle();
        schema49.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = schema49.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "#/components/schemas/" + "'", str50, "#/components/schemas/");
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str27 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        java.lang.String str35 = schema30.getFormat();
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema30.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema30.type("hi!");
        schema2.setDefault((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema44 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int55 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.title("");
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        java.lang.String str60 = schema59.getTitle();
        java.math.BigDecimal bigDecimal61 = null;
        schema59.setMinimum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = schema59.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        schema65.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        schema13.set$ref("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema24.getExternalDocs();
        java.lang.Integer int28 = schema24.getMinLength();
        io.swagger.oas.annotations.links.Link link29 = null;
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] { link29 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        schema24.addEnumItemObject(linkArray30);
        schema13.setExample((java.lang.Object) linkArray30);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap36 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int16 = schema15.getMinProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        schema19.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema19.not(schema30);
        java.math.BigDecimal bigDecimal32 = schema30.getMaximum();
        java.lang.Boolean boolean33 = schema30.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema35 = schema30.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema37 = schema35.maxProperties((java.lang.Integer) 0);
        java.lang.String str38 = schema35.getName();
        java.lang.Boolean boolean39 = schema35.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema40 = schema15.not(schema35);
        io.swagger.oas.models.media.Schema schema42 = schema40.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema51.getMaxItems();
        schema51.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema51.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema51.getProperties();
        java.lang.Integer int58 = schema51.getMaxLength();
        io.swagger.oas.models.media.Schema schema59 = schema42.not(schema51);
        java.lang.Class<?> wildcardClass60 = schema42.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(boolean39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        java.lang.Integer int24 = linkArraySchema21.getMaxProperties();
        boolean boolean25 = schema18.equals((java.lang.Object) linkArraySchema21);
        io.swagger.oas.models.media.Discriminator discriminator26 = linkArraySchema21.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray27 = linkArraySchema21.getDefault();
        java.math.BigDecimal bigDecimal28 = linkArraySchema21.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema39 = schema31.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.xml(xML41);
        schema39.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema21.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema65 = schema55.additionalProperties(schema58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema55.getExternalDocs();
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema55.xml(xML67);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        schema71.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema79 = schema71.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema68.additionalProperties(schema71);
        io.swagger.oas.models.media.Schema schema81 = schema47.not(schema71);
        io.swagger.oas.models.media.Schema schema82 = schema8.additionalProperties(schema71);
        java.lang.String str83 = schema82.getName();
        java.util.List<java.lang.String> strList84 = schema82.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(linkArray27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(strList84);
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema43.minProperties((java.lang.Integer) (-1));
        schema45.setReadOnly((java.lang.Boolean) false);
        schema45.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema45.discriminator(discriminator50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema25.getNullable();
        java.util.List<java.lang.String> strList31 = schema25.getRequired();
        io.swagger.oas.models.media.Schema schema33 = schema25.writeOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal34 = schema25.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        schema8.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        boolean boolean30 = schema23.equals((java.lang.Object) linkArraySchema26);
        io.swagger.oas.models.media.Discriminator discriminator31 = linkArraySchema26.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema26.discriminator(discriminator32);
        schema8.setExample((java.lang.Object) linkArraySchema26);
        linkArraySchema26.setFormat("");
        linkArraySchema26.setMinItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        schema8.setNullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema8.multipleOf(bigDecimal23);
        schema8.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema39.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 0);
        schema59.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema39.not(schema59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link68 = null;
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] { link68 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        linkArraySchema65.addEnumItemObject(linkArray69);
        schema59.addEnumItemObject(linkArray69);
        io.swagger.oas.models.media.Schema schema74 = schema59.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str75 = schema74.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str75, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        schema18.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema18.addRequiredItem("");
        schema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema18.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        java.math.BigDecimal bigDecimal43 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        java.lang.Integer int52 = linkArraySchema49.getMaxProperties();
        boolean boolean53 = schema46.equals((java.lang.Object) linkArraySchema49);
        io.swagger.oas.models.media.Discriminator discriminator54 = linkArraySchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema49.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema49.nullable((java.lang.Boolean) false);
        schema37.setExample((java.lang.Object) schema58);
        schema18.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = schema58.additionalProperties(schema63);
        boolean boolean70 = schema13.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema72 = schema58.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int82 = schema81.getMaxItems();
        schema81.addExtension("", (java.lang.Object) (short) -1);
        schema81.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema81.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema81.multipleOf(bigDecimal90);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema81.maximum(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema72.not(schema81);
        schema81.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.externalDocs(externalDocumentation24);
        io.swagger.oas.models.media.Discriminator discriminator26 = schema22.getDiscriminator();
        schema22.setReadOnly((java.lang.Boolean) false);
        schema22.setMaxLength((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal31 = null;
        schema22.setMultipleOf(bigDecimal31);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(discriminator26);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        schema13.setDeprecated((java.lang.Boolean) true);
        java.lang.String str18 = schema13.toString();
        schema13.setTitle("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.minItems((java.lang.Integer) 10);
        linkArraySchema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema22 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema23.readOnly((java.lang.Boolean) false);
        linkArraySchema23.setPattern("");
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema23.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.minProperties((java.lang.Integer) 1);
        schema22.setNot(schema32);
        java.lang.Integer int36 = schema32.getMinItems();
        schema32.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        java.lang.Integer int42 = linkArraySchema39.getMaxProperties();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema54 = schema44.additionalProperties(schema47);
        schema54.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema71);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.externalDocs(externalDocumentation79);
        schema76.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema84 = schema76.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = schema84.getExtensions();
        io.swagger.oas.models.media.Schema schema86 = schema72.addProperties("#/components/schemas/", schema84);
        io.swagger.oas.models.media.Schema schema87 = schema54.addProperties("", schema86);
        java.math.BigDecimal bigDecimal88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema87.minimum(bigDecimal88);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema87.externalDocs(externalDocumentation90);
        schema91.setNullable((java.lang.Boolean) true);
        schema91.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML96 = null;
        schema91.setXml(xML96);
        io.swagger.oas.models.media.Schema schema98 = schema32.example((java.lang.Object) schema91);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema2.maxItems((java.lang.Integer) 1);
        schema19.setName("#/components/schemas/class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        java.lang.String str21 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema23 = schema18.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.not(schema40);
        java.lang.String[] strArray43 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = schema41.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema schema56 = schema54.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int57 = schema56.getMaxItems();
        schema56.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema56.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema56);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int73 = schema72.getMaxItems();
        schema72.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema72.getExtensions();
        schema41.setExtensions(strMap77);
        java.lang.Boolean boolean79 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema41.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema23.example((java.lang.Object) schema83);
        io.swagger.oas.models.media.Schema schema86 = schema23.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Discriminator discriminator55 = schema54.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema54.externalDocs(externalDocumentation56);
        schema57.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML60 = schema57.getXml();
        java.math.BigDecimal bigDecimal61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema57.maximum(bigDecimal61);
        schema62.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(discriminator55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(xML60);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        schema31.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean34 = schema31.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema24.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        schema24.setDiscriminator(discriminator27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema31.not(schema42);
        schema42.setUniqueItems((java.lang.Boolean) false);
        schema42.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema42.maxProperties((java.lang.Integer) 100);
        boolean boolean50 = schema24.equals((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema24.addProperties("", schema52);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        schema11.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema11.not(schema22);
        java.math.BigDecimal bigDecimal24 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        schema22.setExample((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema41);
        java.lang.Integer int43 = schema41.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.maximum(bigDecimal21);
        java.lang.Boolean boolean23 = schema22.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema25 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema22.xml(xML26);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema22.minimum(bigDecimal28);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        schema8.setTitle("*/*");
        java.lang.String str32 = schema8.getName();
        io.swagger.oas.models.media.Schema schema34 = schema8.title("*/*");
        io.swagger.oas.models.media.Schema schema36 = schema34.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema36.maximum(bigDecimal37);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema41.addProperties("#/components/schemas/", schema55);
        schema41.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean59 = schema41.getWriteOnly();
        io.swagger.oas.models.media.Schema schema61 = schema41.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int71 = schema70.getMaxItems();
        schema70.addExtension("", (java.lang.Object) (short) -1);
        schema70.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema78 = schema70.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema70.multipleOf(bigDecimal79);
        schema80.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema84 = schema80.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema61.not(schema84);
        io.swagger.oas.models.media.Schema schema86 = schema38.additionalProperties(schema84);
        io.swagger.oas.models.media.XML xML87 = schema84.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(xML87);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.type("hi!");
        io.swagger.oas.models.media.Schema schema26 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema26.nullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema13.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal20 = null;
        schema19.setMultipleOf(bigDecimal20);
        io.swagger.oas.models.media.Schema schema23 = schema19.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        schema19.setExternalDocs(externalDocumentation24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema2.setProperties(strMap9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.multipleOf(bigDecimal11);
        schema12.setName("#/components/schemas/");
        schema12.setMaxLength((java.lang.Integer) 100);
        schema12.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema4.setExclusiveMaximum((java.lang.Boolean) false);
        schema4.set$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema10 = schema4.pattern("");
        io.swagger.oas.models.media.Schema schema12 = schema4.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        schema12.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Boolean boolean11 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema13 = schema2.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = schema2.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(externalDocumentation14);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        java.lang.String str16 = schema10.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema10.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.XML xML19 = null;
        schema10.setXml(xML19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema34);
        java.lang.String[] strArray37 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema35.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int51 = schema50.getMaxItems();
        schema50.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        schema50.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema schema57 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int67 = schema66.getMaxItems();
        schema66.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = schema66.getExtensions();
        schema35.setExtensions(strMap71);
        schema10.setExtensions(strMap71);
        io.swagger.oas.models.media.Schema schema75 = schema10.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema75);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxLength((java.lang.Integer) 0);
        schema2.setMaxItems((java.lang.Integer) (-1));
        schema2.setTitle("#/components/schemas/hi!");
        java.lang.Boolean boolean28 = schema2.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(boolean28);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        java.lang.String str32 = schema28.getFormat();
        io.swagger.oas.models.media.Discriminator discriminator33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema28.discriminator(discriminator33);
        java.math.BigDecimal bigDecimal35 = null;
        schema34.setMultipleOf(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal39 = schema38.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal39);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        java.util.List<java.lang.String> strList42 = schema8.getRequired();
        io.swagger.oas.models.media.Schema schema44 = schema8.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator47 = schema8.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator47);
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = null;
        schema43.setExtensions(strMap44);
        schema43.setDescription("*/*");
        io.swagger.oas.models.media.Schema schema49 = schema43.maxLength((java.lang.Integer) 10);
        java.lang.Integer int50 = schema49.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema49.externalDocs(externalDocumentation51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        schema20.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema20.not(schema31);
        java.lang.String str33 = schema20.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        java.lang.String str41 = schema36.getFormat();
        io.swagger.oas.models.media.Schema schema43 = schema36.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema20.not(schema36);
        io.swagger.oas.models.media.Schema schema45 = schema10.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema47 = schema10.type("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema47.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML50 = schema49.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(xML50);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        linkArraySchema5.setDeprecated((java.lang.Boolean) false);
        java.lang.Object obj12 = linkArraySchema5.getExample();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        schema21.setMaxProperties((java.lang.Integer) 10);
        java.lang.Integer int24 = schema21.getMinLength();
        schema21.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema21.properties(strMap27);
        schema21.setUniqueItems((java.lang.Boolean) true);
        boolean boolean31 = schema14.equals((java.lang.Object) schema21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(obj12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        schema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setExclusiveMaximum((java.lang.Boolean) false);
        schema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        java.lang.String[] strArray45 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema43.required((java.util.List<java.lang.String>) strList46);
        schema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        schema28.setDiscriminator(discriminator50);
        java.lang.String str52 = schema28.getFormat();
        io.swagger.oas.models.media.Schema schema54 = schema28.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        java.lang.Integer int22 = linkArraySchema19.getMaxProperties();
        boolean boolean23 = schema16.equals((java.lang.Object) linkArraySchema19);
        io.swagger.oas.models.media.Discriminator discriminator24 = linkArraySchema19.getDiscriminator();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema19.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal27 = null;
        schema26.setMultipleOf(bigDecimal27);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList29 = schema26.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = schema26.getProperties();
        io.swagger.oas.models.media.Schema schema32 = schema26.readOnly((java.lang.Boolean) false);
        schema2.setDefault((java.lang.Object) false);
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(discriminator24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(linkArrayList29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema6.maxProperties((java.lang.Integer) (-1));
        schema29.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList32 = schema29.getRequired();
        io.swagger.oas.models.media.Schema schema34 = schema29.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        java.lang.String str18 = schema10.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema0.not(schema20);
        io.swagger.oas.models.media.Schema schema23 = schema20.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema20.multipleOf(bigDecimal24);
        java.math.BigDecimal bigDecimal26 = null;
        schema20.setMultipleOf(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema10.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema23 = schema10.uniqueItems((java.lang.Boolean) true);
        java.lang.String str24 = schema23.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema24.addProperties("#/components/schemas/", schema36);
        schema36.setMaxItems((java.lang.Integer) 10);
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema36.minimum(bigDecimal41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        schema45.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema53 = schema45.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema53.getExtensions();
        io.swagger.oas.models.media.XML xML55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema53.xml(xML55);
        schema53.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList59 = schema53.getRequired();
        io.swagger.oas.models.media.Schema schema60 = schema42.additionalProperties(schema53);
        io.swagger.oas.models.media.Schema schema61 = schema2.addProperties("*/*", schema60);
        java.lang.Integer int62 = schema61.getMaxProperties();
        java.math.BigDecimal bigDecimal63 = null;
        schema61.setMaximum(bigDecimal63);
        io.swagger.oas.models.media.Schema schema66 = schema61.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: -1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema11.properties(strMap49);
        schema11.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema11.maximum(bigDecimal53);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema29.minLength((java.lang.Integer) (-1));
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = schema34.getExternalDocs();
        schema34.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(externalDocumentation35);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray24 = null;
        schema23.addEnumItemObject(linkArray24);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML29 = null;
        linkArraySchema26.setXml(xML29);
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema26.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema33 = schema23.example((java.lang.Object) "hi!");
        java.math.BigDecimal bigDecimal34 = schema33.getMinimum();
        java.util.List<java.lang.String> strList35 = schema33.getRequired();
        schema33.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.Boolean boolean46 = schema41.getReadOnly();
        java.lang.String str47 = schema41.getType();
        io.swagger.oas.models.media.Schema schema49 = schema41.minLength((java.lang.Integer) 100);
        schema33.addExtension("", (java.lang.Object) schema41);
        schema33.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(boolean46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        java.lang.String str14 = schema9.getFormat();
        schema9.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema9.pattern("");
        java.lang.Integer int19 = schema18.getMaxItems();
        java.lang.Class<?> wildcardClass20 = schema18.getClass();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema0.example((java.lang.Object) wildcardClass20);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema0.maxLength((java.lang.Integer) (-1));
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = schema14.getExternalDocs();
        io.swagger.oas.models.media.Schema schema19 = schema14.$ref("");
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        schema19.setExternalDocs(externalDocumentation22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema8.pattern("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        schema32.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema32.not(schema43);
        schema28.setNot(schema32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema28.externalDocs(externalDocumentation46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.math.BigDecimal bigDecimal50 = schema49.getMaximum();
        io.swagger.oas.models.media.Schema schema51 = schema18.addProperties("hi!", schema49);
        io.swagger.oas.models.media.Schema schema53 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema53.maxLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.multipleOf(bigDecimal29);
        schema30.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.lang.String str15 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema25 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema2.not(schema18);
        schema2.setType("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxProperties((java.lang.Integer) 0);
        schema2.addExtension("hi!", (java.lang.Object) schema36);
        java.lang.Integer int38 = schema36.getMinLength();
        io.swagger.oas.models.media.Schema schema40 = schema36.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str16 = schema8.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        java.lang.Integer int21 = linkArraySchema18.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema18.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema33 = schema23.additionalProperties(schema26);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = schema23.getExternalDocs();
        io.swagger.oas.models.media.XML xML35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema23.xml(xML35);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema47 = schema39.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema36.additionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema50 = schema39.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema50.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema8.addProperties("", schema52);
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema8.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(externalDocumentation34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        schema20.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = schema9.getXml();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.externalDocs(externalDocumentation17);
        java.lang.Boolean boolean19 = schema16.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(boolean19);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        java.math.BigDecimal bigDecimal9 = null;
        schema2.setMultipleOf(bigDecimal9);
        java.lang.Integer int11 = schema2.getMinProperties();
        java.lang.String str12 = schema2.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        linkArraySchema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        boolean boolean30 = schema23.equals((java.lang.Object) linkArraySchema26);
        java.lang.String str31 = schema23.getFormat();
        io.swagger.oas.models.media.Schema schema33 = schema23.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema13.not(schema33);
        linkArraySchema5.setExample((java.lang.Object) schema33);
        java.lang.Object obj36 = schema33.getExample();
        io.swagger.oas.models.media.Schema schema38 = schema33.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int48 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.externalDocs(externalDocumentation54);
        schema51.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema51.not(schema62);
        schema47.setNot(schema51);
        schema47.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean67 = schema47.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator68 = null;
        schema47.setDiscriminator(discriminator68);
        java.math.BigDecimal bigDecimal70 = schema47.getMaximum();
        io.swagger.oas.models.media.Schema schema72 = schema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation73 = null;
        io.swagger.oas.models.media.Schema schema74 = schema72.externalDocs(externalDocumentation73);
        java.lang.Boolean boolean75 = schema72.getExclusiveMinimum();
        schema33.setDefault((java.lang.Object) boolean75);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(boolean67);
        org.junit.Assert.assertNull(bigDecimal70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(boolean75);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema13.deprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean17 = schema16.getExclusiveMaximum();
        schema16.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = schema16.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int31 = schema30.getMaxItems();
        schema30.addExtension("", (java.lang.Object) (short) -1);
        schema30.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema30.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema40 = schema38.$ref("*/*");
        io.swagger.oas.models.media.Schema schema42 = schema38.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        io.swagger.oas.models.media.Schema schema51 = schema49.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int52 = schema51.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        schema55.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema55.not(schema66);
        schema51.setNot(schema55);
        schema51.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema72 = schema51.minItems((java.lang.Integer) 1);
        java.lang.String str73 = schema51.getFormat();
        java.math.BigDecimal bigDecimal74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema51.minimum(bigDecimal74);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap76 = schema75.getProperties();
        schema75.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = schema42.not(schema75);
        schema21.setNot(schema75);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema81 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema81.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema85 = schema83.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema86 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema88 = linkArraySchema86.pattern("#/components/schemas/");
        java.lang.Integer int89 = linkArraySchema86.getMaxProperties();
        boolean boolean90 = schema83.equals((java.lang.Object) linkArraySchema86);
        schema21.setNot(schema83);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema83.externalDocs(externalDocumentation92);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link link30 = null;
        io.swagger.oas.annotations.links.Link[] linkArray31 = new io.swagger.oas.annotations.links.Link[] { link30 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap32 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray31);
        io.swagger.oas.annotations.links.Link link33 = null;
        io.swagger.oas.annotations.links.Link[] linkArray34 = new io.swagger.oas.annotations.links.Link[] { link33 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray34);
        io.swagger.oas.annotations.links.Link[] linkArray36 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap37 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray36);
        io.swagger.oas.annotations.links.Link[][] linkArray38 = new io.swagger.oas.annotations.links.Link[][] { linkArray28, linkArray31, linkArray34, linkArray36 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList39 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList39, linkArray38);
        schema25.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList39);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema25.externalDocs(externalDocumentation42);
        java.math.BigDecimal bigDecimal44 = schema43.getMultipleOf();
        schema43.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(linkArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(linkArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.deprecated((java.lang.Boolean) false);
        schema20.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str23 = schema20.getName();
        java.lang.String str24 = schema20.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        java.lang.String str9 = schema8.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.externalDocs(externalDocumentation10);
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema20.not(schema27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        schema20.addExtension("*/*", (java.lang.Object) linkArraySchema30);
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema30.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.Boolean boolean36 = linkArraySchema30.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema45.externalDocs(externalDocumentation48);
        schema45.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema52 = schema42.additionalProperties(schema45);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema52.example((java.lang.Object) schema55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema52.properties(strMap61);
        java.lang.String str63 = schema62.getDescription();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema73.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = schema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema70.not(schema77);
        java.lang.String[] strArray80 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        io.swagger.oas.models.media.Schema schema83 = schema78.required((java.util.List<java.lang.String>) strList81);
        io.swagger.oas.models.media.Schema schema84 = schema62.required((java.util.List<java.lang.String>) strList81);
        linkArraySchema30.setNot(schema84);
        schema11.setExample((java.lang.Object) linkArraySchema30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + false + "'", boolean36, false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        java.math.BigDecimal bigDecimal24 = null;
        schema15.setMultipleOf(bigDecimal24);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema15.getEnum();
        java.math.BigDecimal bigDecimal27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema15.maximum(bigDecimal27);
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        schema28.setDiscriminator(discriminator29);
        schema28.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(linkArrayList26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        java.lang.Boolean boolean28 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        schema8.setDiscriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = schema8.getMaximum();
        io.swagger.oas.models.media.Schema schema33 = schema8.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema40.not(schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        schema40.addExtension("*/*", (java.lang.Object) linkArraySchema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = schema60.getExternalDocs();
        java.lang.Integer int64 = schema60.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        schema68.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema68.not(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        io.swagger.oas.models.media.Schema schema83 = schema79.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean84 = schema79.getNullable();
        linkArraySchema50.setNot(schema79);
        schema79.setMinProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema88 = schema33.example((java.lang.Object) schema79);
        java.lang.String str89 = schema79.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean28);
        org.junit.Assert.assertNull(bigDecimal31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.discriminator(discriminator36);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        java.lang.Object obj25 = linkArraySchema15.getExample();
        io.swagger.oas.models.media.XML xML26 = null;
        linkArraySchema15.setXml(xML26);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema34.not(schema41);
        java.lang.String str43 = schema34.getType();
        io.swagger.oas.models.media.Discriminator discriminator44 = schema34.getDiscriminator();
        java.math.BigDecimal bigDecimal45 = schema34.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema52.not(schema59);
        java.lang.String[] strArray62 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema60.required((java.util.List<java.lang.String>) strList63);
        schema34.setRequired((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema schema68 = schema34.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema68.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema15.example((java.lang.Object) schema68);
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str74 = schema73.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(discriminator44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema2.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 10);
        java.lang.String str20 = schema19.getType();
        schema19.setMinLength((java.lang.Integer) 100);
        schema19.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema49 = schema45.description("hi!");
        io.swagger.oas.models.media.Schema schema50 = schema49.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
    }
}

