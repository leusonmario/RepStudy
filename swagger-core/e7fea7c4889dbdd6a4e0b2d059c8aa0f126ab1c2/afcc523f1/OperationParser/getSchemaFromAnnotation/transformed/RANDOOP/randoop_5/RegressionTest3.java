import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test01501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01501");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        schema16.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema16.not(schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        schema27.setProperties(strMap30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        java.lang.String str53 = schema48.getFormat();
        io.swagger.oas.models.media.Schema schema55 = schema48.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema40.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema74);
        java.lang.String[] strArray77 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema75.required((java.util.List<java.lang.String>) strList78);
        schema60.setRequired((java.util.List<java.lang.String>) strList78);
        schema27.setRequired((java.util.List<java.lang.String>) strList78);
        linkArraySchema5.setRequired((java.util.List<java.lang.String>) strList78);
        java.lang.Boolean boolean84 = linkArraySchema5.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(boolean84);
    }

    @Test
    public void test01502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01502");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.minLength((java.lang.Integer) 10);
        java.lang.String str27 = schema24.getType();
        io.swagger.oas.models.media.Schema schema29 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01503");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema schema46 = schema42.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMaxItems();
        schema55.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        java.lang.String str68 = schema63.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema63.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema55.addProperties("#/components/schemas/", schema70);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        schema75.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema82 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema84 = linkArraySchema82.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema84.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema87 = schema75.not(schema86);
        schema86.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema71.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        java.math.BigDecimal bigDecimal91 = schema71.getMaximum();
        boolean boolean92 = schema42.equals((java.lang.Object) bigDecimal91);
        io.swagger.oas.models.media.Schema schema94 = schema42.minItems((java.lang.Integer) 1);
        java.lang.Object obj95 = schema42.getExample();
        java.math.BigDecimal bigDecimal96 = null;
        schema42.setMaximum(bigDecimal96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test01504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01504");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinProperties((java.lang.Integer) 0);
        schema10.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxItems();
        schema28.addExtension("", (java.lang.Object) (short) -1);
        schema28.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema28.multipleOf(bigDecimal37);
        java.math.BigDecimal bigDecimal39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema28.maximum(bigDecimal39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema47.not(schema54);
        java.lang.String[] strArray57 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        io.swagger.oas.models.media.Schema schema60 = schema55.required((java.util.List<java.lang.String>) strList58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int71 = schema70.getMaxItems();
        schema70.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = null;
        schema70.setExtensions(strMap75);
        io.swagger.oas.models.media.Schema schema77 = schema55.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema70);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema84.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int87 = schema86.getMaxItems();
        schema86.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = schema86.getExtensions();
        schema55.setExtensions(strMap91);
        schema40.setExtensions(strMap91);
        schema10.setExtensions(strMap91);
        schema10.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema10.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(int87);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test01505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01505");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.lang.String str24 = schema19.getFormat();
        io.swagger.oas.models.media.Schema schema26 = schema19.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.deprecated((java.lang.Boolean) false);
        schema26.setDeprecated((java.lang.Boolean) true);
        schema16.setNot(schema26);
        schema26.setMinItems((java.lang.Integer) 10);
        schema26.setWriteOnly((java.lang.Boolean) false);
        schema26.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema26.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal42 = null;
        schema41.setMaximum(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01506");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01507");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.multipleOf(bigDecimal7);
        schema2.setReadOnly((java.lang.Boolean) true);
        java.lang.Integer int11 = schema2.getMinLength();
        io.swagger.oas.models.media.Schema schema13 = schema2.maxProperties((java.lang.Integer) 1);
        schema2.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.nullable((java.lang.Boolean) true);
        schema17.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01508");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01509");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        java.lang.Integer int24 = linkArraySchema21.getMaxProperties();
        boolean boolean25 = schema18.equals((java.lang.Object) linkArraySchema21);
        io.swagger.oas.models.media.Discriminator discriminator26 = linkArraySchema21.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray27 = linkArraySchema21.getDefault();
        java.math.BigDecimal bigDecimal28 = linkArraySchema21.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema39 = schema31.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.xml(xML41);
        schema39.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema21.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema65 = schema55.additionalProperties(schema58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema55.getExternalDocs();
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema55.xml(xML67);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        schema71.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema79 = schema71.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema68.additionalProperties(schema71);
        io.swagger.oas.models.media.Schema schema81 = schema47.not(schema71);
        io.swagger.oas.models.media.Schema schema82 = schema8.additionalProperties(schema71);
        io.swagger.oas.models.media.Schema schema84 = schema71.minLength((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema84.maximum(bigDecimal85);
        io.swagger.oas.models.media.Schema schema88 = schema86.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(linkArray27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test01510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01510");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        java.lang.String str13 = linkArraySchema11.getName();
        linkArraySchema11.setFormat("hi!");
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema11.minLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01511");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema13.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema13.setMinLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema13.minimum(bigDecimal22);
        schema13.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01512");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = null;
        schema2.setProperties(strMap18);
        schema2.setWriteOnly((java.lang.Boolean) true);
        java.lang.Integer int22 = schema2.getMaxItems();
        java.lang.Class<?> wildcardClass23 = schema2.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test01513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01513");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        schema27.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema35 = schema27.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema38 = schema35.uniqueItems((java.lang.Boolean) false);
        java.lang.String str39 = schema38.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema38.getExtensions();
        io.swagger.oas.models.media.Schema schema42 = schema38.format("hi!");
        java.math.BigDecimal bigDecimal43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema42.multipleOf(bigDecimal43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML48 = null;
        linkArraySchema45.setXml(xML48);
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema45.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal52 = null;
        linkArraySchema45.setMaximum(bigDecimal52);
        linkArraySchema45.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema69);
        io.swagger.oas.annotations.links.Link[] linkArray71 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap72 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray71);
        io.swagger.oas.annotations.links.Link link73 = null;
        io.swagger.oas.annotations.links.Link[] linkArray74 = new io.swagger.oas.annotations.links.Link[] { link73 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap75 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap76 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        io.swagger.oas.annotations.links.Link[][] linkArray77 = new io.swagger.oas.annotations.links.Link[][] { linkArray71, linkArray74 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList78 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList78, linkArray77);
        schema70.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList78);
        io.swagger.oas.models.media.Schema schema82 = schema70.maxLength((java.lang.Integer) (-1));
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList83 = schema82.getEnum();
        linkArraySchema45.setEnum(linkArrayList83);
        schema42.setEnum(linkArrayList83);
        schema24.setEnum(linkArrayList83);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(linkArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(linkArray74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(linkArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(linkArrayList83);
    }

    @Test
    public void test01514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01514");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.readOnly((java.lang.Boolean) true);
        java.lang.String str16 = schema11.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema18.minProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/" + "'", str16, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01515");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Integer int13 = schema10.getMaxItems();
        schema10.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema10.writeOnly((java.lang.Boolean) true);
        java.lang.String str18 = schema17.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01516");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.lang.Integer int4 = linkArraySchema0.getMaxLength();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = schema6.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema15 = schema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.not(schema22);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        schema27.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema35 = schema27.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = schema35.getExtensions();
        io.swagger.oas.models.media.Schema schema37 = schema23.addProperties("#/components/schemas/", schema35);
        java.math.BigDecimal bigDecimal38 = null;
        schema37.setMultipleOf(bigDecimal38);
        java.lang.Integer int40 = schema37.getMaxLength();
        boolean boolean41 = schema8.equals((java.lang.Object) int40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test01517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01517");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setMinItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01518");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.String str22 = linkArraySchema15.toString();
        io.swagger.oas.models.media.Discriminator discriminator23 = null;
        linkArraySchema15.setDiscriminator(discriminator23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema15.multipleOf(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema15.maxItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01519");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema31);
        java.lang.String[] strArray34 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        io.swagger.oas.models.media.Schema schema37 = schema32.required((java.util.List<java.lang.String>) strList35);
        schema6.setRequired((java.util.List<java.lang.String>) strList35);
        io.swagger.oas.models.media.Schema schema40 = schema6.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema40.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test01520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01520");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        io.swagger.oas.models.media.Schema schema28 = schema23.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema28.multipleOf(bigDecimal29);
        io.swagger.oas.models.media.Schema schema32 = schema30.title("");
        schema30.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01521");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema21.getMaxLength();
        schema21.setDescription("#/components/schemas/");
        java.lang.Boolean boolean30 = schema21.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01522");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str50 = schema24.getDescription();
        java.lang.String str51 = schema24.getName();
        java.lang.String str52 = schema24.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test01523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01523");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema16.format("*/*");
        java.lang.Integer int35 = schema16.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema16.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema41 = schema39.name("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema43 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema43.setType("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01524");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.Object obj44 = schema8.getExample();
        schema8.setMinItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal47 = schema8.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema8.getExternalDocs();
        schema8.setMinProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(externalDocumentation48);
    }

    @Test
    public void test01525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01525");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema8.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema29.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema44 = schema34.additionalProperties(schema37);
        schema44.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema61 = schema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema54.not(schema61);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        schema66.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema74 = schema66.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema74.getExtensions();
        io.swagger.oas.models.media.Schema schema76 = schema62.addProperties("#/components/schemas/", schema74);
        io.swagger.oas.models.media.Schema schema77 = schema44.addProperties("", schema76);
        io.swagger.oas.models.media.Schema schema78 = schema27.addProperties("*/*", schema44);
        io.swagger.oas.annotations.links.Link link79 = null;
        io.swagger.oas.annotations.links.Link[] linkArray80 = new io.swagger.oas.annotations.links.Link[] { link79 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap81 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray80);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap82 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray80);
        schema78.addEnumItemObject(linkArray80);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap84 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray80);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(linkArray80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test01526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01526");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.annotations.links.Link[] linkArray34 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema5.discriminator(discriminator35);
        java.math.BigDecimal bigDecimal37 = schema36.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(linkArray34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
    }

    @Test
    public void test01527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01527");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema schema14 = schema11.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(schema14);
    }

    @Test
    public void test01528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01528");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}";
    }

    @Test
    public void test01529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01529");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        schema26.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema32 = schema26.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        schema41.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = schema49.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("#/components/schemas/", schema56);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.externalDocs(externalDocumentation64);
        schema61.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema73 = schema61.not(schema72);
        schema72.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema76 = schema57.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema72);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema77 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema79 = linkArraySchema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema81 = schema79.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema79.externalDocs(externalDocumentation82);
        java.lang.String str84 = schema79.getFormat();
        io.swagger.oas.models.media.Schema schema86 = schema79.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema88 = schema86.deprecated((java.lang.Boolean) false);
        schema57.setNot(schema86);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema57.getExtensions();
        // The following exception was thrown during execution in test generation
        try {
            schema32.setExtensions(strMap90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test01530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01530");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.lang.Boolean boolean16 = schema8.getDeprecated();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal21 = schema8.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(bigDecimal21);
    }

    @Test
    public void test01531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01531");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList11 = schema2.getEnum();
        io.swagger.oas.models.media.Schema schema13 = schema2.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setMinProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema2.minimum(bigDecimal16);
        schema17.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(linkArrayList11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01532");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int71 = schema70.getMaxItems();
        schema70.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema70.getExtensions();
        schema39.setExample((java.lang.Object) schema70);
        io.swagger.oas.models.media.XML xML77 = schema39.getXml();
        schema39.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(xML77);
    }

    @Test
    public void test01533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01533");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link3 = null;
        io.swagger.oas.annotations.links.Link[] linkArray4 = new io.swagger.oas.annotations.links.Link[] { link3 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray4);
        linkArraySchema0.addEnumItemObject(linkArray4);
        java.math.BigDecimal bigDecimal7 = null;
        linkArraySchema0.setMaximum(bigDecimal7);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = linkArraySchema0.getProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema16.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int19 = schema18.getMaxItems();
        schema18.addExtension("", (java.lang.Object) (short) -1);
        schema18.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.$ref("*/*");
        io.swagger.oas.models.media.Schema schema30 = schema28.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.discriminator(discriminator31);
        io.swagger.oas.models.media.Schema schema34 = schema28.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema41 = schema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema41.not(schema48);
        java.lang.String[] strArray51 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        io.swagger.oas.models.media.Schema schema54 = schema49.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = schema28.example((java.lang.Object) strList52);
        linkArraySchema0.setRequired((java.util.List<java.lang.String>) strList52);
        java.math.BigDecimal bigDecimal57 = linkArraySchema0.getMultipleOf();
        java.lang.Boolean boolean58 = linkArraySchema0.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(linkArray4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNull(boolean58);
    }

    @Test
    public void test01534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01534");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMinimum(bigDecimal15);
        schema8.setMaxProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01535");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.lang.Boolean boolean13 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema15.getProperties();
        java.lang.Boolean boolean17 = schema15.getUniqueItems();
        io.swagger.oas.models.media.Schema schema19 = schema15.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema19.getNot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = schema20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(boolean17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test01536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01536");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        java.math.BigDecimal bigDecimal22 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        boolean boolean32 = schema25.equals((java.lang.Object) linkArraySchema28);
        io.swagger.oas.models.media.Discriminator discriminator33 = linkArraySchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema28.nullable((java.lang.Boolean) false);
        schema16.setExample((java.lang.Object) schema37);
        linkArraySchema5.setDefault((java.lang.Object) schema37);
        linkArraySchema5.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema5.writeOnly((java.lang.Boolean) false);
        linkArraySchema5.setType("");
        linkArraySchema5.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01537");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        schema41.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = schema49.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("#/components/schemas/", schema56);
        java.math.BigDecimal bigDecimal58 = schema41.getMultipleOf();
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema41.xml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema32.example((java.lang.Object) xML59);
        java.lang.Integer int62 = schema32.getMinProperties();
        java.math.BigDecimal bigDecimal63 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator75 = null;
        schema74.setDiscriminator(discriminator75);
        java.lang.Integer int77 = schema74.getMaxItems();
        schema74.setMaxProperties((java.lang.Integer) 100);
        schema32.setDefault((java.lang.Object) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int77);
    }

    @Test
    public void test01538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01538");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 0);
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema12.example((java.lang.Object) schema30);
        schema30.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01539");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        java.math.BigDecimal bigDecimal9 = null;
        schema2.setMaximum(bigDecimal9);
        java.lang.String str11 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema2.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = schema13.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(xML14);
    }

    @Test
    public void test01540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01540");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema11 = schema9.maxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.externalDocs(externalDocumentation28);
        schema25.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema25.not(schema36);
        schema21.setNot(schema25);
        schema21.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema42 = schema21.minItems((java.lang.Integer) 1);
        java.lang.String str43 = schema21.getFormat();
        java.lang.String str44 = schema21.getDescription();
        schema21.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema21);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        java.lang.Integer int56 = linkArraySchema53.getMaxProperties();
        boolean boolean57 = schema50.equals((java.lang.Object) linkArraySchema53);
        io.swagger.oas.models.media.Discriminator discriminator58 = linkArraySchema53.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray59 = linkArraySchema53.getDefault();
        java.math.BigDecimal bigDecimal60 = linkArraySchema53.getMultipleOf();
        linkArraySchema53.setMinProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema53.type("#/components/schemas/");
        schema64.setMinItems((java.lang.Integer) 100);
        schema21.setDefault((java.lang.Object) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(discriminator58);
        org.junit.Assert.assertNull(linkArray59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01541");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMultipleOf(bigDecimal12);
        io.swagger.oas.models.media.Schema schema15 = schema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.minLength((java.lang.Integer) 10);
        schema17.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01542");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        io.swagger.oas.models.media.Discriminator discriminator13 = null;
        schema10.setDiscriminator(discriminator13);
        java.lang.Integer int15 = schema10.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01543");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.maxLength((java.lang.Integer) 1);
        java.lang.Integer int12 = schema11.getMaxItems();
        io.swagger.oas.models.media.Schema schema14 = schema11.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema11.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str17 = schema16.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test01544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01544");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        schema24.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test01545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01545");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean29 = schema23.getDeprecated();
        java.lang.Integer int30 = schema23.getMinLength();
        schema23.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema34.externalDocs(externalDocumentation35);
        schema34.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01546");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        schema22.setFormat("");
        java.lang.Object obj25 = schema22.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(obj25);
    }

    @Test
    public void test01547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01547");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        io.swagger.oas.models.media.Schema schema30 = schema14.nullable((java.lang.Boolean) true);
        schema14.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema34 = schema14.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema14.maximum(bigDecimal35);
        java.lang.String str37 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema39 = schema36.minProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = null;
        schema36.setMultipleOf(bigDecimal40);
        io.swagger.oas.models.media.Schema schema43 = schema36.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema36.minimum(bigDecimal44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01548");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        java.lang.Integer int25 = schema2.getMaxProperties();
        java.lang.String str26 = schema2.getPattern();
        io.swagger.oas.models.media.Schema schema28 = schema2.name("hi!");
        java.util.List<java.lang.String> strList29 = schema28.getRequired();
        java.lang.Boolean boolean30 = schema28.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "#/components/schemas/" + "'", str26, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01549");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema19 = schema13.addRequiredItem("hi!");
        java.math.BigDecimal bigDecimal20 = null;
        schema13.setMaximum(bigDecimal20);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01550");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = schema13.format("hi!");
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema17.multipleOf(bigDecimal18);
        io.swagger.oas.models.media.Schema schema20 = schema17.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(schema20);
    }

    @Test
    public void test01551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01551");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int31 = schema28.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test01552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01552");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        schema10.setType("");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema10.getProperties();
        io.swagger.oas.models.media.Schema schema20 = schema10.deprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01553");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema26.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        java.lang.String[] strArray45 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        io.swagger.oas.models.media.Schema schema48 = schema43.required((java.util.List<java.lang.String>) strList46);
        schema28.setRequired((java.util.List<java.lang.String>) strList46);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        java.math.BigDecimal bigDecimal65 = schema63.getMaximum();
        java.lang.Boolean boolean66 = schema63.getExclusiveMinimum();
        java.lang.String str67 = schema63.getDescription();
        io.swagger.oas.models.media.Schema schema68 = schema28.additionalProperties(schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        java.lang.Integer int72 = schema71.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        java.lang.Integer int76 = linkArraySchema73.getMaxProperties();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema73.readOnly((java.lang.Boolean) false);
        schema71.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema73);
        java.lang.Object obj80 = schema71.getExample();
        io.swagger.oas.models.media.Discriminator discriminator81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema71.discriminator(discriminator81);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = null;
        schema71.setProperties(strMap83);
        io.swagger.oas.models.media.Schema schema86 = schema71.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema88 = schema86.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema89 = schema28.example((java.lang.Object) schema88);
        java.lang.Integer int90 = schema89.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(bigDecimal65);
        org.junit.Assert.assertNull(boolean66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(obj80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(int90);
    }

    @Test
    public void test01554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01554");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int20 = schema17.getMinLength();
        java.lang.Integer int21 = schema17.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNull(int21);
    }

    @Test
    public void test01555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01555");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        schema16.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema16.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = schema39.getExternalDocs();
        schema39.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(externalDocumentation40);
    }

    @Test
    public void test01556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01556");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema28);
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        io.swagger.oas.annotations.links.Link link32 = null;
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] { link32 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        io.swagger.oas.annotations.links.Link[][] linkArray36 = new io.swagger.oas.annotations.links.Link[][] { linkArray30, linkArray33 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList37 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList37, linkArray36);
        schema29.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList37);
        schema12.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema42 = schema29.description("#/components/schemas/");
        schema29.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema29.setExternalDocs(externalDocumentation45);
        java.lang.String str47 = schema29.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test01557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01557");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        schema11.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema11.not(schema22);
        java.math.BigDecimal bigDecimal24 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        schema22.setExample((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema41);
        java.lang.Integer int43 = schema41.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int43);
    }

    @Test
    public void test01558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01558");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.minLength((java.lang.Integer) (-1));
        java.lang.String str19 = schema18.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01559");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema13.minLength((java.lang.Integer) 10);
        schema18.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01560");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema schema21 = schema19.exclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = null;
        schema19.setMinimum(bigDecimal22);
        io.swagger.oas.models.media.Schema schema25 = schema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = schema36.getExtensions();
        io.swagger.oas.models.media.XML xML38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema36.xml(xML38);
        schema36.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList42 = schema36.getRequired();
        io.swagger.oas.models.media.Schema schema44 = schema36.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema45 = schema25.additionalProperties(schema36);
        schema36.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01561");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.String str14 = schema11.getDescription();
        io.swagger.oas.models.media.Schema schema16 = schema11.maxProperties((java.lang.Integer) 10);
        schema16.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema16.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01562");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList16 = schema10.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        schema19.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema27 = schema19.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean32 = schema27.getReadOnly();
        schema10.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Schema schema35 = schema10.minLength((java.lang.Integer) 100);
        schema10.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test01563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01563");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        schema23.setMinItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01564");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = null;
        schema14.setMinimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema14.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema28.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01565");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Discriminator discriminator15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema6.discriminator(discriminator15);
        schema6.setMinItems((java.lang.Integer) 0);
        java.lang.Class<?> wildcardClass19 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01566");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01567");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        schema18.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema18.addRequiredItem("");
        schema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema18.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        java.math.BigDecimal bigDecimal43 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        java.lang.Integer int52 = linkArraySchema49.getMaxProperties();
        boolean boolean53 = schema46.equals((java.lang.Object) linkArraySchema49);
        io.swagger.oas.models.media.Discriminator discriminator54 = linkArraySchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema49.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema49.nullable((java.lang.Boolean) false);
        schema37.setExample((java.lang.Object) schema58);
        schema18.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = schema58.additionalProperties(schema63);
        boolean boolean70 = schema13.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema72 = schema58.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int82 = schema81.getMaxItems();
        schema81.addExtension("", (java.lang.Object) (short) -1);
        schema81.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema89 = schema81.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema81.multipleOf(bigDecimal90);
        java.math.BigDecimal bigDecimal92 = null;
        io.swagger.oas.models.media.Schema schema93 = schema81.maximum(bigDecimal92);
        io.swagger.oas.models.media.Schema schema94 = schema72.not(schema81);
        schema81.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test01568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01568");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        schema8.setUniqueItems((java.lang.Boolean) true);
        java.lang.String str17 = schema8.getPattern();
        io.swagger.oas.models.media.XML xML18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema8.xml(xML18);
        java.lang.String str20 = schema8.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "#/components/schemas/" + "'", str17, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01569");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList25 = linkArraySchema15.getEnum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        java.lang.String[] strArray42 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        io.swagger.oas.models.media.Schema schema45 = schema40.required((java.util.List<java.lang.String>) strList43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMaxItems();
        schema55.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = null;
        schema55.setExtensions(strMap60);
        io.swagger.oas.models.media.Schema schema62 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema55);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema40.properties(strMap63);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = schema40.getExtensions();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema15.additionalProperties(schema40);
        java.math.BigDecimal bigDecimal67 = linkArraySchema15.getMultipleOf();
        linkArraySchema15.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(linkArrayList25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(bigDecimal67);
    }

    @Test
    public void test01570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01570");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Schema schema51 = schema49.readOnly((java.lang.Boolean) false);
        schema51.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01571");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema39.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        java.lang.Integer int47 = linkArraySchema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema59 = schema49.additionalProperties(schema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = schema49.getExternalDocs();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema49.xml(xML61);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.externalDocs(externalDocumentation68);
        schema65.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema73 = schema65.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema62.additionalProperties(schema65);
        io.swagger.oas.models.media.Schema schema76 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema43.additionalProperties(schema76);
        io.swagger.oas.models.media.Schema schema79 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema43.discriminator(discriminator80);
        io.swagger.oas.models.media.Schema schema83 = schema43.minItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01572");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.maxProperties((java.lang.Integer) 1);
        schema9.setMaxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
    }

    @Test
    public void test01573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01573");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema52.discriminator(discriminator53);
        schema54.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test01574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01574");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        java.lang.Integer int9 = schema2.getMaxLength();
        schema2.setMaxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean12 = schema2.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        schema21.addExtension("", (java.lang.Object) (short) -1);
        schema21.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.$ref("*/*");
        io.swagger.oas.models.media.Schema schema33 = schema31.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.discriminator(discriminator34);
        io.swagger.oas.models.media.Schema schema37 = schema31.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema schema47 = schema45.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int48 = schema47.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.externalDocs(externalDocumentation54);
        schema51.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema51.not(schema62);
        schema47.setNot(schema51);
        java.lang.String str65 = schema47.getFormat();
        io.swagger.oas.models.media.Schema schema67 = schema47.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema69 = schema47.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema77 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema79 = linkArraySchema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML80 = null;
        linkArraySchema77.setXml(xML80);
        schema72.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema77);
        java.lang.Boolean boolean83 = schema72.getDeprecated();
        io.swagger.oas.models.media.Schema schema85 = schema72.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str86 = schema85.getTitle();
        java.util.List<java.lang.String> strList87 = schema85.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema89 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema91 = linkArraySchema89.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema93 = schema91.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema94 = schema93.getAdditionalProperties();
        schema85.addExtension("", (java.lang.Object) schema93);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = schema85.getExtensions();
        schema69.setExtensions(strMap96);
        schema37.setExtensions(strMap96);
        schema2.setExtensions(strMap96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNull(strList87);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(schema94);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test01575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01575");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema8.pattern("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema schema28 = schema26.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int29 = schema28.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        schema32.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema32.not(schema43);
        schema28.setNot(schema32);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema28.externalDocs(externalDocumentation46);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.properties(strMap48);
        java.math.BigDecimal bigDecimal50 = schema49.getMaximum();
        io.swagger.oas.models.media.Schema schema51 = schema18.addProperties("hi!", schema49);
        io.swagger.oas.models.media.Schema schema53 = schema18.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema55 = schema18.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01576");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema0.setMaxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema0.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal9 = linkArraySchema0.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(bigDecimal9);
    }

    @Test
    public void test01577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01577");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema16.format("*/*");
        java.lang.Integer int35 = schema16.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema16.addRequiredItem("hi!");
        schema39.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        schema39.setDiscriminator(discriminator42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01578");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMaxItems();
        schema26.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        java.lang.String str39 = schema34.getFormat();
        io.swagger.oas.models.media.Schema schema41 = schema34.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema26.addProperties("#/components/schemas/", schema41);
        java.math.BigDecimal bigDecimal43 = schema26.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = schema13.example((java.lang.Object) bigDecimal43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        schema53.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema53.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema61.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.maximum(bigDecimal66);
        schema13.setExample((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema schema70 = schema13.addRequiredItem("*/*");
        schema70.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
    }

    @Test
    public void test01579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01579");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Object obj46 = schema39.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj46);
    }

    @Test
    public void test01580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01580");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        java.lang.Integer int11 = linkArraySchema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema16.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        io.swagger.oas.models.media.Schema schema33 = schema29.externalDocs(externalDocumentation32);
        schema29.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema37 = schema29.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = schema37.getExtensions();
        io.swagger.oas.models.media.XML xML39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema37.xml(xML39);
        schema37.setExclusiveMaximum((java.lang.Boolean) true);
        schema16.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema45 = schema16.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema16.pattern("");
        schema13.setAdditionalProperties(schema47);
        java.lang.Boolean boolean49 = schema13.getUniqueItems();
        schema5.setNot(schema13);
        io.swagger.oas.models.media.Schema schema52 = schema13.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean53 = schema13.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(boolean53);
    }

    @Test
    public void test01581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01581");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = null;
        schema13.setProperties(strMap16);
        java.lang.Integer int18 = schema13.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema13.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
    }

    @Test
    public void test01582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01582");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.math.BigDecimal bigDecimal4 = null;
        linkArraySchema0.setMinimum(bigDecimal4);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema8.not(schema19);
        schema19.setUniqueItems((java.lang.Boolean) false);
        schema19.setPattern("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        java.lang.String str32 = schema27.getFormat();
        io.swagger.oas.models.media.Schema schema34 = schema27.description("#/components/schemas/");
        schema19.setDefault((java.lang.Object) "#/components/schemas/");
        java.lang.String str36 = schema19.getFormat();
        linkArraySchema0.setAdditionalProperties(schema19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        linkArraySchema0.setExternalDocs(externalDocumentation38);
        java.lang.Integer int40 = linkArraySchema0.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(int40);
    }

    @Test
    public void test01583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01583");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        io.swagger.oas.models.media.Schema schema27 = schema23.getNot();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = schema34.getExternalDocs();
        java.lang.Integer int38 = schema34.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        schema42.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema42.not(schema53);
        io.swagger.oas.models.media.Schema schema55 = schema34.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        io.swagger.oas.models.media.Schema schema57 = schema53.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema57.minLength((java.lang.Integer) 0);
        schema59.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean62 = schema59.getNullable();
        io.swagger.oas.models.media.Schema schema64 = schema59.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema64.setDeprecated((java.lang.Boolean) false);
        schema23.setExample((java.lang.Object) schema64);
        java.lang.Integer int68 = schema23.getMinItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(externalDocumentation37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int68);
    }

    @Test
    public void test01584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01584");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        linkArraySchema5.setMaxProperties((java.lang.Integer) 1);
        linkArraySchema5.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01585");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = linkArraySchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(externalDocumentation7);
    }

    @Test
    public void test01586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01586");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 0);
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema12.example((java.lang.Object) schema30);
        schema37.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema41 = schema37.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal42 = null;
        schema37.setMaximum(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01587");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema23.nullable((java.lang.Boolean) false);
        java.lang.Boolean boolean27 = schema23.getUniqueItems();
        io.swagger.oas.models.media.Schema schema29 = schema23.minItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01588");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01589");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDescription("hi!");
        schema2.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
    }

    @Test
    public void test01590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01590");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema20.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema41 = schema33.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        schema20.addExtension("", (java.lang.Object) true);
        schema16.addExtension("*/*", (java.lang.Object) "");
        schema16.setMaxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test01591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01591");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int71 = schema70.getMaxItems();
        schema70.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema70.getExtensions();
        schema39.setExample((java.lang.Object) schema70);
        io.swagger.oas.models.media.Schema schema78 = schema70.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal79 = schema78.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(bigDecimal79);
    }

    @Test
    public void test01592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01592");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.lang.String str21 = schema18.getType();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = schema28.getExternalDocs();
        java.lang.Integer int32 = schema28.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema48 = schema36.not(schema47);
        io.swagger.oas.models.media.Schema schema49 = schema28.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema47);
        io.swagger.oas.models.media.Schema schema51 = schema47.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema53 = schema51.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema60.not(schema67);
        java.lang.String str69 = schema60.getType();
        io.swagger.oas.models.media.Discriminator discriminator70 = schema60.getDiscriminator();
        java.math.BigDecimal bigDecimal71 = schema60.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema85 = schema81.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema78.not(schema85);
        java.lang.String[] strArray88 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList89 = new java.util.ArrayList<java.lang.String>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList89, strArray88);
        io.swagger.oas.models.media.Schema schema91 = schema86.required((java.util.List<java.lang.String>) strList89);
        schema60.setRequired((java.util.List<java.lang.String>) strList89);
        schema53.setRequired((java.util.List<java.lang.String>) strList89);
        java.util.List<java.lang.String> strList94 = schema53.getRequired();
        io.swagger.oas.models.media.Schema schema95 = schema18.required(strList94);
        io.swagger.oas.models.media.Schema schema97 = schema18.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema99 = schema97.minLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(externalDocumentation31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNull(bigDecimal71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test01593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01593");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01594");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        schema24.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        java.lang.Class<?> wildcardClass54 = schema53.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test01595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01595");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        schema26.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01596");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01597");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.String str22 = linkArraySchema15.toString();
        linkArraySchema15.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        linkArraySchema15.addEnumItemObject(linkArray25);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema31.not(schema42);
        java.math.BigDecimal bigDecimal44 = schema42.getMaximum();
        java.lang.Boolean boolean45 = schema42.getExclusiveMinimum();
        java.lang.String str46 = schema42.getDescription();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        schema42.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema15.required((java.util.List<java.lang.String>) strList52);
        java.lang.Boolean boolean56 = linkArraySchema15.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        linkArraySchema15.setDiscriminator(discriminator57);
        java.math.BigDecimal bigDecimal59 = null;
        linkArraySchema15.setMultipleOf(bigDecimal59);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(boolean56);
    }

    @Test
    public void test01598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01598");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        schema35.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema43 = schema35.maxProperties((java.lang.Integer) 0);
        schema35.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema47 = schema35.addRequiredItem("");
        schema35.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal50 = schema35.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        java.math.BigDecimal bigDecimal59 = schema53.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        io.swagger.oas.models.media.Discriminator discriminator70 = linkArraySchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema65.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema65.nullable((java.lang.Boolean) false);
        schema53.setExample((java.lang.Object) schema74);
        io.swagger.oas.models.media.XML xML76 = null;
        io.swagger.oas.models.media.Schema schema77 = schema74.xml(xML76);
        io.swagger.oas.models.media.Schema schema78 = schema35.not(schema77);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.externalDocs(externalDocumentation84);
        io.swagger.oas.models.media.Schema schema87 = schema85.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema85.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator90 = null;
        schema89.setDiscriminator(discriminator90);
        java.lang.Boolean boolean92 = schema89.getReadOnly();
        io.swagger.oas.models.media.Schema schema93 = schema35.additionalProperties(schema89);
        java.util.List<java.lang.String> strList94 = schema93.getRequired();
        io.swagger.oas.models.media.Schema schema95 = schema32.required(strList94);
        java.lang.Object obj96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema32.example(obj96);
        schema97.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(boolean92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01599");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.minItems((java.lang.Integer) 10);
        linkArraySchema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema22 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema23.readOnly((java.lang.Boolean) false);
        linkArraySchema23.setPattern("");
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema23.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.minProperties((java.lang.Integer) 1);
        schema22.setNot(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        java.lang.String str43 = schema38.getFormat();
        schema38.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema38.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        java.lang.String str55 = schema50.getFormat();
        schema50.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema71);
        io.swagger.oas.annotations.links.Link[] linkArray73 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray73);
        io.swagger.oas.annotations.links.Link link75 = null;
        io.swagger.oas.annotations.links.Link[] linkArray76 = new io.swagger.oas.annotations.links.Link[] { link75 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap78 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        io.swagger.oas.annotations.links.Link[][] linkArray79 = new io.swagger.oas.annotations.links.Link[][] { linkArray73, linkArray76 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList80 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList80, linkArray79);
        schema72.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema50.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        schema47.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema47.properties(strMap85);
        io.swagger.oas.models.media.Schema schema88 = schema47.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema90 = schema47.readOnly((java.lang.Boolean) true);
        java.lang.String str91 = schema47.getDescription();
        schema32.setExample((java.lang.Object) schema47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(linkArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(linkArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(linkArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test01600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01600");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema2.type("hi!");
        io.swagger.oas.models.media.XML xML14 = null;
        schema2.setXml(xML14);
        io.swagger.oas.models.media.XML xML16 = null;
        schema2.setXml(xML16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01601");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        java.lang.Object obj17 = schema14.getExample();
        io.swagger.oas.models.media.Schema schema19 = schema14.maxItems((java.lang.Integer) (-1));
        schema19.setFormat("");
        schema19.setMinProperties((java.lang.Integer) 0);
        schema19.setDeprecated((java.lang.Boolean) false);
        schema19.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Class<?> wildcardClass28 = schema19.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test01602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01602");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema28);
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        io.swagger.oas.annotations.links.Link link32 = null;
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] { link32 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        io.swagger.oas.annotations.links.Link[][] linkArray36 = new io.swagger.oas.annotations.links.Link[][] { linkArray30, linkArray33 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList37 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList37, linkArray36);
        schema29.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList37);
        schema12.setExample((java.lang.Object) schema29);
        java.lang.Boolean boolean41 = schema29.getExclusiveMaximum();
        schema29.setWriteOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(boolean41);
    }

    @Test
    public void test01603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01603");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.title("");
        java.lang.Boolean boolean10 = schema2.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema12 = schema2.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setNullable((java.lang.Boolean) false);
        schema2.setName("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01604");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        io.swagger.oas.annotations.links.Link link27 = null;
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] { link27 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link[][] linkArray31 = new io.swagger.oas.annotations.links.Link[][] { linkArray25, linkArray28 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList32 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList32, linkArray31);
        schema24.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        schema2.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        io.swagger.oas.models.media.XML xML36 = null;
        schema2.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        java.lang.Integer int48 = linkArraySchema45.getMaxProperties();
        boolean boolean49 = schema42.equals((java.lang.Object) linkArraySchema45);
        io.swagger.oas.models.media.Discriminator discriminator50 = linkArraySchema45.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray51 = linkArraySchema45.getDefault();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema45.title("");
        schema53.setUniqueItems((java.lang.Boolean) false);
        schema39.setExample((java.lang.Object) schema53);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap57 = schema39.getProperties();
        schema39.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema61 = schema39.maxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(discriminator50);
        org.junit.Assert.assertNull(linkArray51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test01605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01605");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema23.not(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.minProperties((java.lang.Integer) 0);
        schema31.setMinLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal36 = schema31.getMultipleOf();
        io.swagger.oas.models.media.Schema schema38 = schema31.maxProperties((java.lang.Integer) 100);
        schema16.setNot(schema38);
        java.math.BigDecimal bigDecimal40 = schema38.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(bigDecimal36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal40);
    }

    @Test
    public void test01606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01606");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        schema2.setTitle("*/*");
        io.swagger.oas.models.media.Schema schema11 = schema2.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01607");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = null;
        schema2.setProperties(strMap10);
        io.swagger.oas.models.media.Schema schema13 = schema2.maxItems((java.lang.Integer) (-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = schema2.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strMap14);
    }

    @Test
    public void test01608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01608");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema5.minLength((java.lang.Integer) 0);
        schema11.setMinLength((java.lang.Integer) (-1));
        java.lang.String str14 = schema11.getPattern();
        java.lang.Class<?> wildcardClass15 = schema11.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "#/components/schemas/" + "'", str14, "#/components/schemas/");
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01609");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.XML xML17 = schema16.getXml();
        io.swagger.oas.models.media.Schema schema19 = schema16.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = schema16.getMultipleOf();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema16.minimum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(xML17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(bigDecimal20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01610");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01611");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        java.lang.String str9 = schema2.getDescription();
        schema2.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test01612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01612");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        java.lang.String str21 = schema18.getDescription();
        io.swagger.oas.models.media.Schema schema23 = schema18.uniqueItems((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal24 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema26 = schema23.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema33.not(schema40);
        java.lang.String[] strArray43 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        io.swagger.oas.models.media.Schema schema46 = schema41.required((java.util.List<java.lang.String>) strList44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema schema56 = schema54.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int57 = schema56.getMaxItems();
        schema56.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = null;
        schema56.setExtensions(strMap61);
        io.swagger.oas.models.media.Schema schema63 = schema41.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema56);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int73 = schema72.getMaxItems();
        schema72.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = schema72.getExtensions();
        schema41.setExtensions(strMap77);
        java.lang.Boolean boolean79 = schema41.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema81 = schema41.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema41.externalDocs(externalDocumentation82);
        io.swagger.oas.models.media.Schema schema84 = schema23.example((java.lang.Object) schema83);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList85 = schema84.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(int73);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(boolean79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(linkArrayList85);
    }

    @Test
    public void test01613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01613");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.lang.String str5 = schema4.toString();
        io.swagger.oas.models.media.Schema schema6 = schema4.getNot();
        schema4.setMinProperties((java.lang.Integer) 1);
        java.lang.Boolean boolean9 = schema4.getUniqueItems();
        io.swagger.oas.models.media.Discriminator discriminator10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema4.discriminator(discriminator10);
        schema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema15 = schema11.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema17 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str18 = schema17.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str5, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(schema6);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "#/components/schemas/" + "'", str18, "#/components/schemas/");
    }

    @Test
    public void test01614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01614");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = schema26.getProperties();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema53 = schema46.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema38.addProperties("#/components/schemas/", schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema58.not(schema69);
        schema69.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema54.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema69);
        java.lang.Boolean boolean74 = schema54.getReadOnly();
        io.swagger.oas.models.media.Schema schema76 = schema54.writeOnly((java.lang.Boolean) true);
        schema26.setNot(schema54);
        io.swagger.oas.models.media.Schema schema79 = schema54.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema81 = schema54.maxProperties((java.lang.Integer) 0);
        java.lang.Boolean boolean82 = schema81.getExclusiveMinimum();
        schema81.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(boolean74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean82);
    }

    @Test
    public void test01615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01615");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        io.swagger.oas.models.media.Schema schema19 = schema17.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema19.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01616");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        schema39.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema47 = schema39.nullable((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass48 = schema47.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test01617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01617");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema12 = schema10.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = schema10.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean15 = schema10.getReadOnly();
        schema10.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = schema10.getExternalDocs();
        io.swagger.oas.models.media.XML xML19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema10.xml(xML19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean15);
        org.junit.Assert.assertNull(externalDocumentation18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01618");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        java.lang.Object obj29 = schema28.getExample();
        io.swagger.oas.models.media.Schema schema31 = schema28.format("*/*");
        schema20.setDefault((java.lang.Object) "*/*");
        java.lang.Boolean boolean33 = schema20.getNullable();
        java.lang.String str34 = schema20.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(obj29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test01619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01619");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema26.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean29 = schema26.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
    }

    @Test
    public void test01620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01620");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema12 = schema2.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMinProperties();
        linkArraySchema15.setUniqueItems((java.lang.Boolean) false);
        schema2.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema23 = schema2.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01621");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        schema23.setFormat("*/*");
        java.lang.String str26 = schema23.getName();
        java.lang.Integer int27 = schema23.getMinLength();
        java.math.BigDecimal bigDecimal28 = schema23.getMaximum();
        schema23.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNull(bigDecimal28);
    }

    @Test
    public void test01622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01622");
        io.swagger.oas.models.media.Schema<java.lang.Object> objSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Object>();
    }

    @Test
    public void test01623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01623");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema32.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Discriminator discriminator35 = schema32.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(discriminator35);
    }

    @Test
    public void test01624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01624");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema5.xml(xML17);
        schema18.setUniqueItems((java.lang.Boolean) true);
        java.lang.Integer int21 = schema18.getMinItems();
        java.util.List<java.lang.String> strList22 = schema18.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test01625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01625");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema16.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema8.additionalProperties(schema25);
        schema25.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01626");
        io.swagger.oas.models.media.Schema<java.util.RandomAccess> randomAccessSchema0 = new io.swagger.oas.models.media.Schema<java.util.RandomAccess>();
        java.lang.Class<?> wildcardClass1 = randomAccessSchema0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test01627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01627");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = schema18.getExtensions();
        java.math.BigDecimal bigDecimal22 = schema18.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(bigDecimal22);
    }

    @Test
    public void test01628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01628");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        io.swagger.oas.models.media.Schema schema15 = schema11.readOnly((java.lang.Boolean) true);
        java.lang.String str16 = schema11.getDescription();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema11.externalDocs(externalDocumentation17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.multipleOf(bigDecimal19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal25 = null;
        schema22.setMultipleOf(bigDecimal25);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "#/components/schemas/" + "'", str16, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01629");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema4.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema4.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema4.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = schema16.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01630");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01631");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        schema16.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema25 = schema16.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema8.additionalProperties(schema25);
        io.swagger.oas.models.media.Schema schema28 = schema8.nullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01632");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        java.lang.Integer int18 = schema2.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema2.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = null;
        schema2.setMaximum(bigDecimal20);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema24.addProperties("#/components/schemas/", schema38);
        schema24.setDefault((java.lang.Object) (-1));
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        java.lang.Integer int48 = schema47.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        java.lang.Integer int52 = linkArraySchema49.getMaxProperties();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema49.readOnly((java.lang.Boolean) false);
        schema47.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema49);
        schema24.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema47);
        schema24.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema59 = schema2.example((java.lang.Object) schema24);
        java.math.BigDecimal bigDecimal60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema24.maximum(bigDecimal60);
        schema24.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test01633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01633");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        schema11.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema11.not(schema22);
        java.math.BigDecimal bigDecimal24 = schema22.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = schema27.getMaxLength();
        schema22.setExample((java.lang.Object) schema27);
        io.swagger.oas.models.media.Schema schema31 = schema27.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema33 = schema31.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema35 = schema31.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema35.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.maximum(bigDecimal38);
        io.swagger.oas.models.media.Schema schema41 = schema39.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setAdditionalProperties(schema41);
        java.math.BigDecimal bigDecimal43 = schema2.getMultipleOf();
        java.lang.Boolean boolean44 = schema2.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(bigDecimal24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test01634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01634");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.lang.Boolean boolean16 = schema8.getDeprecated();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        java.lang.Boolean boolean34 = schema31.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = schema31.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema8.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema37.not(schema38);
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.xml(xML40);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
    }

    @Test
    public void test01635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01635");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema5.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema20);
        linkArraySchema5.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema5.exclusiveMaximum((java.lang.Boolean) true);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList30 = null;
        linkArraySchema5.setEnum(linkArrayList30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01636");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema27 = schema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema34 = schema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema27.not(schema34);
        java.lang.String[] strArray37 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        io.swagger.oas.models.media.Schema schema40 = schema35.required((java.util.List<java.lang.String>) strList38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        io.swagger.oas.models.media.Schema schema50 = schema48.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int51 = schema50.getMaxItems();
        schema50.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = null;
        schema50.setExtensions(strMap55);
        io.swagger.oas.models.media.Schema schema57 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int67 = schema66.getMaxItems();
        schema66.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = schema66.getExtensions();
        schema35.setExtensions(strMap71);
        schema20.setExtensions(strMap71);
        io.swagger.oas.models.media.Schema schema75 = schema20.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema77 = schema75.name("");
        io.swagger.oas.models.media.Schema schema79 = schema77.uniqueItems((java.lang.Boolean) false);
        java.lang.String str80 = schema79.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(str80);
    }

    @Test
    public void test01637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01637");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        java.lang.Boolean boolean52 = schema47.getReadOnly();
        io.swagger.oas.models.media.Schema schema54 = schema47.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal55 = null;
        schema54.setMaximum(bigDecimal55);
        io.swagger.oas.models.media.Schema schema57 = schema43.addProperties("hi!", schema54);
        io.swagger.oas.models.media.Schema schema59 = schema57.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList60 = schema57.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(linkArrayList60);
    }

    @Test
    public void test01638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01638");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema37 = schema14.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = linkArraySchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema43.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema49);
        linkArraySchema43.setMaxProperties((java.lang.Integer) 1);
        linkArraySchema43.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema43.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema37.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema43);
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema43.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema43.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema43.maxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01639");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema22.not(schema29);
        io.swagger.oas.models.media.Schema schema32 = schema30.minProperties((java.lang.Integer) 0);
        schema30.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.additionalProperties(schema35);
        io.swagger.oas.models.media.Schema schema37 = schema12.example((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema39 = schema12.minProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01640");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        schema14.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.minItems((java.lang.Integer) 10);
        linkArraySchema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema22 = schema14.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema23.readOnly((java.lang.Boolean) false);
        linkArraySchema23.setPattern("");
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema23.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema34 = schema32.minProperties((java.lang.Integer) 1);
        schema22.setNot(schema32);
        java.lang.Boolean boolean36 = schema32.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01641");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema13.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.multipleOf(bigDecimal21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = schema20.getExternalDocs();
        java.lang.Integer int24 = schema20.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(externalDocumentation23);
        org.junit.Assert.assertNull(int24);
    }

    @Test
    public void test01642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01642");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        java.lang.Integer int18 = schema2.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema2.getDiscriminator();
        schema2.setExclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema2.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        java.lang.Integer int28 = linkArraySchema25.getMaxProperties();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema25.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema40 = schema30.additionalProperties(schema33);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = schema30.getExternalDocs();
        io.swagger.oas.models.media.XML xML42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema30.xml(xML42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        schema46.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema54 = schema46.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema43.additionalProperties(schema46);
        schema23.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema46);
        schema23.setUniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(externalDocumentation41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01643");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        java.lang.String str37 = schema36.getTitle();
        io.swagger.oas.models.media.Schema schema39 = schema36.title("hi!");
        io.swagger.oas.models.media.XML xML40 = null;
        schema36.setXml(xML40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema36.multipleOf(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01644");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        java.lang.String str29 = schema26.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        schema38.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema48.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.discriminator(discriminator51);
        io.swagger.oas.models.media.Schema schema54 = schema48.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        schema57.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema57.not(schema68);
        schema57.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean72 = schema57.getExclusiveMaximum();
        schema48.setDefault((java.lang.Object) schema57);
        schema48.setNullable((java.lang.Boolean) false);
        schema26.setDefault((java.lang.Object) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(boolean72);
    }

    @Test
    public void test01645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01645");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema11.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML16 = schema11.getXml();
        java.math.BigDecimal bigDecimal17 = null;
        schema11.setMaximum(bigDecimal17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(xML16);
    }

    @Test
    public void test01646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01646");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        java.lang.String str13 = linkArraySchema11.getName();
        linkArraySchema11.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxItems();
        schema24.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        java.lang.String str37 = schema32.getFormat();
        io.swagger.oas.models.media.Schema schema39 = schema32.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema24.addProperties("#/components/schemas/", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        schema44.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema56 = schema44.not(schema55);
        schema55.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema40.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema55);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.externalDocs(externalDocumentation65);
        java.lang.String str67 = schema62.getFormat();
        io.swagger.oas.models.media.Schema schema69 = schema62.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.deprecated((java.lang.Boolean) false);
        schema40.setNot(schema69);
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = schema40.getExtensions();
        linkArraySchema11.setExtensions(strMap73);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test01647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01647");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str53 = schema52.getDescription();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = schema52.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema55.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.annotations.links.Link[] linkArray60 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap61 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray60);
        schema59.addEnumItemObject(linkArray60);
        schema52.addEnumItemObject(linkArray60);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap64 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray60);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(linkArray60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test01648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01648");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        schema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema6.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal19 = schema18.getMaximum();
        java.lang.String str20 = schema18.get$ref();
        schema18.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        schema18.setExternalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema38);
        schema31.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema31.minLength((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal44 = schema43.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        java.lang.String str52 = schema47.getFormat();
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema47.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        schema60.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema68 = schema60.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = schema68.getExtensions();
        io.swagger.oas.models.media.XML xML70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema68.xml(xML70);
        schema68.setExclusiveMaximum((java.lang.Boolean) true);
        schema47.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema76 = schema47.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema78 = schema47.pattern("");
        java.lang.Integer int79 = schema47.getMinProperties();
        schema43.setAdditionalProperties(schema47);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema47.multipleOf(bigDecimal81);
        schema82.setMinProperties((java.lang.Integer) 1);
        schema18.setAdditionalProperties(schema82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(bigDecimal19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(int79);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01649");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        java.lang.Boolean boolean29 = schema26.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal30 = schema26.getMinimum();
        schema26.setDescription("");
        io.swagger.oas.models.media.Schema schema34 = schema26.writeOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean35 = schema26.getWriteOnly();
        schema26.setMinLength((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + true + "'", boolean35, true);
    }

    @Test
    public void test01650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01650");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        io.swagger.oas.models.media.XML xML31 = null;
        schema8.setXml(xML31);
        io.swagger.oas.models.media.XML xML33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema8.xml(xML33);
        schema8.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.Boolean boolean37 = schema8.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean37);
    }

    @Test
    public void test01651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01651");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList13 = null;
        linkArraySchema7.setEnum(linkArrayList13);
        linkArraySchema7.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema19.properties(strMap24);
        io.swagger.oas.models.media.Schema schema27 = schema25.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema7.additionalProperties(schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        schema40.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema40.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema40.multipleOf(bigDecimal49);
        io.swagger.oas.annotations.links.LinkParameters linkParameters51 = null;
        java.util.Map<java.lang.String, java.lang.String> strMap52 = io.swagger.jaxrs2.OperationParser.getLinkParameters(linkParameters51);
        schema40.setExample((java.lang.Object) linkParameters51);
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema7.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema40);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        schema57.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema65 = schema57.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = schema65.getExtensions();
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema65.xml(xML67);
        schema65.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList71 = schema65.getRequired();
        io.swagger.oas.models.media.Schema schema73 = schema65.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean74 = schema40.equals((java.lang.Object) schema65);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = schema40.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(externalDocumentation75);
    }

    @Test
    public void test01652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01652");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.maxProperties((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal21 = null;
        schema20.setMinimum(bigDecimal21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01653");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.lang.String str7 = schema6.getType();
        java.math.BigDecimal bigDecimal8 = null;
        schema6.setMinimum(bigDecimal8);
        java.lang.Class<?> wildcardClass10 = schema6.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test01654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01654");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        java.lang.String str21 = schema20.get$ref();
        io.swagger.oas.models.media.Schema schema23 = schema20.description("*/*");
        io.swagger.oas.models.media.Schema schema25 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema25.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(schema26);
    }

    @Test
    public void test01655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01655");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.String str22 = linkArraySchema15.toString();
        linkArraySchema15.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        linkArraySchema15.addEnumItemObject(linkArray25);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema31.not(schema42);
        java.math.BigDecimal bigDecimal44 = schema42.getMaximum();
        java.lang.Boolean boolean45 = schema42.getExclusiveMinimum();
        java.lang.String str46 = schema42.getDescription();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "hi!", "hi!" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        schema42.setRequired((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema15.required((java.util.List<java.lang.String>) strList52);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema15.maxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01656");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.XML xML39 = schema24.getXml();
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema24.multipleOf(bigDecimal40);
        java.lang.Integer int42 = schema24.getMaxItems();
        io.swagger.oas.models.media.Schema schema44 = schema24.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str45 = schema44.getName();
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema44.discriminator(discriminator46);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01657");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema2.getMultipleOf();
        schema2.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        io.swagger.oas.models.media.Schema schema51 = schema48.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema51.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema54 = schema2.example((java.lang.Object) schema53);
        schema54.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema59.externalDocs(externalDocumentation62);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation70 = null;
        io.swagger.oas.models.media.Schema schema71 = schema67.externalDocs(externalDocumentation70);
        io.swagger.oas.models.media.Schema schema73 = schema71.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema59.addProperties("#/components/schemas/", schema73);
        schema59.setDefault((java.lang.Object) (-1));
        schema59.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML79 = schema59.getXml();
        java.lang.Integer int80 = schema59.getMaxItems();
        schema59.setType("*/*");
        io.swagger.oas.models.media.Schema schema84 = schema59.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal90 = null;
        io.swagger.oas.models.media.Schema schema91 = schema89.multipleOf(bigDecimal90);
        io.swagger.oas.models.media.Schema schema93 = schema91.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema94 = schema84.additionalProperties(schema91);
        io.swagger.oas.models.media.Schema schema95 = schema54.additionalProperties(schema91);
        java.math.BigDecimal bigDecimal96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema91.minimum(bigDecimal96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(xML79);
        org.junit.Assert.assertNull(int80);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01658");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Discriminator discriminator5 = null;
        linkArraySchema0.setDiscriminator(discriminator5);
        linkArraySchema0.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test01659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01659");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        schema24.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema49 = schema24.$ref("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema49.properties(strMap50);
        java.lang.Boolean boolean52 = schema49.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(boolean52);
    }

    @Test
    public void test01660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01660");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setPattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema14.not(schema21);
        io.swagger.oas.annotations.links.Link[] linkArray23 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        io.swagger.oas.annotations.links.Link link25 = null;
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] { link25 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        io.swagger.oas.annotations.links.Link[][] linkArray29 = new io.swagger.oas.annotations.links.Link[][] { linkArray23, linkArray26 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList30 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList30, linkArray29);
        schema22.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList30);
        io.swagger.oas.models.media.Schema schema34 = schema22.maxLength((java.lang.Integer) (-1));
        java.lang.Boolean boolean35 = schema34.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema0.not(schema34);
        java.math.BigDecimal bigDecimal37 = schema36.getMultipleOf();
        java.lang.Integer int38 = schema36.getMaxItems();
        schema36.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(linkArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(linkArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(bigDecimal37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01661");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        io.swagger.oas.models.media.Schema schema44 = schema37.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema29.addProperties("#/components/schemas/", schema44);
        java.math.BigDecimal bigDecimal46 = schema44.getMinimum();
        io.swagger.oas.models.media.Schema schema47 = schema8.additionalProperties(schema44);
        schema44.setMinItems((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema44.getExtensions();
        schema44.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test01662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01662");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema54.exclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        schema54.setMaximum(bigDecimal57);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test01663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01663");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        java.lang.String str57 = schema52.getFormat();
        io.swagger.oas.models.media.Schema schema59 = schema52.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        schema59.setNot((io.swagger.oas.models.media.Schema) linkArraySchema65);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList71 = linkArraySchema65.getEnum();
        java.lang.String str72 = linkArraySchema65.toString();
        linkArraySchema65.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray75 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap76 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        linkArraySchema65.addEnumItemObject(linkArray75);
        schema45.addEnumItemObject(linkArray75);
        io.swagger.oas.models.media.Discriminator discriminator80 = schema45.getDiscriminator();
        schema45.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(linkArrayList71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str72, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(discriminator80);
    }

    @Test
    public void test01664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01664");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Boolean boolean44 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema46 = schema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema24.minProperties((java.lang.Integer) 100);
        java.lang.Boolean boolean49 = schema48.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema51 = schema48.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01665");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        schema26.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema33 = schema26.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        io.swagger.oas.models.media.Schema schema43 = schema41.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema45 = schema41.pattern("hi!");
        schema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01666");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema5.xml(xML17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema32 = schema21.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema33.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        schema41.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema48 = schema38.additionalProperties(schema41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema48.example((java.lang.Object) schema51);
        io.swagger.oas.models.media.Schema schema58 = schema48.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema48.xml(xML59);
        boolean boolean61 = schema32.equals((java.lang.Object) xML59);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test01667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01667");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema16 = schema13.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap17 = schema13.getProperties();
        io.swagger.oas.models.media.Schema schema19 = schema13.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator20 = null;
        schema13.setDiscriminator(discriminator20);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link25 = null;
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] { link25 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        linkArraySchema22.addEnumItemObject(linkArray26);
        schema13.addEnumItemObject(linkArray26);
        schema13.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(schema16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test01668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01668");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.multipleOf(bigDecimal29);
        schema30.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema34 = schema30.exclusiveMaximum((java.lang.Boolean) false);
        schema30.setMaxProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01669");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        schema14.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema14.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int21 = schema14.getMaxProperties();
        java.lang.Integer int22 = schema14.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema30.getExternalDocs();
        java.lang.Integer int34 = schema30.getMinLength();
        io.swagger.oas.models.media.Schema schema36 = schema30.minItems((java.lang.Integer) 10);
        schema30.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema14.addProperties("", schema30);
        io.swagger.oas.models.media.Schema schema41 = schema14.deprecated((java.lang.Boolean) false);
        java.lang.String str42 = schema14.getPattern();
        io.swagger.oas.models.media.Discriminator discriminator43 = schema14.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "#/components/schemas/" + "'", str42, "#/components/schemas/");
        org.junit.Assert.assertNull(discriminator43);
    }

    @Test
    public void test01670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01670");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        boolean boolean27 = schema20.equals((java.lang.Object) linkArraySchema23);
        io.swagger.oas.models.media.Discriminator discriminator28 = linkArraySchema23.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator29 = null;
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema23.discriminator(discriminator29);
        java.math.BigDecimal bigDecimal31 = schema30.getMinimum();
        schema13.addExtension("*/*", (java.lang.Object) schema30);
        schema30.setPattern("");
        schema30.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema30.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(bigDecimal31);
    }

    @Test
    public void test01671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01671");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        java.lang.Integer int12 = linkArraySchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema9.readOnly((java.lang.Boolean) false);
        schema8.setNot(schema14);
        java.util.List<java.lang.String> strList16 = schema8.getRequired();
        schema8.setDeprecated((java.lang.Boolean) false);
        schema8.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema8.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test01672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01672");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap34 = null;
        schema33.setProperties(strMap34);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        schema38.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema46 = schema38.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = schema46.getExtensions();
        io.swagger.oas.models.media.XML xML48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema46.xml(xML48);
        io.swagger.oas.models.media.Schema schema51 = schema49.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema49.getNot();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap53 = schema49.getProperties();
        io.swagger.oas.models.media.Schema schema55 = schema49.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator56 = null;
        schema49.setDiscriminator(discriminator56);
        io.swagger.oas.models.media.Schema schema58 = schema33.additionalProperties(schema49);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(schema52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test01673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01673");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.discriminator(discriminator16);
        schema17.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema17.setMinLength((java.lang.Integer) 1);
        schema17.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01674");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        schema39.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema39.minItems((java.lang.Integer) 0);
        java.lang.String str46 = schema39.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test01675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01675");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal27 = schema26.getMultipleOf();
        schema26.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str30 = schema26.getTitle();
        schema26.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test01676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01676");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema23.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        io.swagger.oas.models.media.Schema schema37 = schema35.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema35.getExternalDocs();
        java.lang.Integer int39 = schema35.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        io.swagger.oas.models.media.Schema schema56 = schema35.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema54);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema56.multipleOf(bigDecimal57);
        io.swagger.oas.models.media.Schema schema60 = schema56.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str61 = schema56.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap62 = schema56.getProperties();
        io.swagger.oas.models.media.Schema schema63 = schema28.properties(strMap62);
        schema28.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01677");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList15 = schema12.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        schema12.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema12.getPattern();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        java.lang.String str29 = schema24.getFormat();
        java.math.BigDecimal bigDecimal30 = schema24.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        java.lang.Integer int39 = linkArraySchema36.getMaxProperties();
        boolean boolean40 = schema33.equals((java.lang.Object) linkArraySchema36);
        io.swagger.oas.models.media.Discriminator discriminator41 = linkArraySchema36.getDiscriminator();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema36.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema36.nullable((java.lang.Boolean) false);
        schema24.setExample((java.lang.Object) schema45);
        schema24.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema50 = schema24.uniqueItems((java.lang.Boolean) true);
        schema50.setPattern("");
        schema50.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema50.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema50.maximum(bigDecimal57);
        java.lang.Integer int59 = schema50.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        io.swagger.oas.models.media.Discriminator discriminator70 = linkArraySchema65.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema71 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema65.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema71);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation82 = schema79.getExternalDocs();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        schema79.setRequired((java.util.List<java.lang.String>) strList88);
        linkArraySchema71.setRequired((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema92 = schema50.required((java.util.List<java.lang.String>) strList88);
        io.swagger.oas.models.media.Schema schema93 = schema12.required((java.util.List<java.lang.String>) strList88);
        schema93.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.math.BigDecimal bigDecimal96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema93.maximum(bigDecimal96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(linkArrayList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "#/components/schemas/" + "'", str21, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(discriminator41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(discriminator70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(externalDocumentation82);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01678");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        io.swagger.oas.models.media.Schema schema15 = schema13.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
    }

    @Test
    public void test01679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01679");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        io.swagger.oas.models.media.Schema schema31 = schema27.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str32 = schema27.getTitle();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        java.lang.String str40 = schema35.getFormat();
        schema35.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema35.pattern("");
        io.swagger.oas.models.media.Schema schema46 = schema44.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema48 = schema44.minLength((java.lang.Integer) 100);
        java.lang.String str49 = schema44.getType();
        schema27.setAdditionalProperties(schema44);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test01680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01680");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01681");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema2.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.discriminator(discriminator50);
        schema47.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str54 = schema47.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test01682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01682");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        linkArraySchema15.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML27 = null;
        linkArraySchema24.setXml(xML27);
        java.lang.String str29 = linkArraySchema24.getFormat();
        java.lang.String str30 = linkArraySchema24.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int40 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        schema39.setNot(schema43);
        schema39.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema60 = schema39.minItems((java.lang.Integer) 1);
        schema39.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema24.not(schema39);
        linkArraySchema15.setExample((java.lang.Object) schema63);
        java.math.BigDecimal bigDecimal65 = linkArraySchema15.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(bigDecimal65);
    }

    @Test
    public void test01683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01683");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        io.swagger.oas.annotations.links.Link[] linkArray44 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray44);
        io.swagger.oas.annotations.links.Link link46 = null;
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] { link46 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap49 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link[][] linkArray50 = new io.swagger.oas.annotations.links.Link[][] { linkArray44, linkArray47 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList51, linkArray50);
        schema43.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        io.swagger.oas.models.media.Schema schema55 = schema43.maxLength((java.lang.Integer) (-1));
        schema28.setAdditionalProperties(schema43);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema28.minimum(bigDecimal57);
        io.swagger.oas.models.media.Discriminator discriminator59 = schema58.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.externalDocs(externalDocumentation65);
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int69 = schema68.getMaxItems();
        schema68.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.externalDocs(externalDocumentation79);
        java.lang.String str81 = schema76.getFormat();
        io.swagger.oas.models.media.Schema schema83 = schema76.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("#/components/schemas/", schema83);
        java.lang.Boolean boolean85 = schema68.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema87 = schema68.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema89 = schema68.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema91 = schema89.uniqueItems((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal92 = schema89.getMaximum();
        schema58.setAdditionalProperties(schema89);
        io.swagger.oas.models.media.Schema schema94 = schema58.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(linkArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(bigDecimal92);
        org.junit.Assert.assertNull(schema94);
    }

    @Test
    public void test01684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01684");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        java.lang.Boolean boolean25 = schema18.getDeprecated();
        io.swagger.oas.models.media.Schema schema27 = schema18.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema27.exclusiveMaximum((java.lang.Boolean) true);
        schema27.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean25 + "' != '" + true + "'", boolean25, true);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01685");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList12 = schema11.getEnum();
        java.lang.String str13 = schema11.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(linkArrayList12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test01686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01686");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean20 = schema2.getWriteOnly();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema2.maximum(bigDecimal21);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        schema26.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema34 = schema26.maxProperties((java.lang.Integer) 0);
        schema26.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema38 = schema26.addRequiredItem("");
        schema26.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal41 = schema26.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema44.externalDocs(externalDocumentation47);
        java.lang.String str49 = schema44.getFormat();
        java.math.BigDecimal bigDecimal50 = schema44.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        java.lang.Integer int59 = linkArraySchema56.getMaxProperties();
        boolean boolean60 = schema53.equals((java.lang.Object) linkArraySchema56);
        io.swagger.oas.models.media.Discriminator discriminator61 = linkArraySchema56.getDiscriminator();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema56.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema56.nullable((java.lang.Boolean) false);
        schema44.setExample((java.lang.Object) schema65);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema65.xml(xML67);
        io.swagger.oas.models.media.Schema schema69 = schema26.not(schema68);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        io.swagger.oas.models.media.Schema schema84 = schema80.externalDocs(externalDocumentation83);
        io.swagger.oas.models.media.Schema schema86 = schema84.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema87 = schema72.addProperties("#/components/schemas/", schema86);
        io.swagger.oas.models.media.Schema schema88 = schema68.additionalProperties(schema87);
        java.lang.Boolean boolean89 = schema68.getExclusiveMaximum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList90 = schema68.getEnum();
        io.swagger.oas.models.media.Schema schema91 = schema68.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema93 = schema68.writeOnly((java.lang.Boolean) true);
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation95 = null;
        io.swagger.oas.models.media.Schema schema96 = schema2.externalDocs(externalDocumentation95);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema2.externalDocs(externalDocumentation97);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(bigDecimal50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(discriminator61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNull(linkArrayList90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test01687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01687");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        io.swagger.oas.models.media.Discriminator discriminator15 = schema13.getDiscriminator();
        schema13.setMinLength((java.lang.Integer) 10);
        schema13.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(discriminator15);
    }

    @Test
    public void test01688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01688");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.Boolean boolean14 = schema11.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01689");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int40 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        schema39.setNot(schema43);
        schema39.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema60 = schema39.minItems((java.lang.Integer) 1);
        java.lang.String str61 = schema39.getFormat();
        java.lang.String str62 = schema39.getDescription();
        schema29.setExample((java.lang.Object) str62);
        java.lang.String str64 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema66 = schema29.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema29.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
    }

    @Test
    public void test01690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01690");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        java.lang.Class<?> wildcardClass31 = schema28.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01691");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema schema33 = schema31.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int34 = schema33.getMaxItems();
        schema33.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        io.swagger.oas.models.media.Schema schema48 = schema41.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema33.addProperties("#/components/schemas/", schema48);
        java.math.BigDecimal bigDecimal50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema48.minimum(bigDecimal50);
        io.swagger.oas.models.media.Schema schema53 = schema48.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = schema60.getExternalDocs();
        java.lang.Integer int64 = schema60.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        schema68.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema68.not(schema79);
        io.swagger.oas.models.media.Schema schema81 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema79);
        java.math.BigDecimal bigDecimal82 = null;
        io.swagger.oas.models.media.Schema schema83 = schema81.multipleOf(bigDecimal82);
        io.swagger.oas.models.media.Schema schema85 = schema81.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str86 = schema81.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap87 = schema81.getProperties();
        io.swagger.oas.models.media.Schema schema88 = schema53.properties(strMap87);
        io.swagger.oas.models.media.Schema schema89 = schema24.properties(strMap87);
        schema89.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(externalDocumentation63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test01692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01692");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        io.swagger.oas.models.media.Schema schema17 = schema13.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int27 = schema26.getMaxItems();
        schema26.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        java.lang.String str39 = schema34.getFormat();
        io.swagger.oas.models.media.Schema schema41 = schema34.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema26.addProperties("#/components/schemas/", schema41);
        java.math.BigDecimal bigDecimal43 = schema26.getMultipleOf();
        io.swagger.oas.models.media.Schema schema44 = schema13.example((java.lang.Object) bigDecimal43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        schema53.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema53.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = schema61.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema63.properties(strMap64);
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.maximum(bigDecimal66);
        schema13.setExample((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema schema70 = schema13.addRequiredItem("*/*");
        java.lang.Boolean boolean71 = schema13.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(boolean71);
    }

    @Test
    public void test01693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01693");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema schema31 = schema29.readOnly((java.lang.Boolean) true);
        schema31.setTitle("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01694");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema36 = schema28.maxProperties((java.lang.Integer) 0);
        schema2.addExtension("hi!", (java.lang.Object) schema36);
        java.lang.Boolean boolean38 = schema2.getDeprecated();
        java.lang.Boolean boolean39 = schema2.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(boolean38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test01695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01695");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.Boolean boolean44 = schema43.getDeprecated();
        schema43.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
    }

    @Test
    public void test01696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01696");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean29 = schema23.getDeprecated();
        java.lang.Integer int30 = schema23.getMinLength();
        schema23.setMinProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema34 = schema23.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        schema37.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema37.addRequiredItem("");
        schema37.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal52 = schema37.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        java.lang.String str60 = schema55.getFormat();
        java.math.BigDecimal bigDecimal61 = schema55.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        java.lang.Integer int70 = linkArraySchema67.getMaxProperties();
        boolean boolean71 = schema64.equals((java.lang.Object) linkArraySchema67);
        io.swagger.oas.models.media.Discriminator discriminator72 = linkArraySchema67.getDiscriminator();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema67.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema67.nullable((java.lang.Boolean) false);
        schema55.setExample((java.lang.Object) schema76);
        io.swagger.oas.models.media.XML xML78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema76.xml(xML78);
        io.swagger.oas.models.media.Schema schema80 = schema37.not(schema79);
        java.math.BigDecimal bigDecimal81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema37.multipleOf(bigDecimal81);
        io.swagger.oas.models.media.Schema schema84 = schema82.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList85 = schema82.getRequired();
        schema23.setRequired(strList85);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(bigDecimal61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(int70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(discriminator72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test01697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01697");
        io.swagger.oas.models.media.Schema<java.lang.Cloneable> cloneableSchema0 = new io.swagger.oas.models.media.Schema<java.lang.Cloneable>();
    }

    @Test
    public void test01698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01698");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        java.lang.Integer int6 = schema5.getMaxProperties();
        java.lang.Integer int7 = schema5.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(int6);
        org.junit.Assert.assertNull(int7);
    }

    @Test
    public void test01699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01699");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = linkArraySchema23.getMaxProperties();
        boolean boolean27 = schema20.equals((java.lang.Object) linkArraySchema23);
        io.swagger.oas.models.media.Discriminator discriminator28 = linkArraySchema23.getDiscriminator();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema23.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema23.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link36 = null;
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] { link36 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        linkArraySchema33.addEnumItemObject(linkArray37);
        schema32.addEnumItemObject(linkArray37);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        java.lang.Integer int50 = linkArraySchema47.getMaxProperties();
        boolean boolean51 = schema44.equals((java.lang.Object) linkArraySchema47);
        io.swagger.oas.models.media.Discriminator discriminator52 = linkArraySchema47.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema47.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema53);
        io.swagger.oas.models.media.Schema schema55 = schema32.addProperties("*/*", schema54);
        schema12.setNot(schema55);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.multipleOf(bigDecimal57);
        schema58.setMaxItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(discriminator28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test01700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01700");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinItems((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01701");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str16 = schema8.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        io.swagger.oas.models.media.Schema schema25 = schema23.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int26 = schema25.getMaxItems();
        schema25.addExtension("", (java.lang.Object) (short) -1);
        schema25.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema33 = schema25.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema33.$ref("*/*");
        io.swagger.oas.models.media.Schema schema37 = schema35.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.discriminator(discriminator38);
        io.swagger.oas.models.media.Schema schema41 = schema35.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        schema8.setExtensions(strMap42);
        schema8.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test01702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01702");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        java.lang.Integer int11 = schema10.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal17 = schema10.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(bigDecimal17);
    }

    @Test
    public void test01703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01703");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        linkArraySchema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        schema20.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.String str32 = schema31.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema31.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema31.format("hi!");
        schema16.setNot(schema31);
        io.swagger.oas.models.media.Discriminator discriminator37 = schema31.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = schema31.writeOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01704");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.Boolean boolean30 = schema29.getUniqueItems();
        java.lang.Integer int31 = schema29.getMinLength();
        io.swagger.oas.models.media.XML xML32 = schema29.getXml();
        java.lang.String str33 = schema29.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + false + "'", boolean30, false);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNull(xML32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test01705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01705");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.deprecated((java.lang.Boolean) true);
        schema27.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean30 = schema27.getExclusiveMaximum();
        java.lang.Integer int31 = schema27.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNull(int31);
    }

    @Test
    public void test01706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01706");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema schema62 = schema60.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema63 = schema48.addProperties("#/components/schemas/", schema62);
        io.swagger.oas.models.media.Schema schema64 = schema44.additionalProperties(schema63);
        java.lang.Boolean boolean65 = schema64.getReadOnly();
        io.swagger.oas.models.media.Schema schema67 = schema64.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema69 = schema64.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema71 = schema64.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(boolean65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
    }

    @Test
    public void test01707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01707");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.lang.Object obj21 = schema20.getExample();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema20.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema26.readOnly((java.lang.Boolean) false);
        linkArraySchema26.setMinLength((java.lang.Integer) 100);
        linkArraySchema26.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema20.not((io.swagger.oas.models.media.Schema) linkArraySchema26);
        schema36.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01708");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        java.lang.Integer int9 = schema6.getMinLength();
        schema6.setMaxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema6.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        schema16.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema24 = schema16.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        schema24.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema29 = schema24.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema24.discriminator(discriminator30);
        java.lang.Boolean boolean32 = schema31.getUniqueItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        schema35.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema46 = schema44.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema35.not(schema46);
        schema46.setUniqueItems((java.lang.Boolean) false);
        schema46.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema46.maxProperties((java.lang.Integer) 100);
        java.lang.String str54 = schema46.getDescription();
        io.swagger.oas.models.media.Schema schema55 = schema31.additionalProperties(schema46);
        schema6.setNot(schema55);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01709");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.lang.String str22 = linkArraySchema15.toString();
        linkArraySchema15.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        linkArraySchema15.addEnumItemObject(linkArray25);
        linkArraySchema15.set$ref("#/components/schemas/");
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema15.discriminator(discriminator31);
        java.math.BigDecimal bigDecimal33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema32.multipleOf(bigDecimal33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str22, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01710");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        linkArraySchema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        schema20.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.String str32 = schema31.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema31.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema31.format("hi!");
        schema16.setNot(schema31);
        schema16.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema41.externalDocs(externalDocumentation44);
        java.lang.String str46 = schema41.getFormat();
        java.math.BigDecimal bigDecimal47 = schema41.getMinimum();
        java.lang.Integer int48 = schema41.getMaxItems();
        io.swagger.oas.models.media.Schema schema49 = schema16.not(schema41);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(int48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01711");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        java.lang.String str12 = schema11.getPattern();
        io.swagger.oas.models.media.Schema schema14 = schema11.exclusiveMaximum((java.lang.Boolean) false);
        schema14.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "#/components/schemas/" + "'", str12, "#/components/schemas/");
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01712");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        java.lang.Boolean boolean25 = linkArraySchema15.getDeprecated();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = linkArraySchema15.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(externalDocumentation26);
    }

    @Test
    public void test01713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01713");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        java.lang.Integer int32 = schema31.getMaxItems();
        schema31.setReadOnly((java.lang.Boolean) false);
        java.util.List<java.lang.String> strList35 = schema31.getRequired();
        io.swagger.oas.models.media.Schema schema37 = schema31.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = linkArraySchema43.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray49 = linkArraySchema43.getDefault();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema43.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        schema55.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema63 = schema55.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = schema63.getExtensions();
        io.swagger.oas.models.media.XML xML65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema63.xml(xML65);
        io.swagger.oas.models.media.Schema schema68 = schema66.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema43.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema43.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        boolean boolean72 = schema31.equals((java.lang.Object) schema71);
        io.swagger.oas.models.media.Schema schema74 = schema71.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema76 = schema74.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean77 = schema76.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNull(linkArray49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(boolean77);
    }

    @Test
    public void test01714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01714");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01715");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.getTitle();
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema14.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema14.description("");
        java.lang.Boolean boolean19 = schema14.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema35 = schema25.additionalProperties(schema28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.example((java.lang.Object) schema38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema35.properties(strMap44);
        io.swagger.oas.models.media.Schema schema47 = schema35.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema47.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema51 = schema47.uniqueItems((java.lang.Boolean) false);
        boolean boolean52 = schema14.equals((java.lang.Object) schema47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test01716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01716");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        io.swagger.oas.models.media.Schema schema18 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getType();
        java.math.BigDecimal bigDecimal20 = null;
        schema18.setMultipleOf(bigDecimal20);
        schema18.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01717");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema5.xml(xML17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema32 = schema18.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema18.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test01718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01718");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema11.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema15 = schema11.minLength((java.lang.Integer) 100);
        schema15.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema15.minProperties((java.lang.Integer) (-1));
        java.lang.String str20 = schema19.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test01719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01719");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = null;
        schema6.setExtensions(strMap7);
        schema6.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.List<java.lang.String> strList11 = schema6.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.multipleOf(bigDecimal25);
        java.lang.String str27 = schema26.getTitle();
        java.math.BigDecimal bigDecimal28 = null;
        schema26.setMinimum(bigDecimal28);
        io.swagger.oas.models.media.XML xML30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema26.xml(xML30);
        io.swagger.oas.models.media.Schema schema32 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema26.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
    }

    @Test
    public void test01720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01720");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        io.swagger.oas.models.media.Schema schema27 = schema20.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        schema27.setNot((io.swagger.oas.models.media.Schema) linkArraySchema33);
        io.swagger.oas.models.media.Schema schema39 = schema16.addProperties("", schema27);
        schema39.setMaxProperties((java.lang.Integer) 0);
        java.lang.Integer int42 = schema39.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int42);
    }

    @Test
    public void test01721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01721");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String str15 = schema6.getType();
        io.swagger.oas.models.media.Discriminator discriminator16 = schema6.getDiscriminator();
        java.math.BigDecimal bigDecimal17 = schema6.getMinimum();
        schema6.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setExclusiveMinimum((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal22 = schema6.getMultipleOf();
        java.lang.Boolean boolean23 = schema6.getNullable();
        java.lang.Integer int24 = schema6.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema42 = schema27.addProperties("#/components/schemas/", schema41);
        schema27.setDefault((java.lang.Object) (-1));
        schema27.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema27.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray49 = null;
        schema48.addEnumItemObject(linkArray49);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML54 = null;
        linkArraySchema51.setXml(xML54);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema51.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema58 = schema48.example((java.lang.Object) "hi!");
        java.math.BigDecimal bigDecimal59 = schema58.getMinimum();
        java.util.List<java.lang.String> strList60 = schema58.getRequired();
        schema58.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        java.lang.Integer int67 = schema66.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        java.lang.Integer int71 = linkArraySchema68.getMaxProperties();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema68.readOnly((java.lang.Boolean) false);
        schema66.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema68);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema76 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema76.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema78.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema78.externalDocs(externalDocumentation81);
        schema78.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema85 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema87 = linkArraySchema85.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema89 = schema87.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema90 = schema78.not(schema89);
        schema89.setUniqueItems((java.lang.Boolean) false);
        schema89.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema95 = schema66.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema89);
        schema58.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema95);
        schema6.setExample((java.lang.Object) "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int98 = schema6.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(discriminator16);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(bigDecimal59);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(int67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNull(int98);
    }

    @Test
    public void test01722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01722");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Discriminator discriminator51 = null;
        schema11.setDiscriminator(discriminator51);
        io.swagger.oas.models.media.Discriminator discriminator53 = schema11.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNull(discriminator53);
    }

    @Test
    public void test01723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01723");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema43.getType();
        io.swagger.oas.models.media.Schema schema46 = schema43.minItems((java.lang.Integer) 100);
        java.lang.String str47 = schema43.get$ref();
        java.lang.String str48 = schema43.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test01724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01724");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.title("");
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema21.minimum(bigDecimal25);
        schema21.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema11.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema21);
        java.lang.Boolean boolean32 = schema31.getUniqueItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01725");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.nullable((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        schema11.setProperties(strMap12);
        java.math.BigDecimal bigDecimal14 = null;
        schema11.setMaximum(bigDecimal14);
        schema11.setMaxProperties((java.lang.Integer) 1);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap18 = schema11.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(strMap18);
    }

    @Test
    public void test01726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01726");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema47.not(schema54);
        io.swagger.oas.annotations.links.Link[] linkArray56 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap57 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray56);
        io.swagger.oas.annotations.links.Link link58 = null;
        io.swagger.oas.annotations.links.Link[] linkArray59 = new io.swagger.oas.annotations.links.Link[] { link58 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap60 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap61 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        io.swagger.oas.annotations.links.Link[][] linkArray62 = new io.swagger.oas.annotations.links.Link[][] { linkArray56, linkArray59 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList63 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList63, linkArray62);
        schema55.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList63);
        schema39.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList63);
        schema39.setMaxItems((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList69 = schema39.getRequired();
        java.math.BigDecimal bigDecimal70 = null;
        schema39.setMultipleOf(bigDecimal70);
        io.swagger.oas.models.media.Schema schema73 = schema39.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Discriminator discriminator74 = schema73.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(linkArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(linkArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(linkArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(discriminator74);
    }

    @Test
    public void test01727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01727");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        java.math.BigDecimal bigDecimal30 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int40 = schema39.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema43.not(schema54);
        schema39.setNot(schema43);
        schema39.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema60 = schema39.minItems((java.lang.Integer) 1);
        java.lang.String str61 = schema39.getFormat();
        java.lang.String str62 = schema39.getDescription();
        schema29.setExample((java.lang.Object) str62);
        java.lang.String str64 = schema29.get$ref();
        io.swagger.oas.models.media.Schema schema66 = schema29.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema29.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema70 = schema29.pattern("");
        java.math.BigDecimal bigDecimal71 = schema29.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(bigDecimal30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(bigDecimal71);
    }

    @Test
    public void test01728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01728");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        java.lang.Integer int9 = schema6.getMinLength();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap10 = schema6.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test01729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01729");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.Boolean boolean44 = schema43.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema43.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        java.lang.String str55 = schema50.getFormat();
        schema50.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema50.pattern("");
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 10);
        java.lang.String str62 = schema61.getDescription();
        schema46.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", (java.lang.Object) schema61);
        schema46.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test01730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01730");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        schema24.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema43 = schema33.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema44 = schema24.example((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        schema46.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator49 = schema46.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema46.discriminator(discriminator50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(discriminator49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01731");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Discriminator discriminator5 = null;
        linkArraySchema0.setDiscriminator(discriminator5);
        java.lang.String str7 = linkArraySchema0.get$ref();
        linkArraySchema0.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test01732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01732");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        java.lang.Integer int24 = linkArraySchema21.getMaxProperties();
        boolean boolean25 = schema18.equals((java.lang.Object) linkArraySchema21);
        io.swagger.oas.models.media.Discriminator discriminator26 = linkArraySchema21.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray27 = linkArraySchema21.getDefault();
        java.math.BigDecimal bigDecimal28 = linkArraySchema21.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        schema31.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema39 = schema31.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = schema39.getExtensions();
        io.swagger.oas.models.media.XML xML41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema39.xml(xML41);
        schema39.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema46 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema21.additionalProperties(schema46);
        io.swagger.oas.models.media.Schema schema49 = schema47.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        schema58.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema65 = schema55.additionalProperties(schema58);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = schema55.getExternalDocs();
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema55.xml(xML67);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        schema71.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema79 = schema71.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema68.additionalProperties(schema71);
        io.swagger.oas.models.media.Schema schema81 = schema47.not(schema71);
        io.swagger.oas.models.media.Schema schema82 = schema8.additionalProperties(schema71);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap83 = schema82.getProperties();
        schema82.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(discriminator26);
        org.junit.Assert.assertNull(linkArray27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(strMap83);
    }

    @Test
    public void test01733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01733");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        schema13.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema21.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema13.addProperties("#/components/schemas/", schema28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema33.not(schema44);
        schema44.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        java.math.BigDecimal bigDecimal49 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema0.addProperties("", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.deprecated((java.lang.Boolean) false);
        schema60.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML65 = schema60.getXml();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema60.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema0.not(schema67);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = schema67.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(externalDocumentation69);
    }

    @Test
    public void test01734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01734");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        java.lang.Integer int11 = schema10.getMinLength();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = schema10.getExternalDocs();
        io.swagger.oas.models.media.Schema schema14 = schema10.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema14.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 10\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: -1\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNull(externalDocumentation12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01735");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        schema2.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema14 = schema2.nullable((java.lang.Boolean) true);
        java.lang.String str15 = schema2.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01736");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema20.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema41 = schema33.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = schema41.getExtensions();
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        schema41.setExclusiveMaximum((java.lang.Boolean) true);
        schema20.addExtension("", (java.lang.Object) true);
        schema16.addExtension("*/*", (java.lang.Object) "");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema51.externalDocs(externalDocumentation54);
        java.lang.Object obj56 = schema55.getExample();
        io.swagger.oas.models.media.Schema schema58 = schema55.format("*/*");
        java.lang.Boolean boolean59 = schema58.getReadOnly();
        io.swagger.oas.models.media.Schema schema61 = schema58.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema63 = schema58.maxLength((java.lang.Integer) 10);
        schema16.setNot(schema63);
        io.swagger.oas.models.media.Schema schema66 = schema63.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema68 = schema66.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(obj56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test01737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01737");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema11 = schema9.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setMaxLength((java.lang.Integer) 10);
        java.lang.Boolean boolean14 = schema11.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(boolean14);
    }

    @Test
    public void test01738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01738");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.math.BigDecimal bigDecimal12 = null;
        schema2.setMinimum(bigDecimal12);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
    }

    @Test
    public void test01739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01739");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = schema45.getExtensions();
        schema14.setExtensions(strMap50);
        java.lang.Boolean boolean52 = schema14.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        java.lang.String str61 = schema56.getFormat();
        io.swagger.oas.models.media.Schema schema63 = schema56.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        java.lang.Integer int72 = linkArraySchema69.getMaxProperties();
        boolean boolean73 = schema66.equals((java.lang.Object) linkArraySchema69);
        schema63.setNot((io.swagger.oas.models.media.Schema) linkArraySchema69);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList75 = linkArraySchema69.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = linkArraySchema69.getExtensions();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema69.name("");
        io.swagger.oas.models.media.Schema schema80 = schema78.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema81 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema81.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema85 = schema83.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema86 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema88 = linkArraySchema86.pattern("#/components/schemas/");
        java.lang.Integer int89 = linkArraySchema86.getMaxProperties();
        boolean boolean90 = schema83.equals((java.lang.Object) linkArraySchema86);
        io.swagger.oas.models.media.Discriminator discriminator91 = linkArraySchema86.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator92 = null;
        io.swagger.oas.models.media.Schema schema93 = linkArraySchema86.discriminator(discriminator92);
        java.lang.Integer int94 = linkArraySchema86.getMinLength();
        schema80.setNot((io.swagger.oas.models.media.Schema) linkArraySchema86);
        io.swagger.oas.models.media.Schema schema96 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (io.swagger.oas.models.media.Schema) linkArraySchema86);
        schema96.setUniqueItems((java.lang.Boolean) false);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList99 = schema96.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(boolean52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNull(int72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(linkArrayList75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(int89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(discriminator91);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(int94);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNull(linkArrayList99);
    }

    @Test
    public void test01740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01740");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        java.lang.Integer int27 = schema26.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema28.readOnly((java.lang.Boolean) false);
        schema26.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema28);
        java.lang.Object obj35 = schema26.getExample();
        io.swagger.oas.models.media.Discriminator discriminator36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema26.discriminator(discriminator36);
        schema37.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        java.lang.Integer int49 = linkArraySchema46.getMaxProperties();
        boolean boolean50 = schema43.equals((java.lang.Object) linkArraySchema46);
        schema43.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema53 = schema37.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        schema37.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema56 = schema37.getAdditionalProperties();
        schema22.setDefault((java.lang.Object) schema37);
        io.swagger.oas.models.media.Schema schema59 = schema37.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema73 = schema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema66.not(schema73);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema76 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema78 = linkArraySchema76.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema80 = schema78.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation81 = null;
        io.swagger.oas.models.media.Schema schema82 = schema78.externalDocs(externalDocumentation81);
        schema78.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema86 = schema78.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = schema86.getExtensions();
        io.swagger.oas.models.media.Schema schema88 = schema74.addProperties("#/components/schemas/", schema86);
        java.lang.Boolean boolean89 = schema86.getExclusiveMaximum();
        java.math.BigDecimal bigDecimal90 = schema86.getMinimum();
        schema86.setDescription("");
        io.swagger.oas.models.media.Schema schema94 = schema86.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema96 = schema94.maxItems((java.lang.Integer) 0);
        schema37.setExample((java.lang.Object) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(int27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(obj35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
        org.junit.Assert.assertNull(bigDecimal90);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test01741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01741");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema56.setDiscriminator(discriminator57);
        java.lang.Boolean boolean59 = schema56.getReadOnly();
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema56);
        java.lang.Object obj61 = schema56.getExample();
        java.lang.Boolean boolean62 = schema56.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema64 = schema56.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str65 = schema56.toString();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNull(boolean62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str65, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01742");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema5.xml(xML17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema18.additionalProperties(schema21);
        io.swagger.oas.models.media.Schema schema32 = schema18.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema18.externalDocs(externalDocumentation33);
        java.lang.Boolean boolean35 = schema18.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertEquals("'" + boolean35 + "' != '" + false + "'", boolean35, false);
    }

    @Test
    public void test01743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01743");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal15 = null;
        schema8.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.Schema schema18 = schema8.pattern("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.Boolean boolean26 = schema21.getReadOnly();
        java.lang.String str27 = schema21.getType();
        java.lang.String str28 = schema21.getDescription();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation34 = null;
        io.swagger.oas.models.media.Schema schema35 = schema31.externalDocs(externalDocumentation34);
        java.lang.String str36 = schema31.getFormat();
        schema31.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema31.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int50 = schema49.getMaxItems();
        schema49.addExtension("", (java.lang.Object) (short) -1);
        schema49.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema57 = schema49.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        java.lang.Integer int66 = linkArraySchema63.getMaxProperties();
        boolean boolean67 = schema60.equals((java.lang.Object) linkArraySchema63);
        io.swagger.oas.models.media.Discriminator discriminator68 = linkArraySchema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema63.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema63.nullable((java.lang.Boolean) false);
        boolean boolean73 = schema57.equals((java.lang.Object) schema72);
        io.swagger.oas.annotations.links.Link[] linkArray74 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap75 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        schema57.addEnumItemObject(linkArray74);
        schema31.addEnumItemObject(linkArray74);
        schema21.addEnumItemObject(linkArray74);
        schema18.addEnumItemObject(linkArray74);
        io.swagger.oas.models.media.Schema schema81 = schema18.maxItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema83 = schema81.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema83.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(int66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(linkArray74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01744");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema64.externalDocs(externalDocumentation67);
        io.swagger.oas.models.media.Schema schema70 = schema68.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int71 = schema70.getMaxItems();
        schema70.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = schema70.getExtensions();
        schema39.setExample((java.lang.Object) schema70);
        java.lang.String str77 = schema39.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNull(int71);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(str77);
    }

    @Test
    public void test01745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01745");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema2.setProperties(strMap14);
        io.swagger.oas.models.media.Schema schema17 = schema2.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema24.not(schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        io.swagger.oas.annotations.links.Link link35 = null;
        io.swagger.oas.annotations.links.Link[] linkArray36 = new io.swagger.oas.annotations.links.Link[] { link35 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap37 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray36);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray36);
        io.swagger.oas.annotations.links.Link[][] linkArray39 = new io.swagger.oas.annotations.links.Link[][] { linkArray33, linkArray36 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList40 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList40, linkArray39);
        schema32.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList40);
        io.swagger.oas.models.media.Schema schema44 = schema32.maxLength((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal45 = schema44.getMultipleOf();
        schema17.setNot(schema44);
        io.swagger.oas.models.media.Schema schema48 = schema44.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema48.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator51 = schema48.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(bigDecimal45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(discriminator51);
    }

    @Test
    public void test01746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01746");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema15.setFormat("*/*");
        java.util.List<java.lang.String> strList18 = schema15.getRequired();
        io.swagger.oas.models.media.Schema schema20 = schema15.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(schema20);
    }

    @Test
    public void test01747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01747");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        java.lang.String str18 = schema10.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema10.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema0.not(schema20);
        io.swagger.oas.models.media.Discriminator discriminator22 = linkArraySchema0.getDiscriminator();
        linkArraySchema0.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema0.minimum(bigDecimal25);
        schema26.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(discriminator22);
        org.junit.Assert.assertNotNull(schema26);
    }

    @Test
    public void test01748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01748");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        java.math.BigDecimal bigDecimal62 = null;
        io.swagger.oas.models.media.Schema schema63 = schema39.maximum(bigDecimal62);
        schema63.setMaxItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01749");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setPattern("");
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema0.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema0.minLength((java.lang.Integer) 100);
        schema13.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean16 = schema13.getUniqueItems();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.externalDocs(externalDocumentation17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01750");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema38);
        java.lang.String[] strArray41 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        io.swagger.oas.models.media.Schema schema44 = schema39.required((java.util.List<java.lang.String>) strList42);
        io.swagger.oas.models.media.Schema schema45 = schema18.example((java.lang.Object) strList42);
        schema45.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setTitle("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01751");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema8.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema47 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01752");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema33 = schema2.pattern("");
        schema2.setMaxItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema2.multipleOf(bigDecimal36);
        java.math.BigDecimal bigDecimal38 = null;
        schema2.setMultipleOf(bigDecimal38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01753");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.String str44 = schema39.getName();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema58 = schema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema51.not(schema58);
        io.swagger.oas.models.media.Schema schema61 = schema59.minProperties((java.lang.Integer) 0);
        schema59.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema64 = schema39.not(schema59);
        schema59.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01754");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.Object obj44 = schema8.getExample();
        schema8.setMinItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal47 = schema8.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation48 = schema8.getExternalDocs();
        java.lang.String str49 = schema8.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(obj44);
        org.junit.Assert.assertNull(bigDecimal47);
        org.junit.Assert.assertNull(externalDocumentation48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test01755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01755");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = schema48.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator52 = schema48.getDiscriminator();
        java.lang.Integer int53 = schema48.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(linkArrayList51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNull(int53);
    }

    @Test
    public void test01756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01756");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        schema28.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str31 = schema28.getTitle();
        io.swagger.oas.models.media.Schema schema33 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema28.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema schema44 = schema42.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int45 = schema44.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        schema48.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema48.not(schema59);
        schema44.setNot(schema48);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema68 = schema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema75 = schema71.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema68.not(schema75);
        io.swagger.oas.models.media.Schema schema77 = schema44.not(schema75);
        schema75.setFormat("*/*");
        java.lang.Boolean boolean80 = schema75.getDeprecated();
        io.swagger.oas.models.media.Schema schema82 = schema75.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema83 = schema35.example((java.lang.Object) schema75);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        schema83.setExternalDocs(externalDocumentation84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(boolean80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01757");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = schema31.format("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema44 = schema36.maxProperties((java.lang.Integer) 0);
        schema36.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema36.addRequiredItem("");
        schema36.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal51 = schema36.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        java.lang.String str59 = schema54.getFormat();
        java.math.BigDecimal bigDecimal60 = schema54.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        boolean boolean70 = schema63.equals((java.lang.Object) linkArraySchema66);
        io.swagger.oas.models.media.Discriminator discriminator71 = linkArraySchema66.getDiscriminator();
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema66.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema66.nullable((java.lang.Boolean) false);
        schema54.setExample((java.lang.Object) schema75);
        io.swagger.oas.models.media.XML xML77 = null;
        io.swagger.oas.models.media.Schema schema78 = schema75.xml(xML77);
        io.swagger.oas.models.media.Schema schema79 = schema36.not(schema78);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema80 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema82 = linkArraySchema80.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema82.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation85 = null;
        io.swagger.oas.models.media.Schema schema86 = schema82.externalDocs(externalDocumentation85);
        io.swagger.oas.models.media.Schema schema88 = schema86.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema86.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator91 = null;
        schema90.setDiscriminator(discriminator91);
        java.lang.Boolean boolean93 = schema90.getReadOnly();
        io.swagger.oas.models.media.Schema schema94 = schema36.additionalProperties(schema90);
        java.util.List<java.lang.String> strList95 = schema94.getRequired();
        io.swagger.oas.models.media.Schema schema96 = schema33.required(strList95);
        io.swagger.oas.models.media.Discriminator discriminator97 = null;
        io.swagger.oas.models.media.Schema schema98 = schema96.discriminator(discriminator97);
        java.lang.Boolean boolean99 = schema96.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(bigDecimal60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(discriminator71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(boolean93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNull(boolean99);
    }

    @Test
    public void test01758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01758");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.minProperties((java.lang.Integer) 0);
        java.lang.Object obj17 = schema14.getExample();
        java.lang.Integer int18 = schema14.getMaxProperties();
        io.swagger.oas.models.media.Schema schema20 = schema14.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema20.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str23 = schema20.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(obj17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01759");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.annotations.links.Link[] linkArray15 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray15);
        io.swagger.oas.annotations.links.Link link17 = null;
        io.swagger.oas.annotations.links.Link[] linkArray18 = new io.swagger.oas.annotations.links.Link[] { link17 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray18);
        io.swagger.oas.annotations.links.Link[][] linkArray21 = new io.swagger.oas.annotations.links.Link[][] { linkArray15, linkArray18 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList22, linkArray21);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList22);
        io.swagger.oas.models.media.Schema schema26 = schema14.maxLength((java.lang.Integer) (-1));
        schema26.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = schema26.getExternalDocs();
        schema26.setMinLength((java.lang.Integer) (-1));
        schema26.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(linkArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(linkArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(linkArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation29);
    }

    @Test
    public void test01760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01760");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.maxProperties((java.lang.Integer) 100);
        java.lang.String str21 = schema13.getDescription();
        io.swagger.oas.annotations.links.Link link22 = null;
        io.swagger.oas.annotations.links.Link[] linkArray23 = new io.swagger.oas.annotations.links.Link[] { link22 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap25 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray23);
        schema13.addEnumItemObject(linkArray23);
        java.lang.Boolean boolean30 = schema13.getNullable();
        schema13.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(linkArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01761");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Object obj7 = schema6.getExample();
        io.swagger.oas.models.media.Schema schema9 = schema6.format("*/*");
        java.lang.Boolean boolean10 = schema9.getReadOnly();
        io.swagger.oas.models.media.Schema schema12 = schema9.addRequiredItem("*/*");
        schema12.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(obj7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01762");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01763");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        schema39.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema45 = schema39.minItems((java.lang.Integer) 0);
        schema45.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str48 = schema45.getTitle();
        java.lang.Boolean boolean49 = schema45.getExclusiveMinimum();
        schema45.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        schema45.setExternalDocs(externalDocumentation52);
        java.math.BigDecimal bigDecimal54 = null;
        io.swagger.oas.models.media.Schema schema55 = schema45.minimum(bigDecimal54);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(boolean49);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01764");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        schema14.setExternalDocs(externalDocumentation20);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema24.externalDocs(externalDocumentation27);
        schema24.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema32 = schema24.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema32.getExtensions();
        io.swagger.oas.models.media.Schema schema34 = schema14.example((java.lang.Object) schema32);
        io.swagger.oas.models.media.Schema schema36 = schema34.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema38 = schema36.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Discriminator discriminator39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema38.discriminator(discriminator39);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01765");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        java.lang.String str51 = schema46.getFormat();
        io.swagger.oas.models.media.Schema schema53 = schema46.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.deprecated((java.lang.Boolean) false);
        schema24.setNot(schema53);
        schema24.setMaxItems((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        schema24.setExternalDocs(externalDocumentation59);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test01766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01766");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        java.math.BigDecimal bigDecimal41 = schema39.getMaximum();
        schema12.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema schema44 = schema39.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema46 = schema39.maxLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML50 = null;
        linkArraySchema47.setXml(xML50);
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema47.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal54 = null;
        linkArraySchema47.setMaximum(bigDecimal54);
        linkArraySchema47.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema71);
        io.swagger.oas.annotations.links.Link[] linkArray73 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray73);
        io.swagger.oas.annotations.links.Link link75 = null;
        io.swagger.oas.annotations.links.Link[] linkArray76 = new io.swagger.oas.annotations.links.Link[] { link75 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap78 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray76);
        io.swagger.oas.annotations.links.Link[][] linkArray79 = new io.swagger.oas.annotations.links.Link[][] { linkArray73, linkArray76 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList80 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList80, linkArray79);
        schema72.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList80);
        io.swagger.oas.models.media.Schema schema84 = schema72.maxLength((java.lang.Integer) (-1));
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList85 = schema84.getEnum();
        linkArraySchema47.setEnum(linkArrayList85);
        io.swagger.oas.models.media.Schema schema88 = linkArraySchema47.maxLength((java.lang.Integer) (-1));
        schema39.setNot(schema88);
        schema88.setExclusiveMaximum((java.lang.Boolean) true);
        schema88.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(bigDecimal41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(linkArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(linkArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(linkArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(linkArrayList85);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test01767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01767");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Discriminator discriminator7 = schema2.getDiscriminator();
        schema2.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(discriminator7);
    }

    @Test
    public void test01768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01768");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema10 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        java.lang.String str18 = schema13.getFormat();
        io.swagger.oas.models.media.Schema schema20 = schema13.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        boolean boolean30 = schema23.equals((java.lang.Object) linkArraySchema26);
        schema20.setNot((io.swagger.oas.models.media.Schema) linkArraySchema26);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList32 = linkArraySchema26.getEnum();
        java.lang.String str33 = linkArraySchema26.toString();
        linkArraySchema26.setDescription("#/components/schemas/");
        io.swagger.oas.models.media.XML xML36 = null;
        linkArraySchema26.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema26.exclusiveMinimum((java.lang.Boolean) true);
        boolean boolean40 = schema2.equals((java.lang.Object) schema39);
        java.lang.Object obj41 = schema2.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(linkArrayList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str33, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(obj41);
    }

    @Test
    public void test01769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01769");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        schema13.setWriteOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        schema18.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema30 = schema18.addRequiredItem("");
        schema18.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        schema18.setExternalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        java.lang.String str42 = schema37.getFormat();
        java.math.BigDecimal bigDecimal43 = schema37.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        java.lang.Integer int52 = linkArraySchema49.getMaxProperties();
        boolean boolean53 = schema46.equals((java.lang.Object) linkArraySchema49);
        io.swagger.oas.models.media.Discriminator discriminator54 = linkArraySchema49.getDiscriminator();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema49.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema49.nullable((java.lang.Boolean) false);
        schema37.setExample((java.lang.Object) schema58);
        schema18.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        io.swagger.oas.models.media.Discriminator discriminator68 = schema63.getDiscriminator();
        io.swagger.oas.models.media.Schema schema69 = schema58.additionalProperties(schema63);
        boolean boolean70 = schema13.equals((java.lang.Object) schema58);
        io.swagger.oas.models.media.Schema schema72 = schema58.readOnly((java.lang.Boolean) false);
        io.swagger.oas.annotations.media.Content[] contentArray73 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components74 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional75 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components74);
        io.swagger.oas.models.Components components76 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional77 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components76);
        io.swagger.oas.models.Components components78 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional79 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components78);
        io.swagger.oas.models.Components components80 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional81 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components80);
        io.swagger.oas.models.Components components82 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional83 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components82);
        io.swagger.oas.models.Components components84 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional85 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components84);
        io.swagger.oas.models.Components components86 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional87 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components86);
        io.swagger.oas.models.Components components88 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional89 = io.swagger.jaxrs2.OperationParser.getContents(contentArray73, components88);
        boolean boolean90 = schema72.equals((java.lang.Object) contentOptional89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(bigDecimal43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(int52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(discriminator54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(discriminator68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(contentArray73);
        org.junit.Assert.assertNotNull(contentOptional75);
        org.junit.Assert.assertNotNull(contentOptional77);
        org.junit.Assert.assertNotNull(contentOptional79);
        org.junit.Assert.assertNotNull(contentOptional81);
        org.junit.Assert.assertNotNull(contentOptional83);
        org.junit.Assert.assertNotNull(contentOptional85);
        org.junit.Assert.assertNotNull(contentOptional87);
        org.junit.Assert.assertNotNull(contentOptional89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test01770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01770");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.deprecated((java.lang.Boolean) false);
        schema9.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML14 = schema9.getXml();
        java.math.BigDecimal bigDecimal15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema9.minimum(bigDecimal15);
        schema16.setMinLength((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(xML14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01771");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML30 = null;
        schema25.setXml(xML30);
        io.swagger.oas.models.media.Schema schema33 = schema25.exclusiveMaximum((java.lang.Boolean) true);
        schema25.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test01772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01772");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        java.lang.Integer int33 = linkArraySchema30.getMaxProperties();
        boolean boolean34 = schema27.equals((java.lang.Object) linkArraySchema30);
        java.lang.String str35 = schema27.getFormat();
        boolean boolean36 = schema24.equals((java.lang.Object) str35);
        schema24.setWriteOnly((java.lang.Boolean) true);
        schema24.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test01773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01773");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDescription("hi!");
        io.swagger.oas.models.media.Schema schema10 = schema2.maxItems((java.lang.Integer) 100);
        schema2.setMinItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
    }

    @Test
    public void test01774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01774");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        linkArraySchema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList17 = schema16.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        schema20.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema28 = schema20.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = schema28.getExtensions();
        io.swagger.oas.models.media.Schema schema31 = schema28.uniqueItems((java.lang.Boolean) false);
        java.lang.String str32 = schema31.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = schema31.getExtensions();
        io.swagger.oas.models.media.Schema schema35 = schema31.format("hi!");
        schema16.setNot(schema31);
        schema16.setMinProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema40 = schema16.maxProperties((java.lang.Integer) (-1));
        java.lang.String str41 = schema16.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "#/components/schemas/" + "'", str41, "#/components/schemas/");
    }

    @Test
    public void test01775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01775");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        schema13.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema22 = schema18.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema22.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema26 = schema22.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema28.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema30.xml(xML31);
        io.swagger.oas.models.media.Schema schema34 = schema32.maxLength((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test01776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01776");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        java.lang.Object obj25 = schema24.getExample();
        java.lang.Boolean boolean26 = schema24.getReadOnly();
        schema24.set$ref("#/components/schemas/");
        java.lang.Integer int29 = schema24.getMinLength();
        java.lang.Boolean boolean30 = schema24.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(obj25);
        org.junit.Assert.assertNull(boolean26);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
    }

    @Test
    public void test01777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01777");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema45.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        java.lang.String str57 = schema52.getFormat();
        io.swagger.oas.models.media.Schema schema59 = schema52.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        boolean boolean69 = schema62.equals((java.lang.Object) linkArraySchema65);
        schema59.setNot((io.swagger.oas.models.media.Schema) linkArraySchema65);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList71 = linkArraySchema65.getEnum();
        java.lang.String str72 = linkArraySchema65.toString();
        linkArraySchema65.setDescription("#/components/schemas/");
        io.swagger.oas.annotations.links.Link[] linkArray75 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap76 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap77 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray75);
        linkArraySchema65.addEnumItemObject(linkArray75);
        schema45.addEnumItemObject(linkArray75);
        io.swagger.oas.models.media.Discriminator discriminator80 = schema45.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator81 = schema45.getDiscriminator();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(linkArrayList71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str72, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(linkArray75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(discriminator80);
        org.junit.Assert.assertNull(discriminator81);
    }

    @Test
    public void test01778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01778");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.lang.Boolean boolean13 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema2.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.maxLength((java.lang.Integer) 0);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap20 = schema17.getProperties();
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema17.multipleOf(bigDecimal21);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01779");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList11 = schema2.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(linkArrayList11);
    }

    @Test
    public void test01780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01780");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01781");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        boolean boolean35 = schema28.equals((java.lang.Object) linkArraySchema31);
        io.swagger.oas.models.media.Discriminator discriminator36 = linkArraySchema31.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray37 = linkArraySchema31.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap38 = null;
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema31.properties(strMap38);
        schema8.setExample((java.lang.Object) linkArraySchema31);
        java.lang.String str41 = linkArraySchema31.get$ref();
        java.lang.String str42 = linkArraySchema31.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(discriminator36);
        org.junit.Assert.assertNull(linkArray37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test01782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01782");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean20 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema22 = schema2.minItems((java.lang.Integer) (-1));
        java.math.BigDecimal bigDecimal23 = null;
        schema22.setMultipleOf(bigDecimal23);
        java.util.List<java.lang.String> strList25 = schema22.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test01783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01783");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        schema29.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.setType("#/components/schemas/hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01784");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema8.maximum(bigDecimal19);
        io.swagger.oas.models.media.Schema schema22 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema25.externalDocs(externalDocumentation28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema40 = schema25.addProperties("#/components/schemas/", schema39);
        schema39.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema44 = schema39.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation64 = null;
        io.swagger.oas.models.media.Schema schema65 = schema61.externalDocs(externalDocumentation64);
        java.lang.String str66 = schema61.getFormat();
        io.swagger.oas.models.media.Schema schema68 = schema61.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema53.addProperties("#/components/schemas/", schema68);
        io.swagger.oas.models.media.Schema schema71 = schema68.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema71.externalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema80 = schema76.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema81 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema83 = linkArraySchema81.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema85 = schema83.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema87 = schema83.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema88 = schema80.not(schema87);
        java.lang.String[] strArray90 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList91 = new java.util.ArrayList<java.lang.String>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList91, strArray90);
        io.swagger.oas.models.media.Schema schema93 = schema88.required((java.util.List<java.lang.String>) strList91);
        schema73.setRequired((java.util.List<java.lang.String>) strList91);
        schema39.setRequired((java.util.List<java.lang.String>) strList91);
        schema8.setRequired((java.util.List<java.lang.String>) strList91);
        io.swagger.oas.models.media.Schema schema98 = schema8.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap99 = schema98.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test01785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01785");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        schema25.setUniqueItems((java.lang.Boolean) false);
        schema25.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema31 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.lang.Boolean boolean32 = schema25.getReadOnly();
        java.lang.Integer int33 = schema25.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNull(int33);
    }

    @Test
    public void test01786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01786");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema2.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList50 = schema47.getRequired();
        io.swagger.oas.models.media.Schema schema52 = schema47.maxProperties((java.lang.Integer) (-1));
        schema52.setExclusiveMaximum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01787");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        io.swagger.oas.models.media.Schema schema52 = schema11.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema56 = schema54.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = schema54.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema54.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema60);
    }

    @Test
    public void test01788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01788");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.toString();
        java.math.BigDecimal bigDecimal13 = null;
        schema2.setMinimum(bigDecimal13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxItems();
        schema24.addExtension("", (java.lang.Object) (short) -1);
        schema24.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema32 = schema24.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        java.lang.Integer int41 = linkArraySchema38.getMaxProperties();
        boolean boolean42 = schema35.equals((java.lang.Object) linkArraySchema38);
        io.swagger.oas.models.media.Discriminator discriminator43 = linkArraySchema38.getDiscriminator();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema38.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema38.nullable((java.lang.Boolean) false);
        boolean boolean48 = schema32.equals((java.lang.Object) schema47);
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema47);
        io.swagger.oas.models.media.Schema schema51 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema51.setTitle("");
        schema51.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(discriminator43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01789");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        schema14.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema28.not(schema35);
        io.swagger.oas.annotations.links.Link[] linkArray37 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap38 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray37);
        io.swagger.oas.annotations.links.Link link39 = null;
        io.swagger.oas.annotations.links.Link[] linkArray40 = new io.swagger.oas.annotations.links.Link[] { link39 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap41 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap42 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray40);
        io.swagger.oas.annotations.links.Link[][] linkArray43 = new io.swagger.oas.annotations.links.Link[][] { linkArray37, linkArray40 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList44 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList44, linkArray43);
        schema36.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema14.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList44);
        schema11.setName("hi!");
        java.math.BigDecimal bigDecimal51 = null;
        schema11.setMinimum(bigDecimal51);
        io.swagger.oas.models.media.Schema schema54 = schema11.minProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema56 = schema11.deprecated((java.lang.Boolean) true);
        schema56.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(linkArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(linkArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(linkArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
    }

    @Test
    public void test01790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01790");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        schema12.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01791");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        schema13.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean18 = schema13.getWriteOnly();
        java.math.BigDecimal bigDecimal19 = null;
        schema13.setMinimum(bigDecimal19);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(boolean18);
    }

    @Test
    public void test01792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01792");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema5.minProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML20 = null;
        linkArraySchema17.setXml(xML20);
        schema12.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema17);
        java.lang.Boolean boolean23 = schema12.getDeprecated();
        io.swagger.oas.models.media.Schema schema24 = schema5.not(schema12);
        schema24.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Integer int27 = schema24.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int27);
    }

    @Test
    public void test01793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01793");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        schema2.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema2.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema2.deprecated((java.lang.Boolean) true);
        java.lang.Integer int38 = schema37.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
    }

    @Test
    public void test01794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01794");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        io.swagger.oas.models.media.Schema schema45 = schema8.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator46 = null;
        schema45.setDiscriminator(discriminator46);
        schema45.setDeprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test01795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01795");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        java.lang.Integer int46 = schema45.getMaxProperties();
        io.swagger.oas.models.media.XML xML47 = schema45.getXml();
        io.swagger.oas.models.media.Schema schema49 = schema45.pattern("*/*");
        io.swagger.oas.models.media.Schema schema50 = schema45.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema52 = schema45.minItems((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNull(xML47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01796");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        linkArraySchema5.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.maxProperties((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema14.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = schema14.getExtensions();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test01797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01797");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList15 = schema12.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        schema12.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean21 = schema20.getWriteOnly();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList22 = schema20.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(linkArrayList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + boolean21 + "' != '" + true + "'", boolean21, true);
        org.junit.Assert.assertNull(linkArrayList22);
    }

    @Test
    public void test01798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01798");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        java.lang.Integer int46 = schema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema48 = schema8.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        schema50.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.discriminator(discriminator53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema59 = schema57.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = null;
        io.swagger.oas.models.media.Schema schema61 = schema57.externalDocs(externalDocumentation60);
        java.lang.String str62 = schema57.getFormat();
        schema57.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema71.not(schema78);
        io.swagger.oas.annotations.links.Link[] linkArray80 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap81 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray80);
        io.swagger.oas.annotations.links.Link link82 = null;
        io.swagger.oas.annotations.links.Link[] linkArray83 = new io.swagger.oas.annotations.links.Link[] { link82 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap84 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray83);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap85 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray83);
        io.swagger.oas.annotations.links.Link[][] linkArray86 = new io.swagger.oas.annotations.links.Link[][] { linkArray80, linkArray83 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList87 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList87, linkArray86);
        schema79.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList87);
        schema57.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList87);
        schema50.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList87);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(linkArray80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(linkArray83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(linkArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
    }

    @Test
    public void test01799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01799");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        schema10.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema10.minimum(bigDecimal18);
        java.lang.Boolean boolean20 = schema10.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
    }

    @Test
    public void test01800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01800");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01801");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.Schema schema40 = schema24.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema42 = schema40.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema44 = schema40.maxProperties((java.lang.Integer) 10);
        schema40.setMinProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test01802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01802");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Boolean boolean13 = schema10.getReadOnly();
        io.swagger.oas.models.media.Schema schema15 = schema10.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema17 = schema10.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema18 = schema10.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(schema18);
    }

    @Test
    public void test01803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01803");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        schema6.setMaxProperties((java.lang.Integer) 10);
        java.lang.Integer int9 = schema6.getMinLength();
        schema6.setMaxProperties((java.lang.Integer) 0);
        schema6.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean14 = schema6.getReadOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        schema17.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema29 = schema17.addRequiredItem("");
        schema17.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation32 = null;
        schema17.setExternalDocs(externalDocumentation32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        java.lang.String str41 = schema36.getFormat();
        java.math.BigDecimal bigDecimal42 = schema36.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        java.lang.Integer int51 = linkArraySchema48.getMaxProperties();
        boolean boolean52 = schema45.equals((java.lang.Object) linkArraySchema48);
        io.swagger.oas.models.media.Discriminator discriminator53 = linkArraySchema48.getDiscriminator();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema48.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema48.nullable((java.lang.Boolean) false);
        schema36.setExample((java.lang.Object) schema57);
        schema17.setNot(schema57);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.externalDocs(externalDocumentation65);
        io.swagger.oas.models.media.Discriminator discriminator67 = schema62.getDiscriminator();
        io.swagger.oas.models.media.Schema schema68 = schema57.additionalProperties(schema62);
        io.swagger.oas.models.media.Schema schema70 = schema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema72 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema74 = schema72.minProperties((java.lang.Integer) 10);
        boolean boolean75 = schema6.equals((java.lang.Object) 10);
        io.swagger.oas.models.media.Schema schema77 = schema6.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema6.setMinProperties((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(boolean14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(bigDecimal42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(discriminator53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(discriminator67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test01804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01804");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal7 = null;
        linkArraySchema0.setMaximum(bigDecimal7);
        linkArraySchema0.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema17.not(schema24);
        io.swagger.oas.annotations.links.Link[] linkArray26 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray26);
        io.swagger.oas.annotations.links.Link link28 = null;
        io.swagger.oas.annotations.links.Link[] linkArray29 = new io.swagger.oas.annotations.links.Link[] { link28 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray29);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray29);
        io.swagger.oas.annotations.links.Link[][] linkArray32 = new io.swagger.oas.annotations.links.Link[][] { linkArray26, linkArray29 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList33 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList33, linkArray32);
        schema25.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList33);
        io.swagger.oas.models.media.Schema schema37 = schema25.maxLength((java.lang.Integer) (-1));
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList38 = schema37.getEnum();
        linkArraySchema0.setEnum(linkArrayList38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        io.swagger.oas.models.media.Schema schema46 = schema42.externalDocs(externalDocumentation45);
        java.lang.String str47 = schema42.getFormat();
        io.swagger.oas.models.media.Schema schema49 = schema42.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema55 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema57 = linkArraySchema55.pattern("#/components/schemas/");
        java.lang.Integer int58 = linkArraySchema55.getMaxProperties();
        boolean boolean59 = schema52.equals((java.lang.Object) linkArraySchema55);
        schema49.setNot((io.swagger.oas.models.media.Schema) linkArraySchema55);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList61 = linkArraySchema55.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = linkArraySchema55.getExtensions();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema55.type("hi!");
        io.swagger.oas.models.media.Schema schema66 = schema64.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema0.setNot(schema66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(linkArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(linkArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(linkArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(linkArrayList38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(int58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(linkArrayList61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test01805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01805");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema37 = schema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema30.not(schema37);
        java.lang.String[] strArray40 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        io.swagger.oas.models.media.Schema schema43 = schema38.required((java.util.List<java.lang.String>) strList41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = null;
        schema53.setExtensions(strMap58);
        io.swagger.oas.models.media.Schema schema60 = schema38.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema53);
        linkArraySchema15.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema60);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        java.lang.Integer int65 = schema64.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        java.lang.Integer int69 = linkArraySchema66.getMaxProperties();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema66.readOnly((java.lang.Boolean) false);
        schema64.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema66);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.externalDocs(externalDocumentation79);
        schema76.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema83 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema83.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema87 = schema85.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema88 = schema76.not(schema87);
        schema87.setUniqueItems((java.lang.Boolean) false);
        schema87.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema93 = schema64.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema87);
        schema93.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str96 = schema93.getFormat();
        io.swagger.oas.models.media.Schema schema97 = schema60.not(schema93);
        schema97.setMaxProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(int65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01806");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.String str12 = schema2.toString();
        io.swagger.oas.models.media.XML xML13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema2.xml(xML13);
        java.lang.String str15 = schema14.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str12, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test01807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01807");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        java.lang.Boolean boolean41 = schema5.getUniqueItems();
        schema5.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema5.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema48 = schema5.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema49 = schema48.getAdditionalProperties();
        java.lang.Integer int50 = schema49.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
    }

    @Test
    public void test01808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01808");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.deprecated((java.lang.Boolean) true);
        schema27.setMinItems((java.lang.Integer) 100);
        java.lang.Object obj30 = schema27.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(obj30);
    }

    @Test
    public void test01809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01809");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = null;
        io.swagger.oas.models.media.Schema schema39 = schema35.externalDocs(externalDocumentation38);
        io.swagger.oas.models.media.Schema schema41 = schema39.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int42 = schema41.getMaxItems();
        schema41.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        java.lang.String str54 = schema49.getFormat();
        io.swagger.oas.models.media.Schema schema56 = schema49.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema41.addProperties("#/components/schemas/", schema56);
        java.math.BigDecimal bigDecimal58 = schema41.getMultipleOf();
        io.swagger.oas.models.media.XML xML59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema41.xml(xML59);
        io.swagger.oas.models.media.Schema schema61 = schema32.example((java.lang.Object) xML59);
        java.lang.Integer int62 = schema32.getMinProperties();
        java.math.BigDecimal bigDecimal63 = schema32.getMaximum();
        io.swagger.oas.models.media.Schema schema64 = schema32.getAdditionalProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema66 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema68.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation71 = null;
        io.swagger.oas.models.media.Schema schema72 = schema68.externalDocs(externalDocumentation71);
        io.swagger.oas.models.media.Schema schema74 = schema72.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int75 = schema74.getMaxItems();
        io.swagger.oas.models.media.Schema schema77 = schema74.title("");
        java.math.BigDecimal bigDecimal78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema74.minimum(bigDecimal78);
        schema74.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean82 = schema74.getExclusiveMaximum();
        // The following exception was thrown during execution in test generation
        try {
            schema64.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 100\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: true\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) boolean82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(int42);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(bigDecimal58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(bigDecimal63);
        org.junit.Assert.assertNull(schema64);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(int75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNull(boolean82);
    }

    @Test
    public void test01810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01810");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema10 = schema6.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        schema10.setDiscriminator(discriminator11);
        java.lang.Integer int13 = schema10.getMaxItems();
        schema10.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema17 = schema10.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema17.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema17.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = schema21.minLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema25 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema23.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema23.maxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01811");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        schema52.setNullable((java.lang.Boolean) true);
        schema52.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema52.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema52.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema62 = schema52.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test01812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01812");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        java.math.BigDecimal bigDecimal9 = null;
        schema2.setMultipleOf(bigDecimal9);
        java.lang.Integer int11 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema schema13 = schema2.maxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01813");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        schema2.setFormat("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema2.addProperties("", schema21);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        io.swagger.oas.models.media.Schema schema29 = schema25.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema25.maximum(bigDecimal30);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
    }

    @Test
    public void test01814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01814");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema8.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema29 = schema8.uniqueItems((java.lang.Boolean) false);
        java.lang.Class<?> wildcardClass30 = schema29.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test01815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01815");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema0.minItems((java.lang.Integer) (-1));
        java.lang.Integer int9 = schema8.getMaxLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
    }

    @Test
    public void test01816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01816");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema11 = schema9.format("");
        schema9.setMinProperties((java.lang.Integer) 1);
        java.lang.String str14 = schema9.getType();
        java.lang.Integer int15 = schema9.getMaxLength();
        io.swagger.oas.models.media.Schema schema17 = schema9.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation27 = schema24.getExternalDocs();
        java.lang.Integer int28 = schema24.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        schema32.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema39 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema41.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema44 = schema32.not(schema43);
        io.swagger.oas.models.media.Schema schema45 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema43);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema45.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema45.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str50 = schema45.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap51 = schema45.getProperties();
        schema17.setProperties(strMap51);
        schema17.setMinProperties((java.lang.Integer) (-1));
        java.lang.Boolean boolean55 = schema17.getExclusiveMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(int15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(externalDocumentation27);
        org.junit.Assert.assertNull(int28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
    }

    @Test
    public void test01817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01817");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = schema13.getExtensions();
        schema13.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema19 = schema13.minProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01818");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        java.lang.Integer int18 = schema2.getMinLength();
        io.swagger.oas.models.media.Discriminator discriminator19 = schema2.getDiscriminator();
        java.math.BigDecimal bigDecimal20 = schema2.getMaximum();
        schema2.setNullable((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNull(bigDecimal20);
    }

    @Test
    public void test01819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01819");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal36 = null;
        schema32.setMinimum(bigDecimal36);
        java.math.BigDecimal bigDecimal38 = null;
        schema32.setMultipleOf(bigDecimal38);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = schema32.getProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        java.lang.Integer int49 = linkArraySchema46.getMaxProperties();
        boolean boolean50 = schema43.equals((java.lang.Object) linkArraySchema46);
        io.swagger.oas.models.media.Discriminator discriminator51 = linkArraySchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema46.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema52);
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema46.format("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        io.swagger.oas.models.media.Schema schema72 = schema70.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema73 = schema58.addProperties("#/components/schemas/", schema72);
        schema58.setDefault((java.lang.Object) (-1));
        schema58.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema79 = schema58.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray80 = null;
        schema79.addEnumItemObject(linkArray80);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap82 = schema79.getProperties();
        schema55.setProperties(strMap82);
        schema32.setProperties(strMap82);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(strMap82);
    }

    @Test
    public void test01820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01820");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = schema2.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap9 = null;
        schema2.setProperties(strMap9);
        java.math.BigDecimal bigDecimal11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.multipleOf(bigDecimal11);
        schema12.setName("#/components/schemas/");
        java.lang.Class<?> wildcardClass15 = schema12.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test01821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01821");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList13 = schema10.getEnum();
        schema10.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(linkArrayList13);
    }

    @Test
    public void test01822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01822");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        io.swagger.oas.models.media.Discriminator discriminator25 = schema24.getDiscriminator();
        io.swagger.oas.models.media.Schema schema27 = schema24.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema29 = schema24.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema24.getReadOnly();
        java.lang.String str31 = schema24.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "#/components/schemas/" + "'", str31, "#/components/schemas/");
    }

    @Test
    public void test01823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01823");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        io.swagger.oas.models.media.Discriminator discriminator15 = schema14.getDiscriminator();
        java.lang.Boolean boolean16 = schema14.getWriteOnly();
        schema14.setType("*/*");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(discriminator15);
        org.junit.Assert.assertNull(boolean16);
    }

    @Test
    public void test01824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01824");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        java.lang.String str22 = schema17.getFormat();
        schema17.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema26 = schema17.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        schema30.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema38 = schema30.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = schema38.getExtensions();
        io.swagger.oas.models.media.XML xML40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema38.xml(xML40);
        schema38.setExclusiveMaximum((java.lang.Boolean) true);
        schema17.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema46 = schema17.readOnly((java.lang.Boolean) true);
        schema8.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema17);
        schema17.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test01825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01825");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema8.getMultipleOf();
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.xml(xML26);
        io.swagger.oas.models.media.Schema schema29 = schema8.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema29.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean32 = schema29.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01826");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.multipleOf(bigDecimal28);
        java.lang.Integer int30 = schema27.getMaxItems();
        java.lang.String str31 = schema27.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test01827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01827");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema25.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = schema29.minLength((java.lang.Integer) 0);
        java.lang.Boolean boolean32 = schema29.getUniqueItems();
        schema29.setExclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
    }

    @Test
    public void test01828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01828");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema37 = schema14.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.exclusiveMinimum((java.lang.Boolean) true);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList40 = schema37.getEnum();
        java.lang.Class<?> wildcardClass41 = schema37.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(linkArrayList40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test01829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01829");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        schema32.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.lang.String str45 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema47 = schema40.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema32.addProperties("#/components/schemas/", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        schema63.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int78 = schema77.getMaxItems();
        schema77.addExtension("", (java.lang.Object) (short) -1);
        schema77.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema77.deprecated((java.lang.Boolean) true);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        schema85.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema85.xml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        java.math.BigDecimal bigDecimal93 = null;
        schema91.setMultipleOf(bigDecimal93);
        java.lang.Boolean boolean95 = schema91.getNullable();
        schema91.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test01830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01830");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean20 = schema2.getWriteOnly();
        io.swagger.oas.models.media.Schema schema22 = schema2.minItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.additionalProperties(schema23);
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = schema24.getExtensions();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema24.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(linkArrayList26);
    }

    @Test
    public void test01831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01831");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        schema2.setFormat("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        io.swagger.oas.models.media.Schema schema21 = schema19.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int22 = schema21.getMaxItems();
        io.swagger.oas.models.media.Schema schema24 = schema21.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema2.addProperties("", schema21);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        schema27.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str30 = schema27.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(int22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str30, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
    }

    @Test
    public void test01832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01832");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "", "*/*", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(tagSetOptional6);
        org.junit.Assert.assertNotNull(tagSetOptional7);
        org.junit.Assert.assertNotNull(tagSetOptional8);
        org.junit.Assert.assertNotNull(tagSetOptional9);
        org.junit.Assert.assertNotNull(tagSetOptional10);
        org.junit.Assert.assertNotNull(tagSetOptional11);
        org.junit.Assert.assertNotNull(tagSetOptional12);
    }

    @Test
    public void test01833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01833");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        schema13.setUniqueItems((java.lang.Boolean) false);
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema21.description("#/components/schemas/");
        schema13.setDefault((java.lang.Object) "#/components/schemas/");
        java.lang.String str30 = schema13.getFormat();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema33.not(schema44);
        java.math.BigDecimal bigDecimal46 = schema44.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        java.lang.Integer int50 = schema49.getMaxLength();
        schema44.setExample((java.lang.Object) schema49);
        io.swagger.oas.models.media.Schema schema53 = schema49.maxItems((java.lang.Integer) 10);
        schema53.setFormat("");
        schema13.setExample((java.lang.Object) schema53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema57 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema59 = linkArraySchema57.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema59.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema63 = schema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema70 = schema66.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema63.not(schema70);
        java.lang.String[] strArray73 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        io.swagger.oas.models.media.Schema schema76 = schema71.required((java.util.List<java.lang.String>) strList74);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation77 = null;
        schema71.setExternalDocs(externalDocumentation77);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation84 = null;
        io.swagger.oas.models.media.Schema schema85 = schema81.externalDocs(externalDocumentation84);
        schema81.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema89 = schema81.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = schema89.getExtensions();
        io.swagger.oas.models.media.Schema schema91 = schema71.example((java.lang.Object) schema89);
        io.swagger.oas.models.media.Schema schema92 = schema13.not(schema89);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(int50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test01834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01834");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList15 = schema12.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap16 = schema12.getProperties();
        schema12.setType("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema12.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema12.setMaxItems((java.lang.Integer) 1);
        java.lang.String str23 = schema12.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(linkArrayList15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01835");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = linkArraySchema5.getNullable();
        linkArraySchema5.setMaxItems((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(boolean36);
    }

    @Test
    public void test01836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01836");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.minimum(bigDecimal19);
        io.swagger.oas.models.media.XML xML21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.xml(xML21);
        java.math.BigDecimal bigDecimal23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema22.maximum(bigDecimal23);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01837");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean30 = schema29.getReadOnly();
        io.swagger.oas.models.media.Discriminator discriminator31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.discriminator(discriminator31);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = schema32.getExternalDocs();
        java.math.BigDecimal bigDecimal34 = null;
        schema32.setMinimum(bigDecimal34);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(externalDocumentation33);
    }

    @Test
    public void test01838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01838");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        io.swagger.oas.models.media.Schema schema28 = schema23.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal29 = schema28.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
    }

    @Test
    public void test01839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01839");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema25 = schema18.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        boolean boolean35 = schema28.equals((java.lang.Object) linkArraySchema31);
        schema25.setNot((io.swagger.oas.models.media.Schema) linkArraySchema31);
        io.swagger.oas.models.media.Schema schema38 = schema25.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        schema14.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema43 = schema38.nullable((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap44 = schema38.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(strMap44);
    }

    @Test
    public void test01840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01840");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema27.deprecated((java.lang.Boolean) true);
        schema29.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01841");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.Schema schema13 = schema10.uniqueItems((java.lang.Boolean) false);
        java.lang.String str14 = schema13.get$ref();
        schema13.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema13.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test01842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01842");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean25 = schema24.getReadOnly();
        io.swagger.oas.models.media.Schema schema26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema24.additionalProperties(schema26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01843");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema6.properties(strMap7);
        java.lang.String str9 = schema8.getFormat();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema8.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema8.nullable((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal14 = null;
        schema13.setMultipleOf(bigDecimal14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01844");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Schema schema53 = schema51.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int54 = schema53.getMaxItems();
        schema53.addExtension("", (java.lang.Object) (short) -1);
        schema53.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema61 = schema53.deprecated((java.lang.Boolean) true);
        schema39.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema61);
        schema39.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 0\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test01845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01845");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.util.List<java.lang.String> strList16 = schema5.getRequired();
        java.lang.String str17 = schema5.getDescription();
        io.swagger.oas.models.media.Schema schema19 = schema5.minItems((java.lang.Integer) (-1));
        java.lang.Integer int20 = schema5.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
    }

    @Test
    public void test01846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01846");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema18 = schema13.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str19 = schema18.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test01847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01847");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML10 = null;
        linkArraySchema7.setXml(xML10);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema7);
        java.lang.Boolean boolean13 = schema2.getDeprecated();
        io.swagger.oas.models.media.Schema schema15 = schema2.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str16 = schema15.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema15.getAdditionalProperties();
        java.lang.Boolean boolean18 = schema15.getReadOnly();
        io.swagger.oas.models.media.Schema schema20 = schema15.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Integer int21 = schema15.getMaxProperties();
        io.swagger.oas.models.media.Schema schema23 = schema15.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(boolean13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(boolean18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01848");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        java.lang.String str44 = schema8.getDescription();
        io.swagger.oas.models.media.Schema schema46 = schema8.minItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(schema46);
    }

    @Test
    public void test01849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01849");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        io.swagger.oas.models.media.Schema schema37 = schema16.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema37.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        schema39.setDiscriminator(discriminator40);
        schema39.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01850");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema4.$ref("#/components/schemas/");
        schema4.setDescription("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        io.swagger.oas.models.media.Schema schema17 = schema15.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int18 = schema17.getMaxItems();
        schema17.addExtension("", (java.lang.Object) (short) -1);
        schema17.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema27 = schema25.$ref("*/*");
        java.math.BigDecimal bigDecimal28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.minimum(bigDecimal28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        schema32.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema40 = schema32.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema42 = schema40.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema44 = schema40.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean45 = schema40.getReadOnly();
        java.math.BigDecimal bigDecimal46 = null;
        schema40.setMaximum(bigDecimal46);
        java.lang.Boolean boolean48 = schema40.getDeprecated();
        io.swagger.oas.models.media.Schema schema49 = schema27.additionalProperties(schema40);
        schema4.setNot(schema27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(boolean45);
        org.junit.Assert.assertNull(boolean48);
        org.junit.Assert.assertNotNull(schema49);
    }

    @Test
    public void test01851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01851");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        schema39.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema51 = schema39.not(schema50);
        java.math.BigDecimal bigDecimal52 = schema50.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        java.lang.Integer int56 = schema55.getMaxLength();
        schema50.setExample((java.lang.Object) schema55);
        io.swagger.oas.models.media.Schema schema59 = schema55.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema61 = schema59.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema63 = schema59.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema64 = schema14.not(schema63);
        schema63.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML67 = schema63.getXml();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(bigDecimal52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(xML67);
    }

    @Test
    public void test01852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01852");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema22.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema22.getDescription();
        io.swagger.oas.models.media.Schema schema27 = schema22.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema27.setMaxLength((java.lang.Integer) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(schema27);
    }

    @Test
    public void test01853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01853");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema schema26 = schema8.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema8.minProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema30 = schema8.writeOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01854");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        schema31.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema31.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = schema31.deprecated((java.lang.Boolean) true);
        schema31.setWriteOnly((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema31.maximum(bigDecimal40);
        java.math.BigDecimal bigDecimal42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema31.maximum(bigDecimal42);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test01855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01855");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setFormat("*/*");
        java.math.BigDecimal bigDecimal17 = null;
        schema2.setMaximum(bigDecimal17);
        java.lang.Boolean boolean19 = schema2.getNullable();
        io.swagger.oas.models.media.Schema schema21 = schema2.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema21.$ref("hi!");
        schema23.setMaxItems((java.lang.Integer) 100);
        schema23.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(boolean19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test01856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01856");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema11.multipleOf(bigDecimal12);
        java.lang.String str14 = schema13.getTitle();
        java.math.BigDecimal bigDecimal15 = null;
        schema13.setMinimum(bigDecimal15);
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema13.xml(xML17);
        io.swagger.oas.models.media.Schema schema20 = schema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema25.multipleOf(bigDecimal26);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.properties(strMap28);
        io.swagger.oas.models.media.Schema schema31 = schema27.readOnly((java.lang.Boolean) true);
        java.lang.String str32 = schema27.getDescription();
        schema27.setMinProperties((java.lang.Integer) 1);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema27.minimum(bigDecimal35);
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean39 = schema38.getUniqueItems();
        schema13.setAdditionalProperties(schema38);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(boolean39);
    }

    @Test
    public void test01857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01857");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        java.lang.Boolean boolean16 = schema8.getDeprecated();
        schema8.setExclusiveMinimum((java.lang.Boolean) true);
        schema8.setMaxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator32 = null;
        schema31.setDiscriminator(discriminator32);
        java.lang.Boolean boolean34 = schema31.getReadOnly();
        io.swagger.oas.models.media.Schema schema36 = schema31.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema8.additionalProperties(schema36);
        java.lang.String str38 = schema36.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test01858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01858");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        schema27.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema42 = schema34.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema44 = schema34.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema45 = schema27.example((java.lang.Object) 0);
        schema24.setAdditionalProperties(schema27);
        io.swagger.oas.models.media.Discriminator discriminator47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema27.discriminator(discriminator47);
        io.swagger.oas.models.media.Schema schema50 = schema27.exclusiveMaximum((java.lang.Boolean) false);
        schema50.setMaxProperties((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01859");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema23.getMinimum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema23.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema30 = schema23.exclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str31 = schema23.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(linkArrayList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test01860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01860");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema35);
        io.swagger.oas.models.media.Schema schema37 = schema14.addProperties("*/*", schema36);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        java.lang.Integer int46 = linkArraySchema43.getMaxProperties();
        boolean boolean47 = schema40.equals((java.lang.Object) linkArraySchema43);
        io.swagger.oas.models.media.Discriminator discriminator48 = linkArraySchema43.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema43.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema49);
        linkArraySchema43.setMaxProperties((java.lang.Integer) 1);
        linkArraySchema43.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema43.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema57 = schema37.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema43);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema60.externalDocs(externalDocumentation63);
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation67 = schema64.getExternalDocs();
        java.lang.Integer int68 = schema64.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema70 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema72 = linkArraySchema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema72.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation75 = null;
        io.swagger.oas.models.media.Schema schema76 = schema72.externalDocs(externalDocumentation75);
        schema72.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema79 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema81 = linkArraySchema79.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema83 = schema81.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema84 = schema72.not(schema83);
        io.swagger.oas.models.media.Schema schema85 = schema64.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema83);
        java.math.BigDecimal bigDecimal86 = null;
        io.swagger.oas.models.media.Schema schema87 = schema85.multipleOf(bigDecimal86);
        io.swagger.oas.models.media.Schema schema89 = schema85.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str90 = schema85.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap91 = schema85.getProperties();
        io.swagger.oas.models.media.Schema schema92 = linkArraySchema43.properties(strMap91);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation93 = null;
        schema92.setExternalDocs(externalDocumentation93);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(discriminator48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNull(externalDocumentation67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(schema92);
    }

    @Test
    public void test01861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01861");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.exclusiveMinimum((java.lang.Boolean) false);
        java.lang.Integer int23 = schema20.getMinProperties();
        java.math.BigDecimal bigDecimal24 = schema20.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNull(bigDecimal24);
    }

    @Test
    public void test01862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01862");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        schema2.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema2.name("hi!");
        java.lang.String str36 = schema2.getPattern();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema42 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema44 = linkArraySchema42.pattern("#/components/schemas/");
        java.lang.Integer int45 = linkArraySchema42.getMaxProperties();
        boolean boolean46 = schema39.equals((java.lang.Object) linkArraySchema42);
        linkArraySchema42.setDeprecated((java.lang.Boolean) false);
        linkArraySchema42.setName("");
        schema2.setExample((java.lang.Object) "");
        java.util.List<java.lang.String> strList52 = schema2.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(int45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test01863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01863");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema52.not(schema59);
        java.lang.String[] strArray62 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        io.swagger.oas.models.media.Schema schema65 = schema60.required((java.util.List<java.lang.String>) strList63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation72 = null;
        io.swagger.oas.models.media.Schema schema73 = schema69.externalDocs(externalDocumentation72);
        io.swagger.oas.models.media.Schema schema75 = schema73.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int76 = schema75.getMaxItems();
        schema75.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = null;
        schema75.setExtensions(strMap80);
        io.swagger.oas.models.media.Schema schema82 = schema60.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema75);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema83 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema83.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema87 = schema85.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation88 = null;
        io.swagger.oas.models.media.Schema schema89 = schema85.externalDocs(externalDocumentation88);
        io.swagger.oas.models.media.Schema schema91 = schema89.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int92 = schema91.getMaxItems();
        schema91.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap96 = schema91.getExtensions();
        schema60.setExtensions(strMap96);
        schema45.setExtensions(strMap96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(int76);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNull(int92);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test01864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01864");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setMinLength((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList16 = schema10.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        schema19.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema27 = schema19.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema29 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema31 = schema27.minLength((java.lang.Integer) 1);
        java.lang.Boolean boolean32 = schema27.getReadOnly();
        schema10.setAdditionalProperties(schema27);
        schema27.set$ref("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema37 = schema27.name("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(boolean32);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01865");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal13 = null;
        schema12.setMultipleOf(bigDecimal13);
        java.lang.String str15 = schema12.getTitle();
        io.swagger.oas.models.media.Schema schema17 = schema12.minLength((java.lang.Integer) 100);
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01866");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.lang.Object obj21 = schema20.getExample();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema23.minLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01867");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema schema46 = schema42.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation52 = null;
        io.swagger.oas.models.media.Schema schema53 = schema49.externalDocs(externalDocumentation52);
        io.swagger.oas.models.media.Schema schema55 = schema53.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int56 = schema55.getMaxItems();
        schema55.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema63.externalDocs(externalDocumentation66);
        java.lang.String str68 = schema63.getFormat();
        io.swagger.oas.models.media.Schema schema70 = schema63.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema55.addProperties("#/components/schemas/", schema70);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        schema75.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema82 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema84 = linkArraySchema82.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema84.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema87 = schema75.not(schema86);
        schema86.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema90 = schema71.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        java.math.BigDecimal bigDecimal91 = schema71.getMaximum();
        boolean boolean92 = schema42.equals((java.lang.Object) bigDecimal91);
        io.swagger.oas.models.media.Schema schema94 = schema42.minItems((java.lang.Integer) 1);
        java.lang.Object obj95 = schema42.getExample();
        schema42.setDeprecated((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(int56);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNull(bigDecimal91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(obj95);
    }

    @Test
    public void test01868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01868");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema5.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema5.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = schema18.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema20.readOnly((java.lang.Boolean) false);
        schema18.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema20);
        linkArraySchema5.setExample((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema5.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.Boolean boolean30 = schema29.getWriteOnly();
        schema29.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(boolean30);
    }

    @Test
    public void test01869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01869");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema22 = schema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema15.example((java.lang.Object) schema18);
        io.swagger.oas.models.media.Schema schema25 = schema15.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema15.xml(xML26);
        io.swagger.oas.models.media.XML xML28 = null;
        io.swagger.oas.models.media.Schema schema29 = schema27.xml(xML28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema32.externalDocs(externalDocumentation35);
        io.swagger.oas.models.media.Schema schema38 = schema36.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int39 = schema38.getMaxItems();
        schema38.addExtension("", (java.lang.Object) (short) -1);
        schema38.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema46 = schema38.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema46.$ref("*/*");
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = schema46.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        java.lang.Integer int53 = linkArraySchema50.getMaxProperties();
        java.lang.Integer int54 = linkArraySchema50.getMaxLength();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema50.getNot();
        schema46.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema50);
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema50.deprecated((java.lang.Boolean) true);
        schema29.setNot(schema58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        java.lang.Integer int64 = schema63.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        java.lang.Integer int68 = linkArraySchema65.getMaxProperties();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema65.readOnly((java.lang.Boolean) false);
        schema63.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema65);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        schema75.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema82 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema84 = linkArraySchema82.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema86 = schema84.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema87 = schema75.not(schema86);
        schema86.setUniqueItems((java.lang.Boolean) false);
        schema86.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema92 = schema63.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema86);
        schema92.set$ref("*/*");
        schema92.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema97 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema92);
        io.swagger.oas.models.media.Schema schema99 = schema97.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(int39);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(int64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(int68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema99);
    }

    @Test
    public void test01870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01870");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        java.lang.String str13 = linkArraySchema5.getType();
        java.lang.String str14 = linkArraySchema5.get$ref();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test01871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01871");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        java.lang.Integer int32 = schema31.getMaxItems();
        java.lang.Boolean boolean33 = schema31.getNullable();
        io.swagger.oas.models.media.XML xML34 = schema31.getXml();
        io.swagger.oas.models.media.Schema schema36 = schema31.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema36.setDiscriminator(discriminator37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertNull(boolean33);
        org.junit.Assert.assertNull(xML34);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01872");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        java.lang.String str8 = schema2.getType();
        io.swagger.oas.models.media.Schema schema10 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema12 = schema2.uniqueItems((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test01873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01873");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        java.lang.Integer int26 = schema24.getMinLength();
        java.lang.Boolean boolean27 = schema24.getWriteOnly();
        java.lang.Integer int28 = schema24.getMinProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNull(boolean27);
        org.junit.Assert.assertNull(int28);
    }

    @Test
    public void test01874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01874");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.media.Discriminator discriminator37 = null;
        schema29.setDiscriminator(discriminator37);
        schema29.setMaxProperties((java.lang.Integer) 100);
        java.lang.String str41 = schema29.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test01875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01875");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        java.lang.String str32 = schema28.getFormat();
        io.swagger.oas.models.media.XML xML33 = null;
        schema28.setXml(xML33);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test01876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01876");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        linkArraySchema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = linkArraySchema5.getXml();
        java.lang.Boolean boolean16 = linkArraySchema5.getExclusiveMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = linkArraySchema5.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNull(externalDocumentation17);
    }

    @Test
    public void test01877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01877");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema9 = schema7.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema7.externalDocs(externalDocumentation10);
        io.swagger.oas.models.media.Schema schema13 = schema11.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int14 = schema13.getMaxItems();
        schema13.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema21.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema13.addProperties("#/components/schemas/", schema28);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        schema33.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema45 = schema33.not(schema44);
        schema44.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema48 = schema29.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema44);
        java.math.BigDecimal bigDecimal49 = schema29.getMaximum();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema0.addProperties("", schema29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.deprecated((java.lang.Boolean) false);
        schema60.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML65 = schema60.getXml();
        java.math.BigDecimal bigDecimal66 = null;
        io.swagger.oas.models.media.Schema schema67 = schema60.minimum(bigDecimal66);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema0.not(schema67);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        schema71.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema78 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema80 = linkArraySchema78.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema80.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema83 = schema71.not(schema82);
        java.lang.String str84 = schema82.getType();
        java.lang.Integer int85 = schema82.getMaxItems();
        io.swagger.oas.models.media.Schema schema86 = linkArraySchema0.additionalProperties(schema82);
        io.swagger.oas.models.media.Schema schema88 = schema82.minItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema90 = schema82.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema92 = schema82.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Boolean boolean93 = schema92.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(int14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(bigDecimal49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(xML65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(int85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(boolean93);
    }

    @Test
    public void test01878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01878");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema21.pattern("");
        java.lang.String str25 = schema21.get$ref();
        java.lang.Integer int26 = schema21.getMaxItems();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(int26);
    }

    @Test
    public void test01879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01879");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema16.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = schema20.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema29 = schema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema36 = schema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema29.not(schema36);
        io.swagger.oas.models.media.Schema schema39 = schema37.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        java.lang.String str48 = schema43.getFormat();
        io.swagger.oas.models.media.Schema schema50 = schema43.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        java.lang.Integer int59 = linkArraySchema56.getMaxProperties();
        boolean boolean60 = schema53.equals((java.lang.Object) linkArraySchema56);
        schema50.setNot((io.swagger.oas.models.media.Schema) linkArraySchema56);
        io.swagger.oas.models.media.Schema schema62 = schema39.addProperties("", schema50);
        io.swagger.oas.models.media.Schema schema64 = schema39.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema66 = schema39.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema39.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int78 = schema77.getMaxItems();
        io.swagger.oas.models.media.Schema schema80 = schema77.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema81 = schema39.example((java.lang.Object) schema77);
        io.swagger.oas.models.media.Schema schema82 = schema20.not(schema39);
        schema82.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(int59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test01880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01880");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        java.math.BigDecimal bigDecimal21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.maximum(bigDecimal21);
        java.lang.String str23 = schema22.getType();
        schema22.setPattern("hi!");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test01881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01881");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        schema32.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.lang.String str45 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema47 = schema40.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema32.addProperties("#/components/schemas/", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        schema63.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int78 = schema77.getMaxItems();
        schema77.addExtension("", (java.lang.Object) (short) -1);
        schema77.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema77.deprecated((java.lang.Boolean) true);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        schema85.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema85.xml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        java.math.BigDecimal bigDecimal93 = null;
        schema91.setMultipleOf(bigDecimal93);
        java.lang.Integer int95 = schema91.getMaxProperties();
        schema91.setTitle("");
        java.lang.Boolean boolean98 = schema91.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(int95);
        org.junit.Assert.assertNull(boolean98);
    }

    @Test
    public void test01882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01882");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        java.lang.Integer int62 = schema61.getMaxItems();
        java.lang.Object obj63 = schema61.getExample();
        io.swagger.oas.models.media.Schema schema65 = schema61.$ref("");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        schema65.setExternalDocs(externalDocumentation66);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNull(obj63);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test01883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01883");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        io.swagger.oas.models.media.Schema schema16 = schema14.type("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema16.minimum(bigDecimal17);
        java.lang.Class<?> wildcardClass19 = schema18.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test01884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01884");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema schema14 = schema8.maxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        java.lang.Integer int23 = linkArraySchema20.getMaxProperties();
        boolean boolean24 = schema17.equals((java.lang.Object) linkArraySchema20);
        io.swagger.oas.models.media.Discriminator discriminator25 = linkArraySchema20.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator26 = null;
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema20.discriminator(discriminator26);
        java.math.BigDecimal bigDecimal28 = null;
        linkArraySchema20.setMultipleOf(bigDecimal28);
        schema14.setNot((io.swagger.oas.models.media.Schema) linkArraySchema20);
        io.swagger.oas.models.media.Schema schema31 = schema14.getNot();
        java.util.List<java.lang.String> strList32 = schema14.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(int23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(discriminator25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test01885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01885");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        schema9.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation29 = null;
        io.swagger.oas.models.media.Schema schema30 = schema26.externalDocs(externalDocumentation29);
        io.swagger.oas.models.media.Schema schema32 = schema30.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int33 = schema32.getMaxItems();
        schema32.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema38 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema42 = schema40.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema40.externalDocs(externalDocumentation43);
        java.lang.String str45 = schema40.getFormat();
        io.swagger.oas.models.media.Schema schema47 = schema40.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema32.addProperties("#/components/schemas/", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema61.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema52.not(schema63);
        schema63.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema67 = schema48.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema63);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema73 = schema71.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation74 = null;
        io.swagger.oas.models.media.Schema schema75 = schema71.externalDocs(externalDocumentation74);
        io.swagger.oas.models.media.Schema schema77 = schema75.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int78 = schema77.getMaxItems();
        schema77.addExtension("", (java.lang.Object) (short) -1);
        schema77.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema85 = schema77.deprecated((java.lang.Boolean) true);
        schema63.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema85);
        schema85.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.XML xML89 = null;
        io.swagger.oas.models.media.Schema schema90 = schema85.xml(xML89);
        io.swagger.oas.models.media.Schema schema91 = schema9.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema90);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap92 = schema91.getProperties();
        java.math.BigDecimal bigDecimal93 = null;
        schema91.setMultipleOf(bigDecimal93);
        java.lang.Boolean boolean95 = schema91.getNullable();
        java.math.BigDecimal bigDecimal96 = null;
        schema91.setMinimum(bigDecimal96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(int33);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNull(int78);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(boolean95);
    }

    @Test
    public void test01886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01886");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        io.swagger.oas.models.media.Schema schema25 = schema2.pattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema25.set$ref("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
    }

    @Test
    public void test01887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01887");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}";
    }

    @Test
    public void test01888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01888");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        java.math.BigDecimal bigDecimal49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema48.minimum(bigDecimal49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema48.setExternalDocs(externalDocumentation51);
        schema48.setMinLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
    }

    @Test
    public void test01889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01889");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        schema18.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema26 = schema18.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = schema26.getExtensions();
        io.swagger.oas.models.media.Schema schema28 = schema14.addProperties("#/components/schemas/", schema26);
        schema28.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str31 = schema28.getTitle();
        java.util.List<java.lang.String> strList32 = schema28.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test01890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01890");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        java.math.BigDecimal bigDecimal22 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        boolean boolean32 = schema25.equals((java.lang.Object) linkArraySchema28);
        io.swagger.oas.models.media.Discriminator discriminator33 = linkArraySchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema28.nullable((java.lang.Boolean) false);
        schema16.setExample((java.lang.Object) schema37);
        linkArraySchema5.setDefault((java.lang.Object) schema37);
        linkArraySchema5.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema5.writeOnly((java.lang.Boolean) false);
        schema43.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema47 = schema43.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: 1\n    pattern: \n    maxItems: 10\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: true\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema43.set$ref("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test01891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01891");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        java.math.BigDecimal bigDecimal9 = null;
        schema2.setMaximum(bigDecimal9);
        java.lang.String str11 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema13 = schema2.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        schema13.setExternalDocs(externalDocumentation14);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01892");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        java.lang.String str8 = schema2.getType();
        io.swagger.oas.models.media.Schema schema10 = schema2.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema2.externalDocs(externalDocumentation11);
        io.swagger.oas.models.media.Schema schema14 = schema12.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema16 = schema12.type("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema16.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema22 = schema16.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema24 = schema22.exclusiveMinimum((java.lang.Boolean) false);
        schema24.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
    }

    @Test
    public void test01893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01893");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema18.properties(strMap19);
        io.swagger.oas.models.media.Schema schema22 = schema20.uniqueItems((java.lang.Boolean) false);
        schema22.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema26 = schema22.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Boolean boolean27 = schema22.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(boolean27);
    }

    @Test
    public void test01894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01894");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray24 = null;
        schema23.addEnumItemObject(linkArray24);
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal28 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema30 = schema23.maxItems((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(bigDecimal28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01895");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema18.getFormat();
        io.swagger.oas.models.media.Schema schema25 = schema18.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        java.lang.Integer int34 = linkArraySchema31.getMaxProperties();
        boolean boolean35 = schema28.equals((java.lang.Object) linkArraySchema31);
        schema25.setNot((io.swagger.oas.models.media.Schema) linkArraySchema31);
        io.swagger.oas.models.media.Schema schema38 = schema25.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema40 = schema38.readOnly((java.lang.Boolean) true);
        schema14.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        io.swagger.oas.models.media.Schema schema43 = schema14.$ref("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema14.externalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        java.lang.Integer int54 = linkArraySchema51.getMaxProperties();
        boolean boolean55 = schema48.equals((java.lang.Object) linkArraySchema51);
        io.swagger.oas.models.media.Discriminator discriminator56 = linkArraySchema51.getDiscriminator();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema51.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema51.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link64 = null;
        io.swagger.oas.annotations.links.Link[] linkArray65 = new io.swagger.oas.annotations.links.Link[] { link64 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap66 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray65);
        linkArraySchema61.addEnumItemObject(linkArray65);
        schema60.addEnumItemObject(linkArray65);
        schema45.addEnumItemObject(linkArray65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(int54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(linkArray65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test01896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01896");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        linkArraySchema15.setNullable((java.lang.Boolean) false);
        java.lang.Integer int24 = linkArraySchema15.getMinProperties();
        java.lang.String str25 = linkArraySchema15.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(int24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01897");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.deprecated((java.lang.Boolean) true);
        schema27.setMinItems((java.lang.Integer) 100);
        java.lang.Boolean boolean30 = schema27.getExclusiveMaximum();
        java.lang.Class<?> wildcardClass31 = schema27.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(boolean30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test01898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01898");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema13 = schema2.type("hi!");
        schema2.setWriteOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01899");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        java.lang.String str26 = schema8.getFormat();
        io.swagger.oas.models.media.Schema schema28 = schema8.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema30 = schema8.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema31 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema35 = schema33.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema33.externalDocs(externalDocumentation36);
        io.swagger.oas.models.media.Schema schema39 = schema37.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int40 = schema39.getMaxItems();
        schema39.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        java.lang.String str52 = schema47.getFormat();
        io.swagger.oas.models.media.Schema schema54 = schema47.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema39.addProperties("#/components/schemas/", schema54);
        io.swagger.oas.models.media.Schema schema57 = schema54.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.externalDocs(externalDocumentation58);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema66 = schema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema67 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema69 = linkArraySchema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema71 = schema69.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema73 = schema69.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema66.not(schema73);
        java.lang.String[] strArray76 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        io.swagger.oas.models.media.Schema schema79 = schema74.required((java.util.List<java.lang.String>) strList77);
        schema59.setRequired((java.util.List<java.lang.String>) strList77);
        io.swagger.oas.models.media.Schema schema81 = schema8.required((java.util.List<java.lang.String>) strList77);
        schema81.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean84 = schema81.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema86 = schema81.maxItems((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema88 = schema81.minLength((java.lang.Integer) 100);
        java.lang.Boolean boolean89 = schema81.getWriteOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNull(boolean89);
    }

    @Test
    public void test01900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01900");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        schema31.setPattern("");
        java.math.BigDecimal bigDecimal34 = null;
        schema31.setMultipleOf(bigDecimal34);
        java.math.BigDecimal bigDecimal36 = schema31.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(bigDecimal36);
    }

    @Test
    public void test01901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01901");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        schema2.setExternalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        java.math.BigDecimal bigDecimal27 = schema21.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = linkArraySchema33.getMaxProperties();
        boolean boolean37 = schema30.equals((java.lang.Object) linkArraySchema33);
        io.swagger.oas.models.media.Discriminator discriminator38 = linkArraySchema33.getDiscriminator();
        io.swagger.oas.models.media.Schema schema40 = linkArraySchema33.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema33.nullable((java.lang.Boolean) false);
        schema21.setExample((java.lang.Object) schema42);
        schema2.setNot(schema42);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        io.swagger.oas.models.media.Discriminator discriminator52 = schema47.getDiscriminator();
        io.swagger.oas.models.media.Schema schema53 = schema42.additionalProperties(schema47);
        io.swagger.oas.models.media.Schema schema55 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema57 = schema47.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema59 = schema57.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema62 = linkArraySchema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema64 = schema62.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema62.externalDocs(externalDocumentation65);
        io.swagger.oas.models.media.Schema schema68 = schema66.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int69 = schema68.getMaxItems();
        schema68.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema74 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema76 = linkArraySchema74.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema78 = schema76.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation79 = null;
        io.swagger.oas.models.media.Schema schema80 = schema76.externalDocs(externalDocumentation79);
        java.lang.String str81 = schema76.getFormat();
        io.swagger.oas.models.media.Schema schema83 = schema76.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema84 = schema68.addProperties("#/components/schemas/", schema83);
        io.swagger.oas.models.media.Schema schema86 = schema68.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema88 = schema68.minProperties((java.lang.Integer) 100);
        boolean boolean89 = schema59.equals((java.lang.Object) schema68);
        java.math.BigDecimal bigDecimal90 = schema68.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(bigDecimal27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(discriminator38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(discriminator52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(int69);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNull(bigDecimal90);
    }

    @Test
    public void test01902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01902");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.lang.Integer int44 = schema24.getMinLength();
        io.swagger.oas.models.media.XML xML45 = schema24.getXml();
        java.math.BigDecimal bigDecimal46 = schema24.getMultipleOf();
        io.swagger.oas.models.media.Schema schema48 = schema24.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema50 = schema48.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema52 = schema50.writeOnly((java.lang.Boolean) true);
        java.lang.String str53 = schema52.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int44);
        org.junit.Assert.assertNull(xML45);
        org.junit.Assert.assertNull(bigDecimal46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "#/components/schemas/" + "'", str53, "#/components/schemas/");
    }

    @Test
    public void test01903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01903");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        linkArraySchema5.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML15 = linkArraySchema5.getXml();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = null;
        linkArraySchema5.setExtensions(strMap16);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(xML15);
    }

    @Test
    public void test01904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01904");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.name("#/components/schemas/");
        schema10.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema13.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        java.lang.String str26 = schema21.getFormat();
        schema21.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema30 = schema21.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        schema34.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema42 = schema34.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = schema42.getExtensions();
        io.swagger.oas.models.media.XML xML44 = null;
        io.swagger.oas.models.media.Schema schema45 = schema42.xml(xML44);
        schema42.setExclusiveMaximum((java.lang.Boolean) true);
        schema21.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema50 = schema21.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema52 = schema21.pattern("");
        schema18.setAdditionalProperties(schema52);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema60 = schema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema60.not(schema67);
        io.swagger.oas.annotations.links.Link[] linkArray69 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap70 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray69);
        io.swagger.oas.annotations.links.Link link71 = null;
        io.swagger.oas.annotations.links.Link[] linkArray72 = new io.swagger.oas.annotations.links.Link[] { link71 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap73 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray72);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray72);
        io.swagger.oas.annotations.links.Link[][] linkArray75 = new io.swagger.oas.annotations.links.Link[][] { linkArray69, linkArray72 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList76 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList76, linkArray75);
        schema68.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        schema52.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        schema10.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList76);
        java.lang.String[] strArray83 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        schema10.setRequired((java.util.List<java.lang.String>) strList84);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(linkArray69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(linkArray72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(linkArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test01905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01905");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema47 = schema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema54 = schema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema47.not(schema54);
        io.swagger.oas.annotations.links.Link[] linkArray56 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap57 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray56);
        io.swagger.oas.annotations.links.Link link58 = null;
        io.swagger.oas.annotations.links.Link[] linkArray59 = new io.swagger.oas.annotations.links.Link[] { link58 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap60 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap61 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray59);
        io.swagger.oas.annotations.links.Link[][] linkArray62 = new io.swagger.oas.annotations.links.Link[][] { linkArray56, linkArray59 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList63 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList63, linkArray62);
        schema55.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList63);
        schema39.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList63);
        schema39.setMaxItems((java.lang.Integer) 10);
        java.util.List<java.lang.String> strList69 = schema39.getRequired();
        java.math.BigDecimal bigDecimal70 = null;
        schema39.setMaximum(bigDecimal70);
        java.math.BigDecimal bigDecimal72 = null;
        schema39.setMultipleOf(bigDecimal72);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(linkArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(linkArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(linkArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList69);
    }

    @Test
    public void test01906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01906");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        schema8.setType("hi!");
        io.swagger.oas.models.media.Schema schema49 = schema8.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema51 = schema8.deprecated((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01907");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = schema23.getMinimum();
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList26 = schema23.getEnum();
        io.swagger.oas.models.media.Schema schema28 = schema23.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema29 = schema28.getNot();
        // The following exception was thrown during execution in test generation
        try {
            io.swagger.oas.models.media.Schema schema31 = schema29.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNull(linkArrayList26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(schema29);
    }

    @Test
    public void test01908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01908");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema8.getExclusiveMaximum();
        io.swagger.oas.models.media.Schema schema27 = schema8.readOnly((java.lang.Boolean) false);
        java.lang.Boolean boolean28 = schema27.getReadOnly();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + false + "'", boolean28, false);
    }

    @Test
    public void test01909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01909");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        java.lang.Object obj21 = schema20.getExample();
        io.swagger.oas.models.media.Schema schema23 = schema20.pattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema25 = schema20.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema26.readOnly((java.lang.Boolean) false);
        linkArraySchema26.setMinLength((java.lang.Integer) 100);
        linkArraySchema26.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema36 = schema20.not((io.swagger.oas.models.media.Schema) linkArraySchema26);
        java.math.BigDecimal bigDecimal37 = null;
        schema36.setMultipleOf(bigDecimal37);
        schema36.setPattern("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(obj21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01910");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema schema11 = schema8.title("");
        java.math.BigDecimal bigDecimal12 = null;
        schema8.setMinimum(bigDecimal12);
        java.lang.Boolean boolean14 = schema8.getUniqueItems();
        schema8.setDescription("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Discriminator discriminator17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.discriminator(discriminator17);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
        org.junit.Assert.assertNotNull(schema18);
    }

    @Test
    public void test01911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01911");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema22 = schema9.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = schema22.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema22.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema28 = schema22.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema30 = schema22.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
    }

    @Test
    public void test01912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01912");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01913");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = null;
        io.swagger.oas.models.media.Schema schema14 = schema10.externalDocs(externalDocumentation13);
        io.swagger.oas.models.media.Schema schema16 = schema14.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema2.addProperties("#/components/schemas/", schema16);
        schema2.setDefault((java.lang.Object) (-1));
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        java.lang.Integer int26 = schema25.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        java.lang.Integer int30 = linkArraySchema27.getMaxProperties();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema27.readOnly((java.lang.Boolean) false);
        schema25.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema27);
        schema2.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema25);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema53 = schema38.addProperties("#/components/schemas/", schema52);
        schema38.setDefault((java.lang.Object) (-1));
        java.lang.Boolean boolean56 = schema38.getWriteOnly();
        java.lang.Object obj57 = schema38.getExample();
        schema25.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema38);
        java.math.BigDecimal bigDecimal59 = schema25.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(int26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(boolean56);
        org.junit.Assert.assertNull(obj57);
        org.junit.Assert.assertNull(bigDecimal59);
    }

    @Test
    public void test01914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01914");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = schema5.getExternalDocs();
        io.swagger.oas.models.media.XML xML17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema5.xml(xML17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema18.additionalProperties(schema21);
        schema30.setName("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList33 = schema30.getRequired();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(externalDocumentation16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(strList33);
    }

    @Test
    public void test01915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01915");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.Integer int10 = schema6.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        schema14.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema26 = schema14.not(schema25);
        io.swagger.oas.models.media.Schema schema27 = schema6.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema25);
        io.swagger.oas.models.media.Schema schema29 = schema27.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema27.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
    }

    @Test
    public void test01916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01916");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        schema24.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema43 = schema33.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema44 = schema24.example((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        java.lang.String str47 = schema44.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test01917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01917");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema14 = schema2.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMaximum();
        java.lang.Boolean boolean16 = schema13.getExclusiveMinimum();
        schema13.setPattern("hi!");
        io.swagger.oas.models.media.Schema schema20 = schema13.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema20.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test01918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01918");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        java.lang.Integer int12 = schema11.getMaxItems();
        java.math.BigDecimal bigDecimal13 = schema11.getMinimum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNull(bigDecimal13);
    }

    @Test
    public void test01919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01919");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("hi!");
        java.lang.Integer int7 = linkArraySchema0.getMinProperties();
        java.lang.String str8 = linkArraySchema0.getTitle();
        java.lang.Boolean boolean9 = linkArraySchema0.getNullable();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema0.exclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema13 = schema11.readOnly((java.lang.Boolean) true);
        java.util.List<java.lang.String> strList14 = schema11.getRequired();
        java.lang.Boolean boolean15 = schema11.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(boolean9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNull(boolean15);
    }

    @Test
    public void test01920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01920");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        schema2.setFormat("");
        schema2.setDeprecated((java.lang.Boolean) true);
        java.lang.Boolean boolean14 = schema2.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + true + "'", boolean14, true);
    }

    @Test
    public void test01921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01921");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema24 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema26 = linkArraySchema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema28 = schema26.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        java.lang.Integer int32 = linkArraySchema29.getMaxProperties();
        boolean boolean33 = schema26.equals((java.lang.Object) linkArraySchema29);
        io.swagger.oas.models.media.Discriminator discriminator34 = linkArraySchema29.getDiscriminator();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema29.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema15.addProperties("hi!", schema36);
        java.lang.String str38 = schema37.getFormat();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema37.properties(strMap39);
        java.lang.Boolean boolean41 = schema37.getReadOnly();
        io.swagger.oas.models.media.Schema schema43 = schema37.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str44 = schema43.getDescription();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(int32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(discriminator34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test01922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01922");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema28 = schema2.uniqueItems((java.lang.Boolean) true);
        schema28.setPattern("");
        schema28.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema28.setDeprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema28.maximum(bigDecimal35);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.String str58 = schema53.getFormat();
        io.swagger.oas.models.media.Schema schema60 = schema53.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema61 = schema45.addProperties("#/components/schemas/", schema60);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.externalDocs(externalDocumentation68);
        schema65.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema77 = schema65.not(schema76);
        schema76.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema80 = schema61.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema76);
        io.swagger.oas.models.media.Schema schema82 = schema80.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation83 = null;
        schema82.setExternalDocs(externalDocumentation83);
        java.lang.Boolean boolean85 = schema82.getExclusiveMinimum();
        io.swagger.oas.models.media.Schema schema86 = schema36.example((java.lang.Object) boolean85);
        schema86.setUniqueItems((java.lang.Boolean) false);
        schema86.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNull(boolean85);
        org.junit.Assert.assertNotNull(schema86);
    }

    @Test
    public void test01923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01923");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        java.math.BigDecimal bigDecimal5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema4.multipleOf(bigDecimal5);
        io.swagger.oas.models.media.Schema schema8 = schema6.maxLength((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal9 = null;
        io.swagger.oas.models.media.Schema schema10 = schema6.multipleOf(bigDecimal9);
        java.lang.Integer int11 = schema6.getMinProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        io.swagger.oas.models.media.Schema schema20 = schema18.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int21 = schema20.getMaxItems();
        schema20.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        java.lang.String str33 = schema28.getFormat();
        io.swagger.oas.models.media.Schema schema35 = schema28.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema20.addProperties("#/components/schemas/", schema35);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema39.externalDocs(externalDocumentation42);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int46 = schema45.getMaxItems();
        schema45.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = null;
        schema45.setExtensions(strMap50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema52.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema54.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema54.externalDocs(externalDocumentation57);
        io.swagger.oas.models.media.Schema schema60 = schema58.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = schema58.getExternalDocs();
        java.lang.Integer int62 = schema58.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema64 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema64.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema68 = schema66.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.externalDocs(externalDocumentation69);
        schema66.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema66.not(schema77);
        io.swagger.oas.models.media.Schema schema79 = schema58.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema77);
        io.swagger.oas.annotations.links.Link[] linkArray80 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap81 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray80);
        io.swagger.oas.annotations.links.Link link82 = null;
        io.swagger.oas.annotations.links.Link[] linkArray83 = new io.swagger.oas.annotations.links.Link[] { link82 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap84 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray83);
        io.swagger.oas.annotations.links.Link link85 = null;
        io.swagger.oas.annotations.links.Link[] linkArray86 = new io.swagger.oas.annotations.links.Link[] { link85 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap87 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray86);
        io.swagger.oas.annotations.links.Link[] linkArray88 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap89 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray88);
        io.swagger.oas.annotations.links.Link[][] linkArray90 = new io.swagger.oas.annotations.links.Link[][] { linkArray80, linkArray83, linkArray86, linkArray88 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList91 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList91, linkArray90);
        schema77.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList91);
        schema45.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList91);
        schema20.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList91);
        java.lang.Object obj96 = null;
        io.swagger.oas.models.media.Schema schema97 = schema20.example(obj96);
        schema6.setNot(schema97);
        java.lang.String str99 = schema97.getFormat();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(int11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(int21);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(externalDocumentation61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(linkArray80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(linkArray83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(linkArray86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(linkArray88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(linkArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test01924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01924");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        schema5.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema5.setMaxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema11 = schema5.minLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        schema5.setDiscriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = schema5.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema17 = schema5.readOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
    }

    @Test
    public void test01925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01925");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        io.swagger.oas.models.media.XML xML39 = schema24.getXml();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema44 = schema42.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema46 = schema42.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema47 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema47.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema49.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema53 = schema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema46.not(schema53);
        java.lang.String str55 = schema46.getType();
        io.swagger.oas.models.media.Discriminator discriminator56 = schema46.getDiscriminator();
        java.math.BigDecimal bigDecimal57 = schema46.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema58 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema60 = linkArraySchema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema62 = schema60.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema64 = schema60.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema65 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema67 = linkArraySchema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema69 = schema67.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema71 = schema67.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema64.not(schema71);
        java.lang.String[] strArray74 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        io.swagger.oas.models.media.Schema schema77 = schema72.required((java.util.List<java.lang.String>) strList75);
        schema46.setRequired((java.util.List<java.lang.String>) strList75);
        schema24.setRequired((java.util.List<java.lang.String>) strList75);
        java.math.BigDecimal bigDecimal80 = null;
        schema24.setMultipleOf(bigDecimal80);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(xML39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(discriminator56);
        org.junit.Assert.assertNull(bigDecimal57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(schema77);
    }

    @Test
    public void test01926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01926");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        schema16.addEnumItemObject(linkArray33);
        io.swagger.oas.models.media.Schema schema37 = schema16.minProperties((java.lang.Integer) 100);
        schema37.setMinItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal40 = schema37.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(bigDecimal40);
    }

    @Test
    public void test01927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01927");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema18.externalDocs(externalDocumentation23);
        java.math.BigDecimal bigDecimal25 = schema24.getMinimum();
        schema24.setMinLength((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema28.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation39 = null;
        io.swagger.oas.models.media.Schema schema40 = schema36.externalDocs(externalDocumentation39);
        schema36.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema43 = schema33.additionalProperties(schema36);
        io.swagger.oas.models.media.Schema schema44 = schema24.example((java.lang.Object) schema36);
        io.swagger.oas.models.media.Schema schema46 = schema44.nullable((java.lang.Boolean) false);
        schema46.set$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        java.lang.Object obj49 = null;
        boolean boolean50 = schema46.equals(obj49);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = schema46.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(bigDecimal25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(externalDocumentation51);
    }

    @Test
    public void test01928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01928");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        schema23.setFormat("*/*");
        io.swagger.oas.models.media.Schema schema27 = schema23.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema29 = schema27.writeOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema31 = schema27.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: false\n    xml: null\n}");
        java.lang.Object obj32 = schema27.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(obj32);
    }

    @Test
    public void test01929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01929");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        schema6.addExtension("*/*", (java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema16.exclusiveMaximum((java.lang.Boolean) false);
        java.math.BigDecimal bigDecimal22 = schema21.getMaximum();
        io.swagger.oas.models.media.Schema schema24 = schema21.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema21.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema28 = schema21.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01930");
        io.swagger.jaxrs2.OperationParser.COMMA = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: true\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: #/components/schemas/\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01931");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        schema16.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema16.not(schema27);
        java.math.BigDecimal bigDecimal29 = schema27.getMaximum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap30 = null;
        schema27.setProperties(strMap30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        java.lang.String str53 = schema48.getFormat();
        io.swagger.oas.models.media.Schema schema55 = schema48.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema56 = schema40.addProperties("#/components/schemas/", schema55);
        io.swagger.oas.models.media.Schema schema58 = schema55.$ref("hi!");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema58.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema61 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema61.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema65 = schema63.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema75 = schema67.not(schema74);
        java.lang.String[] strArray77 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        io.swagger.oas.models.media.Schema schema80 = schema75.required((java.util.List<java.lang.String>) strList78);
        schema60.setRequired((java.util.List<java.lang.String>) strList78);
        schema27.setRequired((java.util.List<java.lang.String>) strList78);
        linkArraySchema5.setRequired((java.util.List<java.lang.String>) strList78);
        java.math.BigDecimal bigDecimal84 = null;
        io.swagger.oas.models.media.Schema schema85 = linkArraySchema5.multipleOf(bigDecimal84);
        java.math.BigDecimal bigDecimal86 = schema85.getMultipleOf();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(bigDecimal29);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNull(bigDecimal86);
    }

    @Test
    public void test01932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01932");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        linkArraySchema0.setMinLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema0.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema13.externalDocs(externalDocumentation16);
        io.swagger.oas.models.media.Schema schema19 = schema17.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int20 = schema19.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        schema23.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema23.not(schema34);
        schema19.setNot(schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema41 = schema39.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema43 = schema39.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema51 = schema43.not(schema50);
        io.swagger.oas.models.media.Schema schema52 = schema19.not(schema50);
        schema9.addExtension("", (java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema59 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema59.pattern("#/components/schemas/");
        java.lang.Integer int62 = linkArraySchema59.getMaxProperties();
        boolean boolean63 = schema56.equals((java.lang.Object) linkArraySchema59);
        io.swagger.oas.models.media.Discriminator discriminator64 = linkArraySchema59.getDiscriminator();
        io.swagger.oas.models.media.Schema schema66 = linkArraySchema59.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema68 = linkArraySchema59.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema69 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema71 = linkArraySchema69.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link72 = null;
        io.swagger.oas.annotations.links.Link[] linkArray73 = new io.swagger.oas.annotations.links.Link[] { link72 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap74 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray73);
        linkArraySchema69.addEnumItemObject(linkArray73);
        schema68.addEnumItemObject(linkArray73);
        schema50.addEnumItemObject(linkArray73);
        schema50.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema81 = schema50.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema81.setExclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(int20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(discriminator64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(linkArray73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema81);
    }

    @Test
    public void test01933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01933");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.maximum(bigDecimal10);
        schema11.setNullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema15 = schema11.exclusiveMinimum((java.lang.Boolean) false);
        schema15.setDeprecated((java.lang.Boolean) false);
        java.lang.String str18 = schema15.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test01934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01934");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Schema schema43 = schema39.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        java.lang.Integer int47 = linkArraySchema44.getMaxProperties();
        io.swagger.oas.models.media.Schema schema49 = linkArraySchema44.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema50 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema50.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema54 = schema52.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation55 = null;
        io.swagger.oas.models.media.Schema schema56 = schema52.externalDocs(externalDocumentation55);
        schema52.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema59 = schema49.additionalProperties(schema52);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation60 = schema49.getExternalDocs();
        io.swagger.oas.models.media.XML xML61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema49.xml(xML61);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema65.externalDocs(externalDocumentation68);
        schema65.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema73 = schema65.name("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema74 = schema62.additionalProperties(schema65);
        io.swagger.oas.models.media.Schema schema76 = schema62.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema77 = schema43.additionalProperties(schema76);
        io.swagger.oas.models.media.Schema schema79 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Discriminator discriminator80 = null;
        io.swagger.oas.models.media.Schema schema81 = schema43.discriminator(discriminator80);
        schema43.setMaxItems((java.lang.Integer) 1);
        java.lang.Boolean boolean84 = schema43.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(int47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(externalDocumentation60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(boolean84);
    }

    @Test
    public void test01935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01935");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.maxLength((java.lang.Integer) 0);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema schema27 = schema24.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap35 = null;
        io.swagger.oas.models.media.Schema schema36 = schema30.properties(strMap35);
        io.swagger.oas.models.media.Schema schema37 = schema30.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema38 = schema27.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema40 = schema38.exclusiveMaximum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test01936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01936");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        java.lang.String str10 = schema2.getFormat();
        java.lang.Boolean boolean11 = schema2.getDeprecated();
        schema2.setMaxLength((java.lang.Integer) 1);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(boolean11);
    }

    @Test
    public void test01937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01937");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema8.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = null;
        schema8.setProperties(strMap14);
        java.lang.Boolean boolean16 = schema8.getNullable();
        io.swagger.oas.models.media.Schema schema18 = schema8.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema20.externalDocs(externalDocumentation21);
        schema20.setType("");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(boolean16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01938");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        java.lang.String str10 = schema2.getType();
        schema2.setMaxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema14 = schema2.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = schema2.getExternalDocs();
        schema2.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema2.maxProperties((java.lang.Integer) 10);
        java.lang.String str20 = schema2.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(externalDocumentation15);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test01939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01939");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        java.lang.Integer int4 = linkArraySchema0.getMaxLength();
        linkArraySchema0.setMinLength((java.lang.Integer) 0);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation7 = linkArraySchema0.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNull(int4);
        org.junit.Assert.assertNull(externalDocumentation7);
    }

    @Test
    public void test01940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01940");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema37.setUniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        java.lang.Integer int49 = linkArraySchema46.getMaxProperties();
        boolean boolean50 = schema43.equals((java.lang.Object) linkArraySchema46);
        linkArraySchema46.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema54 = linkArraySchema46.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema56 = schema54.minLength((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema57 = schema37.addProperties("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema56);
        schema56.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
    }

    @Test
    public void test01941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01941");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema10.maxItems((java.lang.Integer) (-1));
        java.lang.Boolean boolean20 = schema10.getWriteOnly();
        schema10.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema24 = schema10.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema38 = schema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema31.not(schema38);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        schema43.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema51 = schema43.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = schema51.getExtensions();
        io.swagger.oas.models.media.Schema schema53 = schema39.addProperties("#/components/schemas/", schema51);
        io.swagger.oas.models.media.Schema schema55 = schema39.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema55.getAdditionalProperties();
        schema10.setDefault((java.lang.Object) schema56);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(boolean20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(schema56);
    }

    @Test
    public void test01942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01942");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema2.minimum(bigDecimal17);
        io.swagger.oas.models.media.Discriminator discriminator19 = schema18.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema20 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema20.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema22.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema22.externalDocs(externalDocumentation25);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        io.swagger.oas.models.media.Schema schema36 = schema34.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema37 = schema22.addProperties("#/components/schemas/", schema36);
        schema22.setDefault((java.lang.Object) (-1));
        schema22.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema22.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray44 = null;
        schema43.addEnumItemObject(linkArray44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML49 = null;
        linkArraySchema46.setXml(xML49);
        io.swagger.oas.models.media.Schema schema52 = linkArraySchema46.addRequiredItem("hi!");
        io.swagger.oas.models.media.Schema schema53 = schema43.example((java.lang.Object) "hi!");
        java.math.BigDecimal bigDecimal54 = schema53.getMinimum();
        io.swagger.oas.models.media.Schema schema55 = schema18.not(schema53);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = schema18.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(bigDecimal54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(externalDocumentation56);
    }

    @Test
    public void test01943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01943");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.Boolean boolean7 = schema2.getReadOnly();
        io.swagger.oas.models.media.Schema schema9 = schema2.minItems((java.lang.Integer) 0);
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema2.maximum(bigDecimal10);
        schema11.setNullable((java.lang.Boolean) false);
        schema11.setDeprecated((java.lang.Boolean) true);
        java.lang.Integer int16 = schema11.getMinLength();
        io.swagger.oas.models.media.Schema schema18 = schema11.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema20 = schema11.readOnly((java.lang.Boolean) false);
        java.lang.String str21 = schema11.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(boolean7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01944");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        schema6.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema18 = schema6.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema20 = schema18.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema21 = schema20.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(schema21);
    }

    @Test
    public void test01945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01945");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = schema10.getExtensions();
        io.swagger.oas.models.media.XML xML12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema10.xml(xML12);
        schema10.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema17 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema19 = schema17.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal20 = null;
        schema17.setMaximum(bigDecimal20);
        schema17.setReadOnly((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
    }

    @Test
    public void test01946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01946");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema schema13 = schema2.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }

    @Test
    public void test01947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01947");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema11 = schema2.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        schema2.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema31 = schema2.readOnly((java.lang.Boolean) true);
        schema2.setReadOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema35 = schema2.name("hi!");
        java.lang.String str36 = schema2.getPattern();
        java.lang.Integer int37 = schema2.getMinLength();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(int37);
    }

    @Test
    public void test01948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01948");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = schema8.getExtensions();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap14 = schema8.getProperties();
        java.lang.Integer int15 = schema8.getMaxLength();
        schema8.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(int15);
    }

    @Test
    public void test01949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01949");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        java.lang.Integer int12 = linkArraySchema9.getMaxProperties();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema9.readOnly((java.lang.Boolean) false);
        schema8.setNot(schema14);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        java.lang.String str23 = schema18.getFormat();
        schema18.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema18.pattern("");
        java.lang.String str28 = schema18.toString();
        java.math.BigDecimal bigDecimal29 = null;
        schema18.setMinimum(bigDecimal29);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema36 = schema34.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        io.swagger.oas.models.media.Schema schema38 = schema34.externalDocs(externalDocumentation37);
        io.swagger.oas.models.media.Schema schema40 = schema38.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int41 = schema40.getMaxItems();
        schema40.addExtension("", (java.lang.Object) (short) -1);
        schema40.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema48 = schema40.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        java.lang.Integer int57 = linkArraySchema54.getMaxProperties();
        boolean boolean58 = schema51.equals((java.lang.Object) linkArraySchema54);
        io.swagger.oas.models.media.Discriminator discriminator59 = linkArraySchema54.getDiscriminator();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema54.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema63 = linkArraySchema54.nullable((java.lang.Boolean) false);
        boolean boolean64 = schema48.equals((java.lang.Object) schema63);
        schema18.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema63);
        io.swagger.oas.models.media.Schema schema67 = schema18.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema8.setExample((java.lang.Object) schema67);
        io.swagger.oas.models.media.Schema schema70 = schema67.addRequiredItem("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema72 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema74 = linkArraySchema72.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema76 = schema74.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema78 = schema74.pattern("#/components/schemas/");
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        schema78.setExtensions(strMap79);
        schema70.addExtension("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) strMap79);
        io.swagger.oas.models.media.Schema schema83 = schema70.title("hi!");
        schema70.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(int12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str28, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(int41);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test01950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01950");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        io.swagger.oas.annotations.links.Link link27 = null;
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] { link27 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link[][] linkArray31 = new io.swagger.oas.annotations.links.Link[][] { linkArray25, linkArray28 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList32 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList32, linkArray31);
        schema24.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        schema2.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        io.swagger.oas.models.media.XML xML36 = null;
        schema2.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema2.title("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        java.lang.String str43 = schema41.getName();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test01951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01951");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema16 = schema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema23 = schema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema16.not(schema23);
        io.swagger.oas.annotations.links.Link[] linkArray25 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray25);
        io.swagger.oas.annotations.links.Link link27 = null;
        io.swagger.oas.annotations.links.Link[] linkArray28 = new io.swagger.oas.annotations.links.Link[] { link27 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray28);
        io.swagger.oas.annotations.links.Link[][] linkArray31 = new io.swagger.oas.annotations.links.Link[][] { linkArray25, linkArray28 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList32 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList32, linkArray31);
        schema24.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        schema2.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList32);
        io.swagger.oas.models.media.XML xML36 = null;
        schema2.setXml(xML36);
        io.swagger.oas.models.media.Schema schema39 = schema2.title("hi!");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema39.properties(strMap40);
        java.lang.Boolean boolean42 = schema41.getReadOnly();
        io.swagger.oas.models.media.XML xML43 = null;
        schema41.setXml(xML43);
        io.swagger.oas.models.media.Schema schema46 = schema41.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.XML xML47 = null;
        io.swagger.oas.models.media.Schema schema48 = schema46.xml(xML47);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(linkArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(linkArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(linkArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test01952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01952");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.lang.Integer int46 = schema45.getMaxLength();
        schema45.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema50 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.XML xML51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema50.xml(xML51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
    }

    @Test
    public void test01953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01953");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema11);
        io.swagger.oas.models.media.Schema schema14 = schema12.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema21 = schema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema28 = schema24.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema21.not(schema28);
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        io.swagger.oas.annotations.links.Link link32 = null;
        io.swagger.oas.annotations.links.Link[] linkArray33 = new io.swagger.oas.annotations.links.Link[] { link32 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap34 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap35 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray33);
        io.swagger.oas.annotations.links.Link[][] linkArray36 = new io.swagger.oas.annotations.links.Link[][] { linkArray30, linkArray33 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList37 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList37, linkArray36);
        schema29.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList37);
        schema12.setExample((java.lang.Object) schema29);
        io.swagger.oas.models.media.Schema schema42 = schema29.description("#/components/schemas/");
        schema29.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema29.setExternalDocs(externalDocumentation45);
        schema29.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(linkArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(linkArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test01954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01954");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema2.setUniqueItems((java.lang.Boolean) false);
        schema2.setFormat("#/components/schemas/");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
    }

    @Test
    public void test01955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01955");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap12 = null;
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.properties(strMap12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        java.math.BigDecimal bigDecimal22 = schema16.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema23 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema23.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema27 = schema25.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        java.lang.Integer int31 = linkArraySchema28.getMaxProperties();
        boolean boolean32 = schema25.equals((java.lang.Object) linkArraySchema28);
        io.swagger.oas.models.media.Discriminator discriminator33 = linkArraySchema28.getDiscriminator();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema28.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema28.nullable((java.lang.Boolean) false);
        schema16.setExample((java.lang.Object) schema37);
        linkArraySchema5.setDefault((java.lang.Object) schema37);
        linkArraySchema5.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema5.description("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema44 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema46 = linkArraySchema44.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema48 = schema46.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation49 = null;
        io.swagger.oas.models.media.Schema schema50 = schema46.externalDocs(externalDocumentation49);
        io.swagger.oas.models.media.Schema schema52 = schema50.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int53 = schema52.getMaxItems();
        schema52.addExtension("", (java.lang.Object) (short) -1);
        schema52.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema60 = schema52.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema62 = schema60.$ref("*/*");
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema62.properties(strMap63);
        io.swagger.oas.models.media.Schema schema66 = schema64.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.XML xML67 = null;
        io.swagger.oas.models.media.Schema schema68 = schema66.xml(xML67);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema66.multipleOf(bigDecimal69);
        linkArraySchema5.setExample((java.lang.Object) schema66);
        io.swagger.oas.models.media.Schema schema73 = linkArraySchema5.deprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema5.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList76 = schema75.getEnum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(bigDecimal22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(int31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(discriminator33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(int53);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(linkArrayList76);
    }

    @Test
    public void test01956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01956");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Discriminator discriminator27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema23.discriminator(discriminator27);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01957");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        schema39.setFormat("*/*");
        java.lang.Boolean boolean44 = schema39.getDeprecated();
        io.swagger.oas.models.media.Schema schema46 = schema39.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema48 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema50 = linkArraySchema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema52 = schema50.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation53 = null;
        io.swagger.oas.models.media.Schema schema54 = schema50.externalDocs(externalDocumentation53);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation61 = null;
        io.swagger.oas.models.media.Schema schema62 = schema58.externalDocs(externalDocumentation61);
        io.swagger.oas.models.media.Schema schema64 = schema62.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema50.addProperties("#/components/schemas/", schema64);
        schema50.setDefault((java.lang.Object) (-1));
        schema50.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema71 = schema50.maxLength((java.lang.Integer) 0);
        io.swagger.oas.annotations.links.Link[] linkArray72 = null;
        schema71.addEnumItemObject(linkArray72);
        io.swagger.oas.models.media.Schema schema74 = schema39.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: */*\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema71);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList75 = schema39.getEnum();
        schema39.setName("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: -1\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(boolean44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNull(linkArrayList75);
    }

    @Test
    public void test01958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01958");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema5.title("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema19 = schema17.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation20 = null;
        io.swagger.oas.models.media.Schema schema21 = schema17.externalDocs(externalDocumentation20);
        schema17.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema25 = schema17.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = schema25.getExtensions();
        io.swagger.oas.models.media.XML xML27 = null;
        io.swagger.oas.models.media.Schema schema28 = schema25.xml(xML27);
        io.swagger.oas.models.media.Schema schema30 = schema28.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema28);
        schema31.setDeprecated((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema35 = schema31.uniqueItems((java.lang.Boolean) true);
        java.lang.Boolean boolean36 = schema35.getExclusiveMaximum();
        java.lang.Integer int37 = schema35.getMinItems();
        io.swagger.oas.models.media.Schema schema39 = schema35.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(boolean36);
        org.junit.Assert.assertNull(int37);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01959");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        schema24.setPattern("#/components/schemas/");
        java.math.BigDecimal bigDecimal41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema24.multipleOf(bigDecimal41);
        io.swagger.oas.models.media.Schema schema44 = schema42.maxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema46 = schema44.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema48 = schema44.readOnly((java.lang.Boolean) true);
        java.lang.Integer int49 = schema44.getMaxProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
    }

    @Test
    public void test01960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01960");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.nullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema26 = schema24.minProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema28 = schema24.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema29 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema29.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema31.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema35 = schema31.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema43 = schema35.not(schema42);
        io.swagger.oas.annotations.links.Link[] linkArray44 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap45 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray44);
        io.swagger.oas.annotations.links.Link link46 = null;
        io.swagger.oas.annotations.links.Link[] linkArray47 = new io.swagger.oas.annotations.links.Link[] { link46 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap48 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap49 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray47);
        io.swagger.oas.annotations.links.Link[][] linkArray50 = new io.swagger.oas.annotations.links.Link[][] { linkArray44, linkArray47 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList51 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList51, linkArray50);
        schema43.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList51);
        io.swagger.oas.models.media.Schema schema55 = schema43.maxLength((java.lang.Integer) (-1));
        schema28.setAdditionalProperties(schema43);
        java.math.BigDecimal bigDecimal57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema28.minimum(bigDecimal57);
        java.lang.String str59 = schema58.getDescription();
        schema58.setDeprecated((java.lang.Boolean) false);
        schema58.setReadOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(linkArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(linkArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(linkArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "#/components/schemas/" + "'", str59, "#/components/schemas/");
    }

    @Test
    public void test01961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01961");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap33 = schema32.getProperties();
        schema32.setExclusiveMinimum((java.lang.Boolean) false);
        java.lang.String str36 = schema32.getFormat();
        io.swagger.oas.models.media.Schema schema38 = schema32.maxItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema39 = schema32.getNot();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
    }

    @Test
    public void test01962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01962");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema15.getAdditionalProperties();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.exclusiveMinimum((java.lang.Boolean) false);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap25 = linkArraySchema15.getProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(schema21);
        org.junit.Assert.assertNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(strMap25);
    }

    @Test
    public void test01963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01963");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema45 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema49 = schema47.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = null;
        io.swagger.oas.models.media.Schema schema51 = schema47.externalDocs(externalDocumentation50);
        schema47.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema55 = schema47.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = schema55.getExtensions();
        io.swagger.oas.models.media.XML xML57 = null;
        io.swagger.oas.models.media.Schema schema58 = schema55.xml(xML57);
        schema55.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema61 = schema39.addProperties("#/components/schemas/", schema55);
        java.lang.Integer int62 = schema61.getMaxItems();
        io.swagger.oas.models.media.Schema schema64 = schema61.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal65 = null;
        io.swagger.oas.models.media.Schema schema66 = schema61.multipleOf(bigDecimal65);
        schema61.setMaxLength((java.lang.Integer) 10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNull(int62);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
    }

    @Test
    public void test01964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01964");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01965");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema56 = schema52.pattern("hi!");
        io.swagger.oas.models.media.Discriminator discriminator57 = null;
        schema56.setDiscriminator(discriminator57);
        java.lang.Boolean boolean59 = schema56.getReadOnly();
        io.swagger.oas.models.media.Schema schema60 = schema2.additionalProperties(schema56);
        java.lang.Object obj61 = schema56.getExample();
        schema56.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema65 = schema56.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema56.setMaxProperties((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(boolean59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(obj61);
        org.junit.Assert.assertNotNull(schema65);
    }

    @Test
    public void test01966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01966");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema8 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema10 = linkArraySchema8.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema12 = schema10.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        java.lang.Integer int16 = linkArraySchema13.getMaxProperties();
        boolean boolean17 = schema10.equals((java.lang.Object) linkArraySchema13);
        io.swagger.oas.models.media.Discriminator discriminator18 = linkArraySchema13.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator19 = null;
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema13.discriminator(discriminator19);
        io.swagger.oas.models.media.Schema schema22 = linkArraySchema13.exclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema23 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema22);
        java.lang.String str24 = schema23.getDescription();
        java.lang.String str25 = schema23.get$ref();
        java.math.BigDecimal bigDecimal26 = null;
        schema23.setMultipleOf(bigDecimal26);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(discriminator18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test01967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01967");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema0.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal7 = null;
        linkArraySchema0.setMaximum(bigDecimal7);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation14 = null;
        io.swagger.oas.models.media.Schema schema15 = schema11.externalDocs(externalDocumentation14);
        java.lang.String str16 = schema11.getFormat();
        schema11.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema20 = schema11.pattern("");
        java.lang.String str21 = schema11.getTitle();
        io.swagger.oas.models.media.Schema schema23 = schema11.addRequiredItem("");
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema0.not(schema23);
        java.lang.Integer int25 = schema23.getMinProperties();
        java.math.BigDecimal bigDecimal26 = schema23.getMultipleOf();
        io.swagger.oas.models.media.Schema schema28 = schema23.readOnly((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test01968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01968");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        schema8.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema15 = schema5.additionalProperties(schema8);
        schema15.setExclusiveMinimum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema25 = schema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema33 = schema25.not(schema32);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema37.externalDocs(externalDocumentation40);
        schema37.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema45 = schema37.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = schema45.getExtensions();
        io.swagger.oas.models.media.Schema schema47 = schema33.addProperties("#/components/schemas/", schema45);
        io.swagger.oas.models.media.Schema schema48 = schema15.addProperties("", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema55 = schema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema63 = schema55.not(schema62);
        io.swagger.oas.models.media.Schema schema65 = schema63.minProperties((java.lang.Integer) 0);
        schema63.setMinLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema68 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema70 = linkArraySchema68.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema72 = schema70.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema74 = schema70.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema75 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema77 = linkArraySchema75.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema79 = schema77.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema81 = schema77.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema82 = schema74.not(schema81);
        io.swagger.oas.annotations.links.Link[] linkArray83 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap84 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray83);
        io.swagger.oas.annotations.links.Link link85 = null;
        io.swagger.oas.annotations.links.Link[] linkArray86 = new io.swagger.oas.annotations.links.Link[] { link85 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap87 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray86);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap88 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray86);
        io.swagger.oas.annotations.links.Link[][] linkArray89 = new io.swagger.oas.annotations.links.Link[][] { linkArray83, linkArray86 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList90 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList90, linkArray89);
        schema82.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList90);
        schema63.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList90);
        schema15.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList90);
        java.lang.Boolean boolean95 = schema15.getDeprecated();
        io.swagger.oas.models.media.Schema schema97 = schema15.minLength((java.lang.Integer) 0);
        schema15.setNullable((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(linkArray83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(linkArray86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(linkArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNull(boolean95);
        org.junit.Assert.assertNotNull(schema97);
    }

    @Test
    public void test01969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01969");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema8.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.XML xML28 = null;
        schema8.setXml(xML28);
        java.lang.Integer int30 = schema8.getMaxItems();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.maximum(bigDecimal31);
        io.swagger.oas.models.media.Schema schema34 = schema32.type("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.Object obj35 = schema34.getExample();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(obj35);
    }

    @Test
    public void test01970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01970");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema8.multipleOf(bigDecimal17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema33 = schema21.not(schema32);
        schema33.setNullable((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation41 = null;
        io.swagger.oas.models.media.Schema schema42 = schema38.externalDocs(externalDocumentation41);
        java.lang.String str43 = schema38.getFormat();
        schema38.setMaxLength((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema52 = schema48.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema59 = schema55.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema52.not(schema59);
        io.swagger.oas.annotations.links.Link[] linkArray61 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap62 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray61);
        io.swagger.oas.annotations.links.Link link63 = null;
        io.swagger.oas.annotations.links.Link[] linkArray64 = new io.swagger.oas.annotations.links.Link[] { link63 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap65 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap66 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray64);
        io.swagger.oas.annotations.links.Link[][] linkArray67 = new io.swagger.oas.annotations.links.Link[][] { linkArray61, linkArray64 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList68 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList68, linkArray67);
        schema60.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList68);
        schema38.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList68);
        schema33.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList68);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema73 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema75 = linkArraySchema73.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema77 = schema75.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation78 = null;
        io.swagger.oas.models.media.Schema schema79 = schema75.externalDocs(externalDocumentation78);
        io.swagger.oas.models.media.Schema schema81 = schema79.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int82 = schema81.getMaxItems();
        schema81.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = schema81.getExtensions();
        schema33.setExtensions(strMap86);
        schema8.setExtensions(strMap86);
        java.lang.String str89 = schema8.getTitle();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(linkArray61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(linkArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(linkArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNull(int82);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(str89);
    }

    @Test
    public void test01971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01971");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema6 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema8 = linkArraySchema6.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema10 = schema8.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation11 = null;
        io.swagger.oas.models.media.Schema schema12 = schema8.externalDocs(externalDocumentation11);
        java.lang.String str13 = schema8.getFormat();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema17 = schema8.pattern("");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation24 = null;
        io.swagger.oas.models.media.Schema schema25 = schema21.externalDocs(externalDocumentation24);
        schema21.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema29 = schema21.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = schema29.getExtensions();
        io.swagger.oas.models.media.XML xML31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema29.xml(xML31);
        schema29.setExclusiveMaximum((java.lang.Boolean) true);
        schema8.addExtension("", (java.lang.Object) true);
        io.swagger.oas.models.media.Schema schema37 = schema8.readOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema39 = schema8.pattern("");
        schema5.setAdditionalProperties(schema39);
        java.lang.Boolean boolean41 = schema5.getUniqueItems();
        schema5.setType("class Schema {\n    title: #/components/schemas/\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 1\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: []\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation44 = null;
        schema5.setExternalDocs(externalDocumentation44);
        io.swagger.oas.models.media.Discriminator discriminator46 = schema5.getDiscriminator();
        schema5.setExclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str49 = schema5.getPattern();
        java.lang.Class<?> wildcardClass50 = schema5.getClass();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean41);
        org.junit.Assert.assertNull(discriminator46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "#/components/schemas/" + "'", str49, "#/components/schemas/");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test01972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01972");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Discriminator discriminator16 = null;
        io.swagger.oas.models.media.Schema schema17 = schema12.discriminator(discriminator16);
        io.swagger.oas.models.media.Schema schema19 = schema17.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema21 = schema19.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema22 = null;
        schema21.setNot(schema22);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
    }

    @Test
    public void test01973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01973");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        schema8.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema29 = schema8.minItems((java.lang.Integer) 1);
        java.lang.String str30 = schema8.getFormat();
        java.math.BigDecimal bigDecimal31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema8.minimum(bigDecimal31);
        schema32.setExclusiveMinimum((java.lang.Boolean) true);
        java.lang.Boolean boolean35 = schema32.getWriteOnly();
        io.swagger.oas.models.media.Schema schema37 = schema32.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}");
        schema37.setMinProperties((java.lang.Integer) 100);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(boolean35);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test01974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01974");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        io.swagger.oas.models.media.Schema schema45 = schema43.uniqueItems((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema47 = schema45.format("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal48 = null;
        io.swagger.oas.models.media.Schema schema49 = schema47.maximum(bigDecimal48);
        io.swagger.oas.models.media.Discriminator discriminator50 = schema49.getDiscriminator();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        schema49.setExternalDocs(externalDocumentation51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(discriminator50);
    }

    @Test
    public void test01975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01975");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        schema2.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema10 = schema2.maxProperties((java.lang.Integer) 0);
        schema2.setMinItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema14 = schema2.addRequiredItem("");
        schema2.setTitle("#/components/schemas/");
        java.math.BigDecimal bigDecimal17 = schema2.getMaximum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        java.lang.String str25 = schema20.getFormat();
        java.math.BigDecimal bigDecimal26 = schema20.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema31 = schema29.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema34 = linkArraySchema32.pattern("#/components/schemas/");
        java.lang.Integer int35 = linkArraySchema32.getMaxProperties();
        boolean boolean36 = schema29.equals((java.lang.Object) linkArraySchema32);
        io.swagger.oas.models.media.Discriminator discriminator37 = linkArraySchema32.getDiscriminator();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema32.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema41 = linkArraySchema32.nullable((java.lang.Boolean) false);
        schema20.setExample((java.lang.Object) schema41);
        io.swagger.oas.models.media.XML xML43 = null;
        io.swagger.oas.models.media.Schema schema44 = schema41.xml(xML43);
        io.swagger.oas.models.media.Schema schema45 = schema2.not(schema44);
        java.math.BigDecimal bigDecimal46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema2.multipleOf(bigDecimal46);
        io.swagger.oas.models.media.Schema schema49 = schema47.minProperties((java.lang.Integer) 0);
        java.util.List<java.lang.String> strList50 = schema47.getRequired();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema51 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema51.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema55 = schema53.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation56 = null;
        io.swagger.oas.models.media.Schema schema57 = schema53.externalDocs(externalDocumentation56);
        java.lang.Boolean boolean58 = schema53.getReadOnly();
        java.lang.String str59 = schema53.getType();
        io.swagger.oas.models.media.Schema schema61 = schema53.minLength((java.lang.Integer) 100);
        schema47.setExample((java.lang.Object) schema53);
        java.math.BigDecimal bigDecimal63 = null;
        io.swagger.oas.models.media.Schema schema64 = schema47.minimum(bigDecimal63);
        schema47.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: null\n    maxItems: null\n    minItems: 10\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(bigDecimal26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(discriminator37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(boolean58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test01976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01976");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        schema12.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema19 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema19.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema23 = schema21.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema24 = schema12.not(schema23);
        schema8.setNot(schema12);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema32 = schema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema37 = schema35.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema32.not(schema39);
        io.swagger.oas.models.media.Schema schema41 = schema8.not(schema39);
        io.swagger.oas.models.media.Discriminator discriminator42 = null;
        io.swagger.oas.models.media.Schema schema43 = schema8.discriminator(discriminator42);
        schema8.setTitle("#/components/schemas/");
        java.lang.Integer int46 = schema8.getMaxProperties();
        io.swagger.oas.models.media.Schema schema48 = schema8.maxProperties((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        java.lang.Boolean boolean51 = schema48.getNullable();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(int46);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(boolean51);
    }

    @Test
    public void test01977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01977");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.math.BigDecimal bigDecimal15 = schema13.getMultipleOf();
        io.swagger.oas.models.media.Schema schema17 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList18 = schema17.getEnum();
        java.math.BigDecimal bigDecimal19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema17.minimum(bigDecimal19);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        java.lang.Integer int29 = linkArraySchema26.getMaxProperties();
        boolean boolean30 = schema23.equals((java.lang.Object) linkArraySchema26);
        io.swagger.oas.models.media.Discriminator discriminator31 = linkArraySchema26.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema32 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema26.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema32);
        io.swagger.oas.models.media.Schema schema35 = schema33.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema36 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema36.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema40 = schema38.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema42 = schema38.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema43 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema45 = linkArraySchema43.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema47 = schema45.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema49 = schema45.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema42.not(schema49);
        io.swagger.oas.annotations.links.Link[] linkArray51 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap52 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray51);
        io.swagger.oas.annotations.links.Link link53 = null;
        io.swagger.oas.annotations.links.Link[] linkArray54 = new io.swagger.oas.annotations.links.Link[] { link53 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap55 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap56 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray54);
        io.swagger.oas.annotations.links.Link[][] linkArray57 = new io.swagger.oas.annotations.links.Link[][] { linkArray51, linkArray54 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList58 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList58, linkArray57);
        schema50.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList58);
        schema33.setExample((java.lang.Object) schema50);
        io.swagger.oas.models.media.Schema schema63 = schema50.description("#/components/schemas/");
        schema50.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.ExternalDocumentation externalDocumentation66 = null;
        schema50.setExternalDocs(externalDocumentation66);
        schema17.setDefault((java.lang.Object) schema50);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(bigDecimal15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(linkArrayList18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(int29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(discriminator31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(linkArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(linkArray54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(linkArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test01978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01978");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        schema6.setMinItems((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema12 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema12.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema16 = schema14.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation17 = null;
        io.swagger.oas.models.media.Schema schema18 = schema14.externalDocs(externalDocumentation17);
        java.lang.String str19 = schema14.getFormat();
        io.swagger.oas.models.media.Schema schema21 = schema14.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema26 = schema24.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema27 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema27.pattern("#/components/schemas/");
        java.lang.Integer int30 = linkArraySchema27.getMaxProperties();
        boolean boolean31 = schema24.equals((java.lang.Object) linkArraySchema27);
        schema21.setNot((io.swagger.oas.models.media.Schema) linkArraySchema27);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList33 = linkArraySchema27.getEnum();
        java.lang.String str34 = linkArraySchema27.toString();
        io.swagger.oas.models.media.Discriminator discriminator35 = null;
        linkArraySchema27.setDiscriminator(discriminator35);
        java.math.BigDecimal bigDecimal37 = null;
        io.swagger.oas.models.media.Schema schema38 = linkArraySchema27.multipleOf(bigDecimal37);
        schema38.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation46 = null;
        io.swagger.oas.models.media.Schema schema47 = schema43.externalDocs(externalDocumentation46);
        io.swagger.oas.models.media.Schema schema49 = schema47.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation50 = schema47.getExternalDocs();
        java.lang.Integer int51 = schema47.getMinLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema53 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema55 = linkArraySchema53.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema57 = schema55.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema55.externalDocs(externalDocumentation58);
        schema55.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema62 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema64 = linkArraySchema62.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema66 = schema64.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema67 = schema55.not(schema66);
        io.swagger.oas.models.media.Schema schema68 = schema47.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema66);
        java.math.BigDecimal bigDecimal69 = null;
        io.swagger.oas.models.media.Schema schema70 = schema68.multipleOf(bigDecimal69);
        io.swagger.oas.models.media.Schema schema72 = schema68.exclusiveMaximum((java.lang.Boolean) true);
        java.lang.String str73 = schema68.getTitle();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap74 = schema68.getProperties();
        schema38.setProperties(strMap74);
        io.swagger.oas.models.media.Schema schema76 = schema6.properties(strMap74);
        io.swagger.oas.models.media.Schema schema77 = schema76.getNot();
        // The following exception was thrown during execution in test generation
        try {
            schema77.setMinProperties((java.lang.Integer) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(linkArrayList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str34, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(externalDocumentation50);
        org.junit.Assert.assertNull(int51);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNull(schema77);
    }

    @Test
    public void test01979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01979");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema22 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema22.pattern("#/components/schemas/");
        java.lang.Integer int25 = linkArraySchema22.getMaxProperties();
        boolean boolean26 = schema19.equals((java.lang.Object) linkArraySchema22);
        io.swagger.oas.models.media.Discriminator discriminator27 = linkArraySchema22.getDiscriminator();
        io.swagger.oas.models.media.Schema schema29 = linkArraySchema22.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema22.nullable((java.lang.Boolean) false);
        boolean boolean32 = schema16.equals((java.lang.Object) schema31);
        io.swagger.oas.models.media.Schema schema34 = schema16.format("*/*");
        java.lang.Integer int35 = schema16.getMinProperties();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation36 = null;
        io.swagger.oas.models.media.Schema schema37 = schema16.externalDocs(externalDocumentation36);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation38 = schema37.getExternalDocs();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(discriminator27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(externalDocumentation38);
    }

    @Test
    public void test01980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01980");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap13 = schema12.getProperties();
        schema12.setReadOnly((java.lang.Boolean) false);
        schema12.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema19 = schema12.maxProperties((java.lang.Integer) (-1));
        io.swagger.oas.models.media.Schema schema21 = schema12.minProperties((java.lang.Integer) 1);
        java.lang.String str22 = schema12.getType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test01981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01981");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link18 = null;
        io.swagger.oas.annotations.links.Link[] linkArray19 = new io.swagger.oas.annotations.links.Link[] { link18 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray19);
        linkArraySchema15.addEnumItemObject(linkArray19);
        schema14.addEnumItemObject(linkArray19);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema14.externalDocs(externalDocumentation23);
        java.lang.Boolean boolean25 = schema24.getDeprecated();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(linkArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
    }

    @Test
    public void test01982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01982");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.models.media.Discriminator discriminator11 = null;
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema5.discriminator(discriminator11);
        io.swagger.oas.models.media.Schema schema14 = linkArraySchema5.minItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema5.exclusiveMinimum((java.lang.Boolean) true);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
    }

    @Test
    public void test01983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01983");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.lang.Integer int7 = schema2.getMaxLength();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.Integer int10 = schema2.getMinProperties();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema11 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema13 = linkArraySchema11.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema15 = schema13.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        java.lang.Integer int19 = linkArraySchema16.getMaxProperties();
        boolean boolean20 = schema13.equals((java.lang.Object) linkArraySchema16);
        io.swagger.oas.models.media.Discriminator discriminator21 = linkArraySchema16.getDiscriminator();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema16.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema25 = linkArraySchema16.nullable((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.annotations.links.Link link29 = null;
        io.swagger.oas.annotations.links.Link[] linkArray30 = new io.swagger.oas.annotations.links.Link[] { link29 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap31 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray30);
        linkArraySchema26.addEnumItemObject(linkArray30);
        schema25.addEnumItemObject(linkArray30);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema40 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema40.pattern("#/components/schemas/");
        java.lang.Integer int43 = linkArraySchema40.getMaxProperties();
        boolean boolean44 = schema37.equals((java.lang.Object) linkArraySchema40);
        io.swagger.oas.models.media.Discriminator discriminator45 = linkArraySchema40.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema47 = linkArraySchema40.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema46);
        io.swagger.oas.models.media.Schema schema48 = schema25.addProperties("*/*", schema47);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema49 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema51 = linkArraySchema49.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema53 = schema51.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        java.lang.Integer int57 = linkArraySchema54.getMaxProperties();
        boolean boolean58 = schema51.equals((java.lang.Object) linkArraySchema54);
        io.swagger.oas.models.media.Discriminator discriminator59 = linkArraySchema54.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema60 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema61 = linkArraySchema54.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema60);
        linkArraySchema54.setMaxProperties((java.lang.Integer) 1);
        linkArraySchema54.setTitle("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        linkArraySchema54.setType("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema68 = schema48.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema54);
        io.swagger.oas.models.media.Schema schema70 = schema68.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.util.List<java.lang.String> strList71 = schema68.getRequired();
        schema2.setRequired(strList71);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNull(int10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(int19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(discriminator21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(linkArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(int43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(discriminator45);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(int57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(discriminator59);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(strList71);
    }

    @Test
    public void test01984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01984");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema5 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema5.pattern("#/components/schemas/");
        java.lang.Integer int8 = linkArraySchema5.getMaxProperties();
        boolean boolean9 = schema2.equals((java.lang.Object) linkArraySchema5);
        io.swagger.oas.models.media.Discriminator discriminator10 = linkArraySchema5.getDiscriminator();
        io.swagger.oas.annotations.links.Link[] linkArray11 = linkArraySchema5.getDefault();
        java.math.BigDecimal bigDecimal12 = linkArraySchema5.getMultipleOf();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema13 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema15 = linkArraySchema13.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema17 = schema15.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation18 = null;
        io.swagger.oas.models.media.Schema schema19 = schema15.externalDocs(externalDocumentation18);
        schema15.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema schema23 = schema15.maxProperties((java.lang.Integer) 0);
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = schema23.getExtensions();
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.xml(xML25);
        schema23.setExclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema30 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = linkArraySchema5.additionalProperties(schema30);
        io.swagger.oas.models.media.Schema schema33 = linkArraySchema5.writeOnly((java.lang.Boolean) false);
        java.lang.Integer int34 = linkArraySchema5.getMaxProperties();
        linkArraySchema5.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNull(int8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(discriminator10);
        org.junit.Assert.assertNull(linkArray11);
        org.junit.Assert.assertNull(bigDecimal12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(int34);
    }

    @Test
    public void test01985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01985");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap7 = null;
        io.swagger.oas.models.media.Schema schema8 = schema2.properties(strMap7);
        java.lang.Integer int9 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema schema11 = schema2.maxLength((java.lang.Integer) 100);
        schema11.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema20 = schema16.pattern("#/components/schemas/");
        schema20.setMaxProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema schema24 = schema20.maxLength((java.lang.Integer) 0);
        io.swagger.oas.models.media.XML xML25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema24.xml(xML25);
        io.swagger.oas.models.media.Schema schema27 = schema11.not(schema24);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
    }

    @Test
    public void test01986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01986");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        io.swagger.oas.models.media.Schema schema24 = schema18.minProperties((java.lang.Integer) 10);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema25 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema27 = linkArraySchema25.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema29 = schema27.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation30 = null;
        io.swagger.oas.models.media.Schema schema31 = schema27.externalDocs(externalDocumentation30);
        schema27.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema34 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema36 = linkArraySchema34.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema38 = schema36.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema39 = schema27.not(schema38);
        schema27.setDeprecated((java.lang.Boolean) false);
        java.lang.Boolean boolean42 = schema27.getExclusiveMaximum();
        schema18.setDefault((java.lang.Object) schema27);
        java.math.BigDecimal bigDecimal44 = schema27.getMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(boolean42);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test01987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01987");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema39.setUniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema43 = schema24.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema39);
        java.math.BigDecimal bigDecimal44 = schema39.getMinimum();
        io.swagger.oas.models.ExternalDocumentation externalDocumentation45 = null;
        schema39.setExternalDocs(externalDocumentation45);
        schema39.setExclusiveMinimum((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(bigDecimal44);
    }

    @Test
    public void test01988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01988");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.lang.Boolean boolean25 = schema24.getWriteOnly();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        io.swagger.oas.models.media.Schema schema34 = schema32.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int35 = schema34.getMaxItems();
        io.swagger.oas.models.media.Schema schema37 = schema34.title("");
        schema24.setAdditionalProperties(schema34);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList39 = schema34.getEnum();
        io.swagger.oas.models.media.Discriminator discriminator40 = null;
        io.swagger.oas.models.media.Schema schema41 = schema34.discriminator(discriminator40);
        io.swagger.oas.models.media.Schema schema42 = schema41.getAdditionalProperties();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(boolean25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(int35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(linkArrayList39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(schema42);
    }

    @Test
    public void test01989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01989");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        java.math.BigDecimal bigDecimal8 = schema2.getMinimum();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema9 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema11 = linkArraySchema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema13 = schema11.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        java.lang.Integer int17 = linkArraySchema14.getMaxProperties();
        boolean boolean18 = schema11.equals((java.lang.Object) linkArraySchema14);
        io.swagger.oas.models.media.Discriminator discriminator19 = linkArraySchema14.getDiscriminator();
        io.swagger.oas.models.media.Schema schema21 = linkArraySchema14.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema14.nullable((java.lang.Boolean) false);
        schema2.setExample((java.lang.Object) schema23);
        schema2.setMaxProperties((java.lang.Integer) (-1));
        java.lang.String str27 = schema2.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema28 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema30 = linkArraySchema28.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema32 = schema30.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation33 = null;
        io.swagger.oas.models.media.Schema schema34 = schema30.externalDocs(externalDocumentation33);
        java.lang.String str35 = schema30.getFormat();
        schema30.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema39 = schema30.minLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema41 = schema30.type("hi!");
        schema2.setDefault((java.lang.Object) schema30);
        io.swagger.oas.models.media.Schema schema44 = schema2.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: [hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: null\n    nullable: false\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema50 = schema48.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation51 = null;
        io.swagger.oas.models.media.Schema schema52 = schema48.externalDocs(externalDocumentation51);
        io.swagger.oas.models.media.Schema schema54 = schema52.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int55 = schema54.getMaxItems();
        io.swagger.oas.models.media.Schema schema57 = schema54.title("");
        java.math.BigDecimal bigDecimal58 = null;
        io.swagger.oas.models.media.Schema schema59 = schema57.multipleOf(bigDecimal58);
        java.lang.String str60 = schema59.getTitle();
        java.math.BigDecimal bigDecimal61 = null;
        schema59.setMinimum(bigDecimal61);
        io.swagger.oas.models.media.Schema schema64 = schema59.exclusiveMaximum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema65 = schema2.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: 0\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema64);
        java.math.BigDecimal bigDecimal66 = schema2.getMaximum();
        java.lang.String str67 = schema2.getType();
        java.math.BigDecimal bigDecimal68 = null;
        io.swagger.oas.models.media.Schema schema69 = schema2.multipleOf(bigDecimal68);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(bigDecimal8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(int17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(discriminator19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(int55);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNull(bigDecimal66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test01990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01990");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.XML xML3 = null;
        linkArraySchema0.setXml(xML3);
        java.lang.String str5 = linkArraySchema0.getFormat();
        java.lang.String str6 = linkArraySchema0.get$ref();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema9.externalDocs(externalDocumentation12);
        io.swagger.oas.models.media.Schema schema15 = schema13.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int16 = schema15.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema17 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema19 = linkArraySchema17.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema21 = schema19.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation22 = null;
        io.swagger.oas.models.media.Schema schema23 = schema19.externalDocs(externalDocumentation22);
        schema19.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema31 = schema19.not(schema30);
        schema15.setNot(schema19);
        schema15.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema36 = schema15.minItems((java.lang.Integer) 1);
        schema15.setMaxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema0.not(schema15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema41 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema43 = linkArraySchema41.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema45 = schema43.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema46 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema48 = linkArraySchema46.pattern("#/components/schemas/");
        java.lang.Integer int49 = linkArraySchema46.getMaxProperties();
        boolean boolean50 = schema43.equals((java.lang.Object) linkArraySchema46);
        io.swagger.oas.models.media.Discriminator discriminator51 = linkArraySchema46.getDiscriminator();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema52 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema53 = linkArraySchema46.additionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema52);
        io.swagger.oas.models.media.Schema schema55 = schema53.$ref("*/*");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema56 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema58 = linkArraySchema56.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema60 = schema58.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema62 = schema58.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema63 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema65 = linkArraySchema63.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema67 = schema65.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema69 = schema65.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema70 = schema62.not(schema69);
        io.swagger.oas.annotations.links.Link[] linkArray71 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap72 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray71);
        io.swagger.oas.annotations.links.Link link73 = null;
        io.swagger.oas.annotations.links.Link[] linkArray74 = new io.swagger.oas.annotations.links.Link[] { link73 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap75 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap76 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray74);
        io.swagger.oas.annotations.links.Link[][] linkArray77 = new io.swagger.oas.annotations.links.Link[][] { linkArray71, linkArray74 };
        java.util.ArrayList<io.swagger.oas.annotations.links.Link[]> linkArrayList78 = new java.util.ArrayList<io.swagger.oas.annotations.links.Link[]>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<io.swagger.oas.annotations.links.Link[]>) linkArrayList78, linkArray77);
        schema70.setEnum((java.util.List<io.swagger.oas.annotations.links.Link[]>) linkArrayList78);
        schema53.setExample((java.lang.Object) schema70);
        io.swagger.oas.models.media.Schema schema83 = schema70.description("#/components/schemas/");
        schema83.setMinItems((java.lang.Integer) 0);
        io.swagger.oas.models.media.Schema schema86 = linkArraySchema0.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: 1\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: */*\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: true\n    xml: null\n}", schema83);
        java.lang.Boolean boolean87 = schema86.getExclusiveMaximum();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(int16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(int49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(discriminator51);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(linkArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(linkArray74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(linkArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNull(boolean87);
    }

    @Test
    public void test01991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01991");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation13 = schema8.getExternalDocs();
        schema8.setExclusiveMaximum((java.lang.Boolean) false);
        java.lang.String str16 = schema8.getFormat();
        io.swagger.oas.models.media.Schema schema17 = schema8.getAdditionalProperties();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Boolean boolean18 = schema17.getWriteOnly();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNull(externalDocumentation13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(schema17);
    }

    @Test
    public void test01992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01992");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation9 = schema6.getExternalDocs();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "*/*", "", "*/*" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        schema6.setRequired((java.util.List<java.lang.String>) strList15);
        java.lang.String str18 = schema6.toString();
        schema6.setFormat("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.lang.String str21 = schema6.getType();
        schema6.setDeprecated((java.lang.Boolean) false);
        schema6.setMinItems((java.lang.Integer) 0);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(externalDocumentation9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" + "'", str18, "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: [, */*, */*, hi!]\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test01993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01993");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema6 = schema2.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema7 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema7.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema11 = schema9.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema13 = schema9.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema6.not(schema13);
        java.lang.String[] strArray16 = new java.lang.String[] { "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        io.swagger.oas.models.media.Schema schema19 = schema14.required((java.util.List<java.lang.String>) strList17);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema21 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema23 = linkArraySchema21.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema25 = schema23.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation26 = null;
        io.swagger.oas.models.media.Schema schema27 = schema23.externalDocs(externalDocumentation26);
        io.swagger.oas.models.media.Schema schema29 = schema27.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int30 = schema29.getMaxItems();
        schema29.addExtension("", (java.lang.Object) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = null;
        schema29.setExtensions(strMap34);
        io.swagger.oas.models.media.Schema schema36 = schema14.addProperties("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", schema29);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation37 = null;
        schema29.setExternalDocs(externalDocumentation37);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(int30);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test01994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01994");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = schema2.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema4 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema6 = linkArraySchema4.pattern("#/components/schemas/");
        java.lang.Integer int7 = linkArraySchema4.getMaxProperties();
        io.swagger.oas.models.media.Schema schema9 = linkArraySchema4.readOnly((java.lang.Boolean) false);
        schema2.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema4);
        java.lang.Object obj11 = schema2.getExample();
        io.swagger.oas.models.media.Discriminator discriminator12 = null;
        io.swagger.oas.models.media.Schema schema13 = schema2.discriminator(discriminator12);
        io.swagger.oas.models.media.Schema schema15 = schema13.$ref("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema16 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema18 = linkArraySchema16.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema20 = schema18.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.externalDocs(externalDocumentation21);
        io.swagger.oas.models.media.Schema schema24 = schema22.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int25 = schema24.getMaxItems();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema26 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema28 = linkArraySchema26.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema30 = schema28.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation31 = null;
        io.swagger.oas.models.media.Schema schema32 = schema28.externalDocs(externalDocumentation31);
        schema28.setDefault((java.lang.Object) (short) 1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema39 = schema37.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema schema40 = schema28.not(schema39);
        schema24.setNot(schema28);
        schema24.setDefault((java.lang.Object) 100.0f);
        io.swagger.oas.models.media.Schema schema45 = schema24.minItems((java.lang.Integer) 1);
        java.lang.String str46 = schema45.getName();
        schema45.setExclusiveMinimum((java.lang.Boolean) false);
        schema15.setNot(schema45);
        schema45.setMinProperties((java.lang.Integer) (-1));
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(int7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(obj11);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(int25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test01995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01995");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema14 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema16 = linkArraySchema14.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema18 = schema16.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation19 = null;
        io.swagger.oas.models.media.Schema schema20 = schema16.externalDocs(externalDocumentation19);
        java.lang.String str21 = schema16.getFormat();
        io.swagger.oas.models.media.Schema schema23 = schema16.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema24 = schema8.addProperties("#/components/schemas/", schema23);
        java.math.BigDecimal bigDecimal25 = null;
        io.swagger.oas.models.media.Schema schema26 = schema23.minimum(bigDecimal25);
        io.swagger.oas.models.media.Schema schema28 = schema23.format("#/components/schemas/");
        java.lang.String str29 = schema28.getPattern();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "#/components/schemas/" + "'", str29, "#/components/schemas/");
    }

    @Test
    public void test01996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01996");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        io.swagger.oas.models.media.Schema schema8 = schema6.uniqueItems((java.lang.Boolean) false);
        java.lang.Integer int9 = schema8.getMaxItems();
        schema8.addExtension("", (java.lang.Object) (short) -1);
        schema8.setMaxItems((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema16 = schema8.deprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema18 = schema16.$ref("*/*");
        io.swagger.oas.models.media.Schema schema20 = schema18.maxProperties((java.lang.Integer) 0);
        io.swagger.oas.models.media.Discriminator discriminator21 = null;
        io.swagger.oas.models.media.Schema schema22 = schema18.discriminator(discriminator21);
        java.math.BigDecimal bigDecimal23 = null;
        schema18.setMultipleOf(bigDecimal23);
        schema18.setPattern("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: #/components/schemas/\n    format: null\n    $ref: #/components/schemas/hi!\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(int9);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test01997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01997");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}";
    }

    @Test
    public void test01998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01998");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        io.swagger.oas.models.media.Schema schema9 = schema2.description("#/components/schemas/");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema15 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema17 = linkArraySchema15.pattern("#/components/schemas/");
        java.lang.Integer int18 = linkArraySchema15.getMaxProperties();
        boolean boolean19 = schema12.equals((java.lang.Object) linkArraySchema15);
        schema9.setNot((io.swagger.oas.models.media.Schema) linkArraySchema15);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList21 = linkArraySchema15.getEnum();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = linkArraySchema15.getExtensions();
        io.swagger.oas.models.media.Schema schema24 = linkArraySchema15.name("");
        io.swagger.oas.models.media.Schema schema26 = schema24.writeOnly((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema28 = schema26.exclusiveMinimum((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema30 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema32 = linkArraySchema30.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema34 = schema32.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema35 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema37 = linkArraySchema35.pattern("#/components/schemas/");
        java.lang.Integer int38 = linkArraySchema35.getMaxProperties();
        boolean boolean39 = schema32.equals((java.lang.Object) linkArraySchema35);
        io.swagger.oas.models.media.Discriminator discriminator40 = linkArraySchema35.getDiscriminator();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema35.writeOnly((java.lang.Boolean) true);
        java.math.BigDecimal bigDecimal43 = null;
        schema42.setMultipleOf(bigDecimal43);
        java.util.List<io.swagger.oas.annotations.links.Link[]> linkArrayList45 = schema42.getEnum();
        java.util.Map<java.lang.String, io.swagger.oas.models.media.Schema> strMap46 = schema42.getProperties();
        schema42.setType("#/components/schemas/");
        schema26.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema42);
        io.swagger.oas.models.media.Schema schema51 = schema26.minItems((java.lang.Integer) 10);
        schema26.setDescription("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: 100\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: true\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(int18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(linkArrayList21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(int38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(discriminator40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(linkArrayList45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test01999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test01999");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema4 = schema2.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation5 = null;
        io.swagger.oas.models.media.Schema schema6 = schema2.externalDocs(externalDocumentation5);
        java.lang.String str7 = schema2.getFormat();
        schema2.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema10 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema12 = linkArraySchema10.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema14 = schema12.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation15 = null;
        io.swagger.oas.models.media.Schema schema16 = schema12.externalDocs(externalDocumentation15);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema18 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema20 = linkArraySchema18.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema22 = schema20.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation23 = null;
        io.swagger.oas.models.media.Schema schema24 = schema20.externalDocs(externalDocumentation23);
        io.swagger.oas.models.media.Schema schema26 = schema24.uniqueItems((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema27 = schema12.addProperties("#/components/schemas/", schema26);
        schema12.setDefault((java.lang.Object) (-1));
        schema12.setExclusiveMaximum((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema33 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema35 = linkArraySchema33.pattern("#/components/schemas/");
        java.lang.Integer int36 = schema35.getMaxLength();
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema37 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema39 = linkArraySchema37.pattern("#/components/schemas/");
        java.lang.Integer int40 = linkArraySchema37.getMaxProperties();
        io.swagger.oas.models.media.Schema schema42 = linkArraySchema37.readOnly((java.lang.Boolean) false);
        schema35.setAdditionalProperties((io.swagger.oas.models.media.Schema) linkArraySchema37);
        schema12.addExtension("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}", (java.lang.Object) schema35);
        schema12.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema schema48 = schema12.maxLength((java.lang.Integer) 1);
        io.swagger.oas.models.media.Schema schema49 = schema2.additionalProperties(schema12);
        io.swagger.oas.models.media.Schema schema51 = schema49.addRequiredItem("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: true\n    maxLength: null\n    minLength: 100\n    pattern: #/components/schemas/\n    maxItems: null\n    minItems: null\n    uniqueItems: null\n    maxProperties: null\n    minProperties: 1\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: \n    $ref: null\n    nullable: null\n    readOnly: false\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema51.setDeprecated((java.lang.Boolean) true);
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema54 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema56 = linkArraySchema54.pattern("#/components/schemas/");
        io.swagger.oas.models.media.Schema schema58 = schema56.minItems((java.lang.Integer) 100);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation59 = null;
        io.swagger.oas.models.media.Schema schema60 = schema56.externalDocs(externalDocumentation59);
        io.swagger.oas.models.media.Discriminator discriminator61 = schema56.getDiscriminator();
        schema56.setMaxLength((java.lang.Integer) 100);
        schema51.setAdditionalProperties(schema56);
        io.swagger.oas.models.ExternalDocumentation externalDocumentation65 = null;
        schema51.setExternalDocs(externalDocumentation65);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(int36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(int40);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(discriminator61);
    }

    @Test
    public void test02000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test02000");
        io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]> linkArraySchema0 = new io.swagger.oas.models.media.Schema<io.swagger.oas.annotations.links.Link[]>();
        io.swagger.oas.models.media.Schema schema2 = linkArraySchema0.pattern("#/components/schemas/");
        java.lang.Integer int3 = linkArraySchema0.getMaxProperties();
        io.swagger.oas.models.media.Schema schema5 = linkArraySchema0.readOnly((java.lang.Boolean) false);
        io.swagger.oas.models.media.Schema schema7 = linkArraySchema0.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        io.swagger.oas.models.media.Schema schema9 = schema7.name("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: false\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: \n    maxItems: null\n    minItems: 100\n    uniqueItems: null\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        java.math.BigDecimal bigDecimal10 = null;
        io.swagger.oas.models.media.Schema schema11 = schema9.multipleOf(bigDecimal10);
        io.swagger.oas.models.media.Schema schema13 = schema11.title("class Schema {\n    title: null\n    multipleOf: null\n    maximum: null\n    exclusiveMaximum: null\n    minimum: null\n    exclusiveMinimum: null\n    maxLength: null\n    minLength: null\n    pattern: hi!\n    maxItems: null\n    minItems: 100\n    uniqueItems: false\n    maxProperties: null\n    minProperties: null\n    required: null\n    type: null\n    not: null\n    properties: null\n    additionalProperties: null\n    description: null\n    format: null\n    $ref: null\n    nullable: null\n    readOnly: null\n    writeOnly: null\n    example: null\n    externalDocs: null\n    deprecated: null\n    xml: null\n}");
        schema11.setUniqueItems((java.lang.Boolean) false);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(int3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema13);
    }
}

